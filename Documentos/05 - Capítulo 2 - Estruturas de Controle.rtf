{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Arial;}}
{\*\generator Msftedit 5.41.15.1503;}\viewkind4\uc1\pard\sb100\sa240\lang2070\f0\fs24\line Estruturas de controle \par
\par
\line Objetivos \par
\line\bullet  Entender as t\'e9cnicas b\'e1sicas de solu\'e7\'e3o de problemas. \line\bullet  Ser capaz de desenvolver algoritmos atrav\'e9s do processo \line de refinamento top-down, passo a passo. \line\bullet  Ser capaz de usar as estruturas de sele\'e7\'e3o if, if/else e \line switch para escolher a\'e7\'f5es alternativas. \line\bullet  Ser capaz de usar as estruturas de repeti\'e7\'e3o while. do! \line while e for para executar comandos em um programa repetidamente. \line\bullet  Compreender a repeti\'e7\'e3o controlada por contador e a repeti\'e7\'e3o controlada por sentinelas. \line\bullet  Ser capaz de usar os operadores de incremento, de \line decremento, operadores l\'f3gicos e de atribui\'e7\'e3o. \line\bullet  Ser capaz de usar os comandos de controle de programa \line break e continue. \line  \line Vamos todos dar um passo \'e0 frente. \line ta Lewis Carroll \line e. \line A roda j\'e1 deu uma volta completa. \line William Shakespeare, King Lear \line Quem pode controlar seu destino? \line\bullet  William Shakespeare, Othello \line A chave utilizada \'e9 sempre brilhante. \line Benjamin Franklin \par
100 C++ COMO PROGRAMAR \par
\par
\line\ul Vis\'e3o Geral \par
\ulnone\line 2.1 Introdu\'e7\'e3o \line 2.2 Algoritmos \line 2.3 Pseudoc\'f3digo \line 2.4 Estruturas de controle \line 2.5 A estrutura de sele\'e7\'e3o if \line 2.6 A estrutura de sele\'e7\'e3o if/else \line 2.7 A estrutura de repeti\'e7\'e3o while \line 2.8 Formulando algoritmos: estudo de caso 1 (repeti\'e7\'e3o controlada por contador) \line 2.9 Formulando algoritmos com refinamento top-down, passo a passo: estudo de caso 2 (repeti\'e7\'e3o controlada por sentinela) \line 2.10 Formulando algoritmos com refinamento top-down, passo a passo: estudo de caso 3 (estruturas de controle aninhadas) \line 2.11 Operadores de atribui\'e7\'e3o \line 2.12 Operadores de incremento e decremento \line 2.13 Aspectos essenciais da repeti\'e7\'e3o controlada por contador \line 2.14 A estrutura de repeti\'e7\'e3o for \line 2.15 Exemplos usando a estrutura for \line 2.16 A estrutura de sele\'e7\'e3o m\'faltipla switch \line 2.17 A estrutura de repeti\'e7\'e3o do/while \line 2.18 Os comandos break e continue \line 2.19 Operadores l\'f3gicos \line 2.20 Confundindo os operadores de igualdade (==) e de atribui\'e7\'e3o (=) \line 2.21 Resumo de programa\'e7\'e3o estruturada \line 2.22 (Estudo de caso opcional) Pensando em objetos: identificando \line as classes em um problema \line Resumo\bullet  Terminologia Erros comuns de programa\'e7\'e3o Boas pr\'e1ticas de programa\'e7\'e3o Dicas de desempenho \bullet  Dicas de portabilidade. Observa\'e7\'f5es de engenharia de software Dicas de teste e depura \'e7\'e3o. Exerc\'edcios de auto-revis\'e3o \bullet  Respostas aos exerc\'edcios de auto-revis\'e3o \bullet  Exerc\'edcios \par
\par
\line 2.1 Introdu\'e7\'e3o \par
\par
\line Antes de escrever um programa para resolver um problema particular, \'e9 essencial se ter uma compreens\'e3o cuidadosa e profunda do problema e uma abordagem cuidadosamente planejada para resolver o problema. Ao escrever um programa, \'e9 igualmente essencial entender os tipos de blocos de constru\'e7\'e3o que est\'e3o dispon\'edveis e empregar princ\'edpios testados de constru\'e7\'e3o de programas. Neste cap\'edtulo, discutimos todos estes assuntos em nossa apresenta\'e7\'e3o da teoria e princ\'edpios da programa\'e7\'e3o estruturada. As t\'e9cnicas que voc\'ea aprender\'e1 aqui s\'e3o aplic\'e1veis \'e0 maioria das linguagens de alto n\'edvel, inclusive C++. Quando come\'e7armos nosso tratamento da programa\'e7\'e3o orientada a objetos em C++, no Cap\'edtulo 6, veremos que as estruturas de controle que estudamos aqui no Cap\'edtulo 2 ser\'e3o \'fateis para construir e manipular objetos. \par
\par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 101 \par
\line 2.2 Algoritmos \par
\line Qualquer problema de computa\'e7\'e3o pode ser resolvido executando uma s\'e9rie de a\'e7\'f5es em uma seq\'fc\'eancia espec\'edfica. Um procedimento para resolver um problema em termos \line 1. das a\'e7\'f5es a serem executadas e \line 2. da sequ\'eancia em que estas a\'e7\'f5es devem ser executadas \line\'e9 chamado de algoritmo. O exemplo seguinte demonstra que \'e9 importante especificar corretamente a seq\'fc\'eancia em que as a\'e7\'f5es ser\'e3o executadas. \line Considere o algoritmo de \ldblquote preparar-se para ir trabalhar \ldblquote  seguido por um executivo j\'fanior para sair da cama e \line ir para o trabalho: (1) saia da cama, (2) tire o pijama, (3) tome banho, (4) vista-se, (5) tome o caf\'e9 da manh\'e3 e (6) dirija seu carro para o trabalho. \line Esta rotina leva o executivo para o seu trabalho bem preparado para tomar decis\'f5es cr\'edticas. Suponha que os \line mesmos passos sejam executados em uma seq\'fc\'eancia ligeiramente diferente: (1) saia da cama, (2) tire o pijama, (3) vista-se, (4) tome banho, (5) tome o caf\'e9 da manh\'e3 e (6) dirija seu carro para o trabalho. \line Neste caso, nosso executivo j\'fanior se apresentaria para trabalhar literalmente ensopado. Especificar a seq\'fc\'eancia em que os comandos devem ser executados em um programa de computador \'e9 chamado de controle do programa. Neste cap\'edtulo, investigamos os recursos de controle de programas de C++. \par
\par
\line 2.3 Pseudoc\'f3digo \par
\line O pseudoc\'f3digo \'e9 uma linguagem artificial e informal que ajuda os programadores a desenvolver algoritmos. O pseudoc\'f3digo que apresentamos aqui \'e9 \'fatil para desenvolver algoritmos que ser\'e3o convertidos em programas estruturados em C++. O pseudoc\'f3digo \'e9 semelhante ao ingl\'eas do dia-a-dia; \'e9 conveniente e amig\'e1vel, embora n\'e3o seja uma linguagem de programa\'e7\'e3o real para computadores. \line Os programas em pseudoc\'f3digo n\'e3o s\'e3o realmente executados em computadores. Em vez disso, o pseudoc\'f3digo ajuda o programador a \ldblquote conceber\rdblquote  um programa, antes de tentar escrever o mesmo em uma linguagem de programa\'e7\'e3o tal como C++. Neste cap\'edtulo, damos v\'e1rios exemplos de como o pseudoc\'f3digo pode ser eficazmente usado para desenvolver programas estruturados em C++. \line O estilo de pseudoc\'f3digo que apresentamos consiste puramente em caracteres, de modo que programadores podem escrever programas em pseudoc\'f3digo de maneira conveniente, usando apenas um programa editor. O computador pode exibir uma nova c\'f3pia de um programa em pseudoc\'f3digo quando necess\'e1rio. Um programa em pseudoc\'f3digo cuidadosamente preparado pode ser convertido facilmente em um programa correspondente em C++. Isto \'e9 feito, em muitos casos, simplesmente substituindo os comandos de pseudoc\'f3digo pelos seus equivalentes em C++. \line O pseudoc\'f3digo consiste somente em comandos execut\'e1veis - aqueles que s\'e3o executados quando o programa \'e9 convertido de pseudoc\'f3digo para C++ e \'e9 executado. As declara\'e7\'f5es n\'e3o s\'e3o comandos execut\'e1veis. Por exemplo, a declara\'e7\'e3o \line int i; \line simplesmente diz ao compilador o tipo da vari\'e1vel i e instrui o compilador para reservar espa\'e7o na mem\'f3ria para a vari\'e1vel, mas esta declara\'e7\'e3o n\'e3o provoca nenhuma a\'e7\'e3o - tal como entrada, sa\'edda ou um c\'e1lculo - que deva ocorrer quando o programa \'e9 executado. Alguns programadores escolhem listar as vari\'e1veis e mencionar brevemente o prop\'f3sito de cada uma no in\'edcio de um programa em pseudoc\'f3digo. \par
\line 2.4 Estruturas de controle \par
\line Normalmente, os comandos em um programa s\'e3o executados um depois do outro, na seq\'fc\'eancia em que est\'e3o escritos. Isto \'e9 chamado de execu\'e7\'e3o seq\'fcencial. V\'e1rios comandos de C++ que logo discutiremos permitem ao programador especificar que o pr\'f3ximo comando a ser executado poder ser um outro que n\'e3o o pr\'f3ximo na seq\'fc\'eancia. Isto \'e9 uma transfer\'eancia de controle. \par
\par
\par
102 C++ COMO PROGRAMAR \par
\line Durante os anos 60, tornou-se claro que o uso indiscriminado de transfer\'eancias de controle era a ra\'edz de muitas das dificuldades experimentadas por grupos de desenvolvimento de software. O comando goto foi considerado culpado, porque permite ao programador especificar uma transfer\'eancia de controle para uma variedade muito grande de destinos poss\'edveis em um programa. A no\'e7\'e3o da chamada programa\'e7\'e3o estruturada se tornou quase sin\'f4nimo da \ldblquote elimina\'e7\'e3o de goto\rdblquote . \line A pesquisa de Bohm e Jacopini\rquote  demonstrou que os programas podiam ser escritos sem quaisquer comandos goto. O desafio para os programadores daquela era se tornou mudar seus estilos de programa\'e7\'e3o: \ldblquote escrever programas sem usar o comando goto\rquote . N\'e3o foi sen\'e3o at\'e9 os anos 70 que os programadores come\'e7aram a aceitar a programa\'e7\'e3o estruturada seriamente. Os resultados foram impressionantes, como perceberam grupos de desenvolvimento de software: redu\'e7\'f5es no tempo de desenvolvimento de software, t\'e9rmino dos sistemas dentro do prazo mais freq\'fcente e conclus\'e3o mais freq\'fcente de projetos de software dentro do or\'e7amento. A chave para estes sucessos \'e9 que programas estruturados s\'e3o mais claros, f\'e1ceis de depurar e modificar, e tem maior probabilidade de ser isentos de erros do que os programas n\'e3o estruturados. \line O trabalho de Bohm e Jacopini demonstrou que todos os programas podiam ser escritos em termos de somente tr\'eas estruturas de controle, isto \'e9, a estrutura de seq\'fc\'eancia, a estrutura de sele\'e7\'e3o e a estrutura de repeti\'e7\'e3o. A estrutura de seq\'fc\'eancia est\'e1 embutida em C++. A menos que instru\'eddo contrariamente, o computador executa os comandos de C++ um depois do outro, na seq\'fc\'eancia em que est\'e3o escritos. O segmento defluxograma da Fig. 2.1 ilustra uma estrutura de seq\'fc\'eancia t\'edpica, uma estrutura na qual dois c\'e1lculos s\'e3o executados em seq\'fc\'eancia. \line Um fluxograma \'e9 uma representa\'e7\'e3o gr\'e1fica de um algoritmo ou uma representa\'e7\'e3o de uma parte de um \line algoritmo. Fluxogramas s\'e3o desenhados usando-se certos s\'edmbolos especiais, tais como ret\'e2ngulos, losangos, ovais e pequenos c\'edrculos; estes s\'edmbolos s\'e3o conectados por setas chamadas linhas defluxo. \line Como o pseudoc\'f3digo, os fluxogramas s\'e3o \'fateis para desenvolver e representar algoritmos, embora o pseudoc\'f3digo seja muito mais preferido pela maioria de programadores. Fluxogramas mostram claramente como operam as estruturas de controle; \'e9 por isso que n\'f3s os usamos neste texto. \line Considere o segmento de fluxograma para a estrutura de seq\'fc\'eancia na Fig. 2.1. Usamos o s\'edmbolo de ret\'e2ngulo, tamb\'e9m chamado de s\'edmbolo de a\'e7\'e3o, para indicar qualquer tipo de a\'e7\'e3o, inclusive um c\'e1lculo ou uma opera\'e7\'e3o de entrada/sa\'edda. As linhas de fluxo na figura indicam a seq\'fc\'eancia em que as a\'e7\'f5es devem ser executadas - primeiro, nota deve ser somado a total, ent\'e3o 1 deve ser somado a contador. C++ permite que, em uma estrutura de seq\'fc\'eancia, tenhamos tantas a\'e7\'f5es quantas quisermos. Como logo veremos, em qualquer lugar em que uma \'fanica a\'e7\'e3o pode ser colocada, podemos colocar v\'e1rias a\'e7\'f5es em seq\'fc\'eancia. \line Quando estivermos desenhando um fluxograma que representa um algoritmo completo, uma elipse contendo \line a palavra \ldblquote in\'edcio\rdblquote  ser\'e1 o primeiro s\'edmbolo usado no fluxograma; uma elipse contendo a palavra \ldblquote fim\rdblquote  ser\'e1 o \'faltimo \line total = total + nota; \line contador = contador + 1; \par
Fig. 2.1 Colocando em um fluxograma a estrutura de seq\'fc\'eancia de C++. \par
\par
Bohm, C. and G. Jacopini, \ldblquote Flow Diagrams, Turing Machines, and Languages with Only Two Formation Rules\rdblquote , Communications ofthe ACM. \line Vol. 9, N 5, May 1966, pp. 336-37 1. \par
\par
\par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 103 \par
\line s\'edmbolo usado. Quando estivermos desenhando s\'f3 uma parte de um algoritmo, como na Fig. 2.1, as elipses s\'e3o omitidas; em seu lugar usamos pequenos c\'edrculos, tamb\'e9m chamados de conectores. \line Talvez o mais importante s\'edmbolo na elabora\'e7\'e3o de fluxogramas seja o losango. Tamb\'e9m chamamos o losango de s\'edmbolo de decis\'e3o, um s\'edmbolo que indica que \'e9 necess\'e1rio tomar uma decis\'e3o. Discutiremos o losango na pr\'f3xima se\'e7\'e3o. \line C++ oferece tr\'eas tipos de estruturas de sele\'e7\'e3o. A estrutura de sele\'e7\'e3o if executa (seleciona) uma a\'e7\'e3o se uma condi\'e7\'e3o for true ou pula a a\'e7\'e3o se a condi\'e7\'e3o for false. A estrutura de sele\'e7\'e3o if/else executa uma a\'e7\'e3o se uma condi\'e7\'e3o for true e executa uma a\'e7\'e3o diferente se a condi\'e7\'e3o for false. A estrutura de sele\'e7\'e3o switch executa uma de muitas a\'e7\'f5es diferentes, dependendo do valor de uma express\'e3o inteira. \line A estrutura de sele\'e7\'e3o if \'e9 uma estrutura de sele\'e7\'e3o \'fanica - seleciona ou ignora uma \'fanica a\'e7\'e3o. A estrutura de sele\'e7\'e3o if/else \'e9 uma estrutura de sele\'e7\'e3o dupla - seleciona entre duas a\'e7\'f5es diferentes. A estrutura de sele\'e7\'e3o switch \'e9 uma estrutura de sele\'e7\'e3o m\'faltipla - seleciona a a\'e7\'e3o a ser executada dentre muitas a\'e7\'f5es diferentes. \line C++ fornece tr\'eas tipos de estruturas de repeti\'e7\'e3o, a saber: while, do/while e for. Cada uma das palavras if. else. switch, while, do e for \'e9 uma palavra-chave de C++. Estas palavras s\'e3o reservadas pela linguagem para implementar v\'e1rios recursos, tais como as estruturas de controle de C++. Palavras-chave n\'e3o podem ser usadas como identificadores, tais como nomes de vari\'e1veis. Na Fig. 2.2, \'e9 mostrada uma lista completa das palavras- chave de C++. \line Palavras-chave de C++ \line Palavras-chave comuns \'e0s linguagens de programa\'e7\'e3o Cc C++ \line auto break case char const \line continue default do double else \line enum extern float for goto \line if int long register return \line short signed sizeof static struct \line switch typedef union unsigned void \line volatile while \line Palavras-chave somente de C+ + \line asm bool catch class constcast \line delete dynamiccast explicit false friend \line mime mutable namespace new operator \line private protected public reinterpret_cast \line static_cast template this throw true \line try typeid typename using virtual \line wchart \line Fig. 2.2 Palavras-chave de C++. \par
\line Erro comum de programa\'e7\'e3o 2.1 \line O uso de uma palavra-chave como um identificador \'e9 erro de sintaxe. \par
\line Bem, isso \'e9 tudo! C++ tem s\'f3 sete estruturas de controle: seq\'fc\'eancia, tr\'eas tipos de sele\'e7\'e3o e tr\'eas tipos de repeti\'e7\'e3o. Cada programa em C++ \'e9 formado combinando-se tantas estruturas de cada tipo de estrutura de controle conforme seja necess\'e1rio para o algoritmo que o programa implementa. Como com a estrutura de seq\'fc\'eancia da Fig. 2.1, veremos que cada estrutura de controle \'e9 representada por um fluxograma com dois c\'edrculos pequenos, um no ponto de entrada da estrutura de controle e um no ponto de sa\'edda da estrutura de controle. Estas estruturas de controle de entrada e sa\'edda \'fanicas facilitam a constru\'e7\'e3o de programas - as estruturas de controle s\'e3o ligadas umas \'e0s outras \par
\par
\par
104 C++ COMO PROGRAMAR \par
\line conectando-se o ponto de sa\'edda de uma estrutura de controle ao ponto de entrada da pr\'f3xima estrutura de controle. Isto \'e9 semelhante ao modo que uma crian\'e7a empilha blocos de constru\'e7\'e3o; assim, chamamos a este processo de empilhamento de estruturas de controle. Aprenderemos que existe somente um outro modo para conectar estruturas de controle - chamado de aninhamento de estruturas de controle. \line Observa\'e7\'e3o de engenharia de software 2.1 \line ______ Qualquer programa em C++ que venhamos a construir pode ser constru\'eddo usando-se somente sete tipos diferentes de estruturas de controle (seq\'fc\'eancia, if, if/else, switch, while, do/while e for), combinadas somente de dois modos (empilhamento de estruturas de controle e aninhamento de estruturas de controle). \par
\par
\line 2.5 A estrutura de sele\'e7\'e3o if \par
\line Uma estrutura de sele\'e7\'e3o \'e9 usada para se escolher cursos de a\'e7\'e3o alternativos. Por exemplo, suponha que a nota para passar em um exame seja 60. O comando em pseudoc\'f3digo \line Se a nota do estudante \'e9 maior que ou igual a 60 \line Imprima \ldblquote Aprovado\rdblquote  \line determina se a condi\'e7\'e3o \ldblquote nota do estudante \'e9 maior que ou igual a 60\rdblquote  \'e9 true ou false. Se a condi\'e7\'e3o \'e9 true. ent\'e3o \'e9 impresso \ldblquote Aprovado\rdblquote  e o pr\'f3ximo comando em pseudoc\'f3digo na seq\'fc\'eancia \'e9 \ldblquote executado\rdblquote  (lembre que o pseudoc\'f3digo n\'e3o \'e9 uma linguagem de programa\'e7\'e3o real). Se a condi\'e7\'e3o \'e9 false, o comando de impress\'e3o \'e9 ignorado e o pr\'f3ximo comando em pseudoc\'f3digo na seq\'fc\'eancia \'e9 executado. Note que a segunda linha desta estrutura de sele\'e7\'e3o \'e9 indentada. Tal indenta\'e7\'e3o \'e9 opcional, mas altamente recomendada porque enfatiza a estrutura inerente dos programas estruturados. Quando voc\'ea converter seu pseudoc\'f3digo para o c\'f3digo em C++, o compilador de C++ ignora caracteres de espa\'e7amento, como caracteres em branco, pontos de tabula\'e7\'e3o e caracteres de nova linha, usados para indenta\'e7\'e3o e espa\'e7amento vertical. \par
\line Boa pr\'e1tica de programa\'e7\'e3o 2.1 \line Aplicar consistentemente conven\'e7\'f5es razo\'e1veis de indenta\'e7\'e3o em todos os seus programas melhora muito a legibilidade do programa. Sugerimos uma marca de tabula\'e7\'e3o com um tamanho fixo de cerca de 1/4 de polegada, ou tr\'eas espa\'e7os, por n\'edvel de indenta\'e7\'e3o. \line O comando Se do pseudoc\'f3digo precedente pode ser escrito em C++ como \line if ( nota >= 60) \line cout << \'ab \ldblquote Aprovado\rdblquote ; \line Note que o c\'f3digo em C++ corresponde de maneira pr\'f3xima ao pseudoc\'f3digo. Esta \'e9 uma das propriedades do pseudoc\'f3digo que o torna uma ferramenta \'fatil para o desenvolvimento de programas. \line Boa pr\'e1tica de programa\'e7\'e3o 2.2 \line O pseudoc\'f3digo \'e9freq\'fcentemente usado para \ldblquote bolar\rdblquote  um programa, durante o processo de projeto do mesmo. Ap\'f3s isso, o programa \'e9 convertido de pseudoc\'f3digo para C++. \line O fluxograma da Fig. 2.3 ilustra a estrutura if de sele\'e7\'e3o \'fanica. Este fluxograma cont\'e9m o que talvez seja o mais \line importante s\'edmbolo na elabora\'e7\'e3o de fluxogramas - o losango, tamb\'e9m conhecido como s\'edmbolo de decis\'e3o, que \line indica que uma decis\'e3o deve ser tomada. O s\'edmbolo de decis\'e3o cont\'e9m uma express\'e3o, tal como uma condi\'e7\'e3o, que \line pode ser ou true ou false. O s\'edmbolo de decis\'e3o tem duas linhas de fluxo que saem dele. Uma indica a dire\'e7\'e3o \line a ser seguida quando a express\'e3o dentro do s\'edmbolo \'e9 true; outra indica a dire\'e7\'e3o a ser tomada quando a express\'e3o \par
\par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 105 \par
\line\'e9 false. Aprendemos no Cap\'edtulo 1 que decis\'f5es podem ser baseadas em condi\'e7\'f5es (contendo operadores relacionais ou de igualdade). Na verdade, uma decis\'e3o pode ser tomada com base em qualquer express\'e3o - se o valor da express\'e3o \'e9 zero, ela \'e9 tratada como false se o valor da express\'e3o n\'e3o \'e9 zero, ela \'e9 tratada como true. O padr\'e3o C++ oferece o tipo de dados bool para representar true e false. As palavras-chave true e false s\'e3o usadas para representar valores do tipo bool. \line Note que a estrutura if tamb\'e9m \'e9 uma estrutura de entrada e sa\'edda \'fanicas. Logo aprenderemos que os fluxogramas das demais estruturas de controle podem conter (al\'e9m dos pequenos c\'edrculos e linhas de fluxo) somente ret\'e2ngulos, para indicar as a\'e7\'f5es que devem ser executadas, e losangos, para indicar as decis\'f5es que devem ser tomadas. Este \'e9 o modelo de programa\'e7\'e3o de a\'e7\'e3o/decis\'e3o, que temos enfatizado at\'e9 agora. \line Podemos imaginar sete caixas, cada uma delas contendo somente estruturas de controle de um dos sete tipos. Estas estruturas de controle est\'e3o vazias. Nada est\'e1 escrito nos ret\'e2ngulos ou nos losangos. Assim, a tarefa do programador \'e9 montar um programa juntando tantas pe\'e7as de cada tipo de estrutura de controle de quantas o algoritmo necessite e, ent\'e3o, combinar essas estruturas de controle dos dois modos poss\'edveis (empilhamento ou aninhamento) e preench\'ea-las com a\'e7\'f5es e decis\'f5es de maneira apropriada para o algoritmo. Discutiremos os v\'e1rios modos segundo os quais as a\'e7\'f5es e decis\'f5es podem ser escritas. \par
\line 2.6 A estrutura de sele\'e7\'e3o if/else \par
\line A estrutura de sele\'e7\'e3o if executa uma a\'e7\'e3o indicada s\'f3 quando a condi\'e7\'e3o \'e9 true; caso contr\'e1rio, a a\'e7\'e3o \'e9 saltada. A estrutura de sele\'e7\'e3o if/else permite ao programador especificar que uma a\'e7\'e3o deve ser executada quando a condi\'e7\'e3o \'e9 true e uma a\'e7\'e3o diferente quando a condi\'e7\'e3o \'e9 false. Por exemplo, o comando de pseudoc\'f3digo \line Se a nota do estudante \'e9 maior que ou igual a 60 \line Imprime \ldblquote Aprovado\rdblquote  \line sen\'e3o \line imprime \ldblquote Reprovado\rdblquote  \line imprime Aprovado se a nota do estudante \'e9 maior que ou igual a 60 e imprime Reprovado se a nota do estudante \'e9 menor que 60. Em um caso ou outro, depois de ocorrer a impress\'e3o, o pr\'f3ximo comando de pseudoc\'f3digo da seq\'fc\'eancia \'e9 \ldblquote executado\rdblquote . Note que o corpo do sen\'e3o tamb\'e9m \'e9 indentado. \par
\line Boa pr\'e1tica de programa\'e7\'e3o 2.3 \line Indentar ambos os comandos do corpo de uma estrutura if/else. \line Qualquer que seja a conven\'e7\'e3o de indenta\'e7\'e3o que voc\'ea escolha, ela deve ser aplicada cuidadosamente ao longo de todos os seus programas. \'c9 dif\'edcil ler programas que n\'e3o obedecem a conven\'e7\'f5es de espa\'e7amento uniformes. \par
\par
Fig. 2.3 Representando em fluxograma a estrutura de sele\'e7\'e3o \'fanica if. \par
\par
106 C++ COMO PROGRAMAR \par
\par
\line Boa pr\'e1tica de programa\'e7\'e3o 2.4 \line Se existem v\'e1rios n\'edveis de indenta\'e7\'e3o, cada n\'edvel deve ser indentado pelo mesmo espa\'e7o adicional. \line A estrutura se/sen\'e3o precedente. em pseudoc\'f3digo, pode ser escrita em C++ como \line if ( nota >= 60) \line cout <<  \ldblquote Aprovado\rdblquote ; \line else \line cout << \ldblquote Reprovado\rdblquote ; \line O fluxograma da Fig. 2.4 ilustra bem o fluxo de controle na estrutura if /else. Uma vez mais, note que al\'e9m de c\'edrculos pequenos e setas) os \'fanicos s\'edmbolos no fluxograma s\'e3o ret\'e2ngulos (para a\'e7\'f5es) e um losango (para uma decis\'e3o). Continuamos a enfatizar este modelo de computa\'e7\'e3o com a\'e7\'e3o/decis\'e3o. Imagine novamente uma caixa grande contendo tantas estruturas vazias de sele\'e7\'e3o dupla quantas poderiam ser necess\'e1rias para construir qualquer programa em C++. O trabalho do programador \'e9 juntar estas estruturas de sele\'e7\'e3o (empilhando e aninhando) com quaisquer outras estruturas de controle exigidas pelo algoritmo e preencher os ret\'e2ngulos e losangos vazios com a\'e7\'f5es e decis\'f5es apropriadas ao algoritmo que est\'e1 sendo implementado. \line Fig. 2.4 Representando em fluxograma a estrutura de sele\'e7\'e3o dupla if else. \line C++ oferece o operador condicional (? : ) bastante semelhante \'e0 estrutura i fiel se. O operador condicional \'e9 o \'fanico operador tern\'e1rio de C++ - ele aceita tr\'eas operandos. Os operandos, juntamente com o operador condicional, formam uma express\'e3o condicional. O primeiro operando \'e9 uma condi\'e7\'e3o; o segundo operando \'e9 o valor para a express\'e3o condicional inteira, se a condi\'e7\'e3o \'e9 true; e o terceiro operando \'e9 o valor para a express\'e3o condicional inteira se a condi\'e7\'e3o \'e9 false. Por exemplo, o comando de sa\'edda \line cout << ( nota >= 60 ? \ldblquote Aprovado\rdblquote  \ldblquote Reprovado\rdblquote  ); \line cont\'e9m uma express\'e3o condicional que produz como resultado (valor da express\'e3o) o string Aprovado\rquote  se a condi\'e7\'e3o nota >= 60 for true e produz como resultado o string \ldblquote Reprovado\rdblquote  se a condi\'e7\'e3o for false. Deste modo, o comando com o operador condicional executa essencialmente o mesmo que o comando if/else precedente. Como veremos, a preced\'eancia do operador condicional \'e9 baixa; assim, necessitamos dos par\'eanteses na express\'e3o precedente. \line Os valores em uma express\'e3o condicional tamb\'e9m podem ser a\'e7\'f5es para serem executadas. Por exemplo, a \line express\'e3o condicional \par
1 \par
falso \par
nota >= 60 ? cout << \ldblquote Aprovado" cout << \ldblquote Reprovado"; \par
\par
\par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 107 \par
\par
\'e9 lida como: \ldblquote Se nota \'e9 maior que ou igual a 60 ent\'e3o cout \'ab \ldblquote Aprovado\rdblquote ; sen\'e3o, cout \'ab \ldblquote Reprovado\rdblquote . Isto tamb\'e9m \'e9 compar\'e1vel \'e0 estrutura if/else precedente. Veremos que operadores condicionais podem ser usados em algumas situa\'e7\'f5es onde comandos if/else n\'e3o podem. \line Estruturas if/else aninhadas testam m\'faltiplos casos colocando estruturas de sele\'e7\'e3o if/else dentro de outras estruturas de sele\'e7\'e3o if/else. Por exemplo, o seguinte comando em pseudoc\'f3digo imprimir\'e1 A para notas maiores que ou iguais a 90, B para notas no intervalo de 80 a 89, C para notas no intervalo 70 a 79, D para notas no intervalo 60 a 69 e R para as demais notas. \line Se nota do estudante for maior que ou igual a 90 \line imprima \ldblquote A\rdblquote  \line sen\'e3o \line Se nota do estudante for maior que ou igual a 80 \line Imprima \ldblquote B\rdblquote  \line sen\'e3o \line Se nota do estudante for maior que ou igual a 70 \line Imprima \ldblquote C\rdblquote  \line sen\'e3o \line Se nota do estudante for maior que ou igual a 60 \line Imprima \ldblquote D\rdblquote  \line sen\'e3o \line Imprima \ldblquote R\rdblquote  \line Este pseuc\'f3digo pode ser escrito em como \line if ( nota > 90) \line cout << \ldblquote A\rdblquote ; \line else \line if ( nota > 80) \line cout << \ldblquote B\rdblquote ; \line else \line if ( nota > 70 \line cout << \ldblquote C\rdblquote ; \line else \line if ( nota >= 60) \line cout << \ldblquote D\rdblquote ; \line else \line cout << \ldblquote R\rdblquote ; \line Se nota for maior que ou igual a 90, as quatro primeiras condi\'e7\'f5es ser\'e3o true. mas s\'f3 o comando cout depois do primeiro teste ser\'e1 executado. Depois de cout ser executado, a parte else do comando if/else \ldblquote externo\rdblquote  \'e9 saltada. Muitos programadores de C++ preferem escrever a estrutura if precedente como \line if ( nota > 90 \line cout << \ldblquote A\rdblquote ; \line else if (nota >=80 \line cout \'ab \ldblquote B\rdblquote ; \line else if (nota >70 \line cout \'ab \ldblquote C\rdblquote ; \line else if (nota >=60 \line cout \'ab \ldblquote D\rdblquote ; \line else \par
cout \'ab \ldblquote R\rdblquote ; \par
\par
\par
108 C++ COMO PROGRAMAR \par
\line As duas formas s\'e3o equivalentes. A segunda forma \'e9 mais popular porque evita os n\'edveis de indenta\'e7\'e3o profundos do c\'f3digo para a direita. Tal estilo de indenta\'e7\'e3o freq\'fcentemente deixa pouco espa\'e7o em uma linha, for\'e7ando a quebra de linhas e diminuindo a legibilidade do programa. \par
\line\ul 1Dica \ulnone de desempenho 2.1 \line Uma estrutura if/else aninhada pode ser muito mais r\'e1pida do que uma s\'e9rie de estruturas if de sele\'e7\'e3o \'fanica, por causa da possibilidade de sa\'edda logo na primeira condi\'e7\'e3o satisfeita. \par
\line Dica de desempenho 2.2 \line _____ Em uma estrutura if/else aninhada, teste as condi\'e7\'f5es que s\'e3o mais prov\'e1veis de serem true no in\'edcio da estrutura if/else aninhada. Isso permitir\'e1 que a estrutura if/else aninhada seja executada mais rapidamente, bem como permitir\'e1 uma sa\'edda mais r\'e1pida do que testar primeiro casos pouco freq\'fcentes. \line A estrutura de sele\'e7\'e3o if espera somente um comando no seu corpo. Para incluir v\'e1rios comandos no corpo de um if, inclua os comandos entre chaves ( \{ e \} ). Um conjunto de comandos entre chaves \'e9 chamado de comando composto. \par
\line Observa\'e7\'e3o de engenharia de software 2.2 \line ______ Um comando composto pode ser colocado em qualquer lugar de um programa em que um comando \'fanico pode ser colocado. \line O exemplo a seguir inclui um comando composto na parte else de uma estrutura if/else. if ( nota >= 60 \line cout \'ab \ldblquote Aprovado.\\n\rdblquote ; \line else \{ \line cout << \ldblquote Reprovado.\\n\rdblquote ; \line cout << \ldblquote Voc\'ea deve fazer este curso de novo.\\n\rdblquote ; \line Neste caso, se nota for menor que 60, o programa executa ambos os comandos no corpo do else e imprime \line Reprovado. \line Voc\'ea deve fazer este curso de novo. \line -1 Note as chaves abrangendo os dois comandos na cl\'e1usula else. Estas chaves s\'e3o importantes. Sem elas, o comando cout \'ab Voc\'ea deve fazer este curso de novo.\\n\rdblquote ; \line estaria do lado de fora do corpo da parte else do if e seria executado sempre, mesmo se a nota n\'e3o fosse menor que 60. \par
\line Erro comum de programa\'e7\'e3o 2.2 \line Esquecer uma ou as duas chaves que delimitam um comando composto pode levar a erros de sintaxe ou erros de l\'f3gica em um programa. \par
\line Boa pr\'e1tica de programa\'e7\'e3o 2.5 \line Colocar sempre as chaves em uma estrutura if/else (ou qualquer estrutura de controle) ajuda a prevenir sua omiss\'e3o acidental, especialmente quando adicionarmos comandos \'e0 cl\'e1usula if ou else mais tarde. \par
\par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 109 \par
\line Um erro de sintaxe \'e9 detectado pelo compilador. Um erro de l\'f3gica tem seu efeito durante a execu\'e7\'e3o. Um erro de l\'f3gica fatal faz com que um programa se perca e termine prematuramente. Um erro de l\'f3gica n\'e3o-fatal permite que um programa continue a ser executado, mas o programa pode produzir resultados incorretos. \par
\line Observa\'e7\'e3o de engenharia de software 2.3 \line ______ Da mesma moneira que um comando composto pode ser colocado em qualquer lugar que possa ser colocado um comando \'fanico, tamb\'e9m \'e9 poss\'edvel n\'e3o se ter comando algum, ou seja, um comando vazio. O comando vazio \'e9 representado colocando-se umponto-e-v\'edrgula (;) onde seria normalmente colocado um comando. \par
\line Erro comum de programa\'e7\'e3o 2.3 \line Colocar um ponto-e-v\'edrgula depois da condi\'e7\'e3o em uma estrutura if leva a um erro de l\'f3gica em estruturas if de sele\'e7\'e3o \'fanica e a um erro de sintaxe em estruturas if de sele\'e7\'e3o dupla (se a parte if contiver um comando em seu corpo). \par
\line Boa pr\'e1tica de programa\'e7\'e3o 2.6 \line Alguns programadores preferem digitar as chaves de in\'edcio efim de comandos compostos antes de digitar \line os comandos individuais dentro das chaves. Isto ajuda a evitar a omiss\'e3o de uma ou ambas das chaves. \line Nesta se\'e7\'e3o, introduzimos a no\'e7\'e3o de um comando composto. Um comando composto pode conter declara\'e7\'f5es (como, por exemplo, acontece no corpo de main). Se esse foro caso, o comando composto \'e9 chamado de bloco. As declara\'e7\'f5es em um bloco s\'e3o normalmente colocadas no in\'edcio do bloco, antes de quaisquer comandos de a\'e7\'e3o; mas as declara\'e7\'f5es podem ser misturadas com comandos de a\'e7\'e3o. Discutiremos o uso de blocos no Cap\'edtulo 3. O leitor deve evitar usar blocos at\'e9 este cap\'edtulo (exceto o corpo de main, claro). \par
\par
\line 2.7 A estrutura de repeti\'e7\'e3o while \par
\line Uma estrutura de repeti\'e7\'e3o permite ao programador especificar que uma a\'e7\'e3o deve ser repetida enquanto alguma condi\'e7\'e3o for verdadeira. O comando de pseudoc\'f3digo \line Enquanto existirem mais itens em minha lista de compras \line Comprar pr\'f3ximo item e exclu\'ed-lo da minha lista \line descreve a repeti\'e7\'e3o que acontece durante uma sa\'edda para compras. A condi\'e7\'e3o \ldblquote existirem mais itens em minha lista de compras\rdblquote  pode ser verdadeira ou falsa. Se ela for verdadeira, ent\'e3o a a\'e7\'e3o, \ldblquote Comprar pr\'f3ximo item e exclu\'ed-lo da minha lista\rdblquote  \'e9 executada. Esta a\'e7\'e3o ser\'e1 repetidamente executada, enquanto a condi\'e7\'e3o for true. O(s) comando(s) contidos na estrutura de repeti\'e7\'e3o while constituem o corpo do while. O corpo da estrutura while pode ser um comando \'fanico ou um comando composto. Em algum momento, a condi\'e7\'e3o se tornar\'e1 false (quando o \'faltimo item da lista de compras foi comprado e exclu\'eddo da mesma). Neste momento, a repeti\'e7\'e3o termina e o primeiro comando de pseudoc\'f3digo ap\'f3s a estrutura de repeti\'e7\'e3o \'e9 executado. \par
\line Erro comum de programa\'e7\'e3o 2.4 \line N\'e3o fornecer no corpo de uma estrutura while, uma a\'e7\'e3o que fa\'e7a com que a condi\'e7\'e3o na estrutura while se torne false em algum momento normalmente resulta em um erro chamado \ldblquote la\'e7o infinito \ldblquote , no qual a estrutura de repeti\'e7\'e3o nunca termina de ser executada. \par
\line Erro comum de programa\'e7\'e3o 2.5 \line Escrever a palavra-chave while com um W mai\'fasculo, como em While, \'e9 um erro de sintaxe (lembre-se de que C++ \'e9 uma linguagem sens\'edvel a mai\'fasculas e min\'fasculas). Todas as palavras-chave reservadas de C++, tais como while, if e else, cont\'eam somente letras min\'fasculas. \par
\par
110 C++ COMO PROGRAMAR \par
\par
Como exemplo de um while real, considere um segmento de programa projetado para achar a primeira pot\'eancia de 2 maior do que 1000. Suponha que a vari\'e1vel produto inteira tenha sido inicializada com 2. Quando a estrutura de repeti\'e7\'e3o while a seguir terminar de ser executada, produto conter\'e1 a resposta desejada: \line int produto = 2; \line while ( produto <= 1000) \line produto = 2 * produto; \line O fluxograma da Fig. 2.5 ilustra o fluxo de controle na estrutura while que corresponde \'e0 estrutura while precedente. Uma vez mais, note que (al\'e9m de pequenos c\'edrculos e setas) o fluxograma cont\'e9m s\'f3 um ret\'e2ngulo e um losango. Imagine uma caixa grande cheia de estruturas while vazias que podem ser empilhadas e aninhadas com outras estruturas de controle, para formar uma implementa\'e7\'e3o estruturada do fluxo de controle de um algoritmo. Os ret\'e2ngulos e losangos vazios s\'e3o ent\'e3o preenchidos com a\'e7\'f5es e decis\'f5es apropriadas. O fluxograma mostra claramente a repeti\'e7\'e3o. A linha de fluxo que emerge do ret\'e2ngulo retorna \'e0 decis\'e3o, que \'e9 testada toda vez no la\'e7o, at\'e9 que se torne false. Ent\'e3o, a estrutura while termina e o controle passa para o pr\'f3ximo comando no programa. \line Quando a estrutura while come\'e7a a ser executada, o valor de produto \'e9 2. A vari\'e1vel produto \'e9 repetidamente multiplicada por 2, assumindo os valores 4, 8, 16, 32, 64, 128, 256, 512 e 1024, sucessivamente. Quando produto se tornar 1024, a condi\'e7\'e3o da estrutura while, produto <= 1000. se torna false. Isto termina a \line repeti\'e7\'e3o - o valor final de produto \'e9 1024. A execu\'e7\'e3o do programa continua com o pr\'f3ximo comando depois do while. \par
2.8 Formulando algoritmos: estudo de caso 1 \par
\line (repeti\'e7\'e3o controlada por contador) \line Para ilustrar como os algoritmos s\'e3o desenvolvidos, resolveremos diversas variantes do problema de calcular a m\'e9dia de uma turma. Considere o seguinte problema: \line Uma turma de dez estudantes resolve um teste. As notas (inteiros no intervalo de O a 100) dadas \'e0 solu\'e7\'e3o deste teste est\'e3o dispon\'edveis para voc\'ea. Determine a m\'e9dia das notas da turma para a solu\'e7\'e3o do teste. \line A m\'e9dia da classe \'e9 igual \'e0 soma das notas dividida pelo n\'famero de estudantes. O algoritmo para resolver este problema em um computador deve receber como entrada cada uma das notas, executar o c\'e1lculo da m\'e9dia e imprimir o resultado. \line Usemos pseudoc\'f3digo para listar as a\'e7\'f5es que devem ser executadas e para especificar a ordem em que estas a\'e7\'f5es devem ser executadas. Usamos uma repeti\'e7\'e3o controlada por contador para fornecer como entrada as notas, \par
Fig. 2.5 Representando em fluxograma a estrutura de repeti\'e7\'e3o while. \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 111 \line uma de cada vez. Esta t\'e9cnica usa uma vari\'e1vel chamada de contador, para controlar o n\'famero de vezes que um conjunto de comandos ser\'e1 executado. Neste exemplo, a repeti\'e7\'e3o termina quando o contador exceder 10. Nesta se\'e7\'e3o, apresentamos um algoritmo em pseudoc\'f3digo (Fig. 2.6) e o programa correspondente (Fig. 2.7). Na pr\'f3xima se\'e7\'e3o, mostramos como algoritmos em pseudoc\'f3digo s\'e3o desenvolvidos. A repeti\'e7\'e3o controlada por contador \'e9 chamada, freq\'fcentemente, de repeti\'e7\'e3o definida, porque o n\'famero de repeti\'e7\'f5es \'e9 conhecido antes de o la\'e7o come\'e7ar a ser executado. \line Note as refer\'eancias no algoritmo a um total e a um contador. Um total \'e9 uma vari\'e1vel usada para acumular a soma de uma s\'e9rie de valores. Um contador \'e9 uma vari\'e1vel usada para contar - neste caso, contar o n\'famero de notas lidas. As vari\'e1veis que s\'e3o usadas para armazenar totais devem ser normalmente inicializadas com zero antes de serem usadas em um programa; caso contr\'e1rio, a soma incluir\'e1 o valor armazenado anteriormente na posi\'e7\'e3o de mem\'f3ria do total. \line As linhas 11a 14 \line int total, // soma das notas \line gradeCounter, // n\'famero de notas digitadas \line grade, // uma nota \line average; // m\'e9dia das notas \line declaram as vari\'e1veis total, gradeCounter. grade e average como sendo do tipo int. A vari\'e1vel grade vai armazenar o valor que o usu\'e1rio fornece para o programa. \line Inicialize total com zero \line Inicialize contador de notas com um \line Enquanto o contador de notas for menor do que ou igual a dez \line Receba como entrada a pr\'f3xima nota \line Some a nota ao total \line Some um ao contador de notas \line Atribua \'e0 m\'e9dia da turma ao total dividido por dez \line Imprima a m\'e9dia da turma \line Fig. 2.6 Algoritmo em pseudoc\'f3digo que usa repeti\'e7\'e3o controlada por contador para resolver o problema da m\'e9dia da turma. \line 1 // Fig. 2.7: figO2O7.cpp \line 2 // Programa de m\'e9dia da turma com repeti\'e7\'e3o controlada por contador \line 3 #include <iostream> \line 4 \line 5 using std: :cout; \line 6 using std: :cin; \line 7 using std: :endl; \line 8 \line 9 intmain () \line 10 \{ \line 11 int total, // soma das notas \line 12 gradeCounter, // n\'famero de notas digitadas \line 13 grade, 1/ uma nota \line 14 average; // m\'e9dia das notas \line 15 \line 16 // fase de inicializa\'e7\'e3o \line 17 total = 0; // limpa total \line 18 gradeCounter = 1; // prepara para executar o la\'e7o \line Fig. 2.7 Programa em C++ e exemplo de execu\'e7\'e3o para o problema de c\'e1lculo da m\'e9dia da turma com repeti\'e7\'e3o controlada por contador (parte 1 de 2). \par
112 C++ Como PROGRAMAR \par
19 \line 20 \line 21 \line 22 \line 23 \line 24 \line 25 \line 26 \line 27 \line 28 \line 29 \line 30 \line 31 \line 32 \line 33 1 \par
// fase de processamento \line while ( gradeCounter < 10 \line cout  << "Forne\'e7a nota:"; \line cin >> grade; \line total = total +grade; \line gradeCounter = gradeCounter + 1; \line // fase de t\'e9rmino \line average = total / 10; \line cout \'ab \ldblquote A m\'e9dia da turma \'e9 \ldblquote  \'ab \par
return 0; \par
total = 0; \line gradeCounter = 1; \par
\ul Boa pr\'e1tica de programa\'e7\'e3o 2.7 \ulnone inicialize contadores e totais. \line Boa pr\'e1tica de programa\'e7\'e3o 2.8 \par
1// repete 10 vezes \line // solicita entrada de dados\par
 // l\'ea nota digitada \line // soma nota ao total\par
 // incrementa contador \line // divis\'e3o inteira average \'ab endi; \par
// indica que o programa terminou normalmente \par
Fig. 2.7 Programa em C++ e exemplo de execu\'e7\'e3o para o problema de c\'e1lculo da m\'e9dia da turma com repeti\'e7\'e3o controlada por contador (parte 2 de 2). \line Observe que as declara\'e7\'f5es precedentes aparecem no corpo da fun\'e7\'e3o main. Lembre-se de que vari\'e1veis declaradas no corpo da defini\'e7\'e3o de uma fun\'e7\'e3o s\'e3o vari\'e1veis locais e podem ser usadas somente a partir da linha em que s\'e3o declaradas na fun\'e7\'e3o at\'e9 a chave \'e0 direita ( \} ) de t\'e9rmino da defini\'e7\'e3o de fun\'e7\'e3o. A declara\'e7\'e3o de uma vari\'e1vel local em uma fun\'e7\'e3o deve aparecer antes que a vari\'e1vel seja usada nesta fun\'e7\'e3o. \line As linhas 17 e 18 \par
// limpa total \line // prepara para executar o la\'e7o \par
s\'e3o comandos de atribui\'e7\'e3o que inicializam total com O e gradeCounter com 1. \line Note que as vari\'e1veis total e gradeCounter s\'e3o inicializadas antes de serem usadas em um c\'e1lculo. As vari\'e1veis contadoras s\'e3o normalmente inicializadas com zero ou um, dependendo de seu uso (apresentaremos exemplos mostrando cada um destes usos). Uma vari\'e1vel n\'e3o-inicializada cont\'e9m valor lixo (tamb\'e9m chamado de valor indefinido) - o \'faltimo valor armazenado na posi\'e7\'e3o de mem\'f3ria reservada para aquela vari\'e1vel. \line Erro comum de programa\'e7\'e3o 2.6 \line Se um contador ou total n\'e3o \'e9 inicializado, os resultados do seu programa provavelmente ser\'e3o incorretos. Este \'e9 um exemplo de erro de l\'f3gica. \par
Declare cada vari\'e1vel em uma linha separada. \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1704\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2246\pard\intbl Forne\'e7a \cell nota: \cell 98 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1704\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2246\pard\intbl Forne\'e7a \cell nota: \cell 76 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1704\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2246\pard\intbl Forne\'e7a \cell nota: \cell 71 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1704\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2246\pard\intbl Forne\'e7a \cell nota: \cell 87 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1704\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2246\pard\intbl Forne\'e7a \cell nota: \cell 83 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1704\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2246\pard\intbl Forne\'e7a \cell nota: \cell 90 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1704\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2246\pard\intbl Forne\'e7a \cell nota: \cell 57 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1704\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2246\pard\intbl Forne\'e7a \cell nota: \cell 79 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1704\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2246\pard\intbl Forne\'e7a \cell nota: \cell 82 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1704\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2246\pard\intbl Forne\'e7a nota\cell : \cell 94 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2246\pard\intbl A m\'e9dia \cell da turma \'e9 81 \cell\row\pard\par
\pard\sb100\sa240 CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 113 \par
A linha 21 \line while ( gradeCounter <= 10 ) \{ // repete 10 vezes \line indica que a execu\'e7\'e3o da estrutura while deve continuar enquanto o valor de gradeCounter for menor que ou igual a 10. \line As linhas 22 e 23 \line cout << \ldblquote Forne\'e7a nota: \ldblquote ; // solicita entrada de dados \line cin >> grade; // l\'ea nota digitada \line correspondemte ao comando em pseudoc\'f3digo \ldblquote Insira a pr\'f3xima nota\rdblquote . O primeiro comando exibe o prompt \ldblquote Forne\'e7a nota:\rdblquote  na tela. O segundo comando l\'ea o valor da nota digitada pelo usu\'e1rio. \line A seguir, o programa atualiza total com a nova nota digitada pelo usu\'e1rio. A linha 24 \line total = total + grade; /1 soma nota a total \line soma grade ao valor anterior de total e atribui o resultado a total. \line Agora, o programa est\'e1 pronto para incrementar a vari\'e1vel gradeCounter, para indicar que uma nova nota foi processada, e ent\'e3o ler a pr\'f3xima nota digitada pelo usu\'e1rio. A linha 25 \line gradeCounter = gradeCounter + 1; // incrementa contador \line //soma 1 a gradeCounter, de modo que a condi\'e7\'e3o na estrutura while vai, em algum momento, tornar-se falsa //e terminar o la\'e7o. \line A linha 29 \line average = total / 10; // divis\'e3o inteira \line atribui o resultado do c\'e1lculo da m\'e9dia \'e0 vari\'e1vel average. A linha 30 \line cout \'ab \ldblquote A m\'e9dia da turma \'e9 \ldblquote  \'ab average \'ab endl; \line exibe o string \ldblquote A m\'e9dia da turma \'e9\rdblquote  seguido pelo valor da vari\'e1vel average. \line Note que o c\'e1lculo da m\'e9dia no programa produziu um resultado inteiro. Na verdade, a soma das notas neste exemplo \'e9 817, que, quando dividido por 10, d\'e1 81,7, isto \'e9, um n\'famero com uma fra\'e7\'e3o decimal. Veremos como lidar com tais n\'fameros (chamados de n\'fameros de ponto-flutuante) na pr\'f3xima se\'e7\'e3o. \line Erro comum de programa\'e7\'e3o 2.7 \line Em um la\'e7o controlado por um contador como o contador do la\'e7o (que est\'e1 sendo incrementado por um a cada repeti\'e7\'e3o do la\'e7o) ao final das repeti\'e7\'f5es fica com um valor que \'e9 um a mais que seu \'faltimo valor leg\'edtimo (i.i., 11 no caso de \ldblquote contar de 1 at\'e9 10\rdblquote ), usar o valor do contador em um c\'e1lculo depois do la\'e7o freq\'fcentemente \'e9 um erro do tipo \ldblquote um a mais que o esperado \line Na Fig. 2.7, se na linha 29 tiv\'e9ssemos usado gradeCounter em lugar de 10 para o c\'e1lculo, a sa\'edda deste programa mostraria um valor incorreto de 74. \par
\par
2.9 Formulando algoritmos com refinamento top-down, passo \line a passo: estudo de caso 2 (repeti\'e7\'e3o controlada por sentinela) \par
\line Vamos generalizar o problema da m\'e9dia da turma. Considere o seguinte problema: \line Desenvolva um programa que calcula a m\'e9dia da turma e que processa um n\'famero arbitr\'e1rio de notas cada vez que o programa \'e9 executado. \par
\par
\par
114 C++ COMO PROGRAMAR \par
\line No primeiro exemplo de m\'e9dia da turma, o n\'famero de notas (10) era conhecido com anteced\'eancia. Neste exemplo, nenhuma indica\'e7\'e3o \'e9 dada de quantas notas ser\'e3o digitadas. O programa deve processar um n\'famero arbitr\'e1rio de notas. Como o programa pode determinar quando parar a leitura de notas? Como ele saber\'e1 quando calcular e imprimir a m\'e9dia da turma? \line Um modo de resolver este problema \'e9 usar um valor especial, chamado de valor de sentinela (tamb\'e9m chamado de valor sinalizador ou valor artificial), para indicar o \ldblquote fim de entrada de dados\rdblquote . O usu\'e1rio, ent\'e3o, digita as notas at\'e9 que todas as notas v\'e1lidas foram lidas. O usu\'e1rio, ent\'e3o, digita o valor de sentinela para indicar que a \'faltima nota foi lida. A repeti\'e7\'e3o controlada por sentinela \'e9 freq\'fcentemente chamada de repeti\'e7\'e3o indefinida, porque o n\'famero de repeti\'e7\'f5es n\'e3o \'e9 conhecido antes de o la\'e7o come\'e7ar a ser executado. \line Naturalmente, o valor de sentinela deve ser escolhido de forma que n\'e3o possa ser confundido com um valor aceit\'e1vel fornecido como entrada. Como as notas de um teste normalmente s\'e3o inteiros n\'e3o-negativos, -1 \'e9 um valor de sentinela aceit\'e1vel para este problema. Deste modo, uma execu\'e7\'e3o do programa para calcular a m\'e9dia da turma pode processar um stream de dados de entrada, tal como 95, 96, 75, 74, 89 e -1. O programa, ent\'e3o, computaria e imprimiria a m\'e9dia da turma para as notas 95, 96, 75,74 e 89 (-1 \'e9 o valor de sentinela: assim, ele n\'e3o deve entrar no c\'e1lculo da m\'e9dia). \par
\line Erro comum de programa\'e7\'e3o 2.8 \line Escolher um valor de sentinela que \'e9 tamb\'e9m um valor de dados v\'e1lido \'e9 um erro de l\'f3gica. \line Abordamos o programa que calcula a m\'e9dia da turma com uma t\'e9cnica chamada refinamento top-down passo a passo, uma t\'e9cnica essencial para o desenvolvimento de programas bem-estruturados. Come\'e7amos com uma representa\'e7\'e3o em pseudoc\'f3digo do top: \line Determine a m\'e9dia da turma para o teste \line O topo \'e9 uma \'fanica afirma\'e7\'e3o, que exp\'f5e a fun\'e7\'e3o global do programa. Como tal, o topo \'e9, na realidade, uma representa\'e7\'e3o completa de um programa. Infelizmente, o topo (como neste caso) raramente traz uma quantidade suficiente de detalhes para escrever o programa em C++. Assim, come\'e7amos agora o processo de refinamento. Dividimos o topo em uma s\'e9rie de tarefas pequenas e listamos estas tarefas na ordem em que necessitam ser executadas. Isto resulta no seguinte primeiro refinamento: \line Inicializar vari\'e1veis \line Receber os dados de entrada, somar e contar as notas do teste \line Calcular e imprimir a m\'e9dia da turma \line Aqui, foi usada somente a estrutura de seq\'fc\'eancia - os passos listados devem ser executados na ordem, um depois do outro. \par
\line Observa\'e7\'e3o de engenharia de software 2.4 \line Cada refinamento, bem como o pr\'f3prio topo, \'e9 uma especifica\'e7\'e3o completa do algoritmo; s\'f3 varia o n\'edvel \line de detalhe. \par
\line Observa\'e7\'e3o de engenharia de software 2.5 \line Muitos programas podem ser logicamente divididos em tr\'eas fases: uma fase de inicializa\'e7\'e3o, que inicializa as vari\'e1veis do programa; uma fase de processamento, que recebe como entrada valores de dados e ajusta as vari\'e1veis do programa de acordo; e uma fase de finaliza\'e7\'e3o, que calcula e imprime os resultados finais. \par
\line A observa\'e7\'e3o de engenharia de software precedente \'e9 freq\'fcentemente de tudo que voc\'ea necessita para o primeiro refinamento, seguindo o processo top-down. Para executar o pr\'f3ximo n\'edvel de refinamento, isto \'e9, o segundo refinamento, comprometemo-nos com vari\'e1veis espec\'edficas. Necessitamos executar um c\'e1lculo do total dos n\'fameros, contar \par
\par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 115 \par
\line quantos n\'fameros foram processados, uma vari\'e1vel para receber o valor de cada nota como \'e9 fornecido na entrada e uma vari\'e1vel para guardar a m\'e9dia calculada. O comando de pseudoc\'f3digo \line Inicializar vari\'e1veis \line pode ser refinado como segue: \line Inicializar total com zero \line Inicializar contador com zero \line Note que s\'f3 as vari\'e1veis total e contador necessitam ser inicializadas antes de serem usadas; as vari\'e1veis m\'e9dia e nota (para a m\'e9dia calculada e a entrada do usu\'e1rio, respectivamente) n\'e3o necessitam ser inicializadas, porque seus valores ser\'e3o sobrescritos \'e0 medida que s\'e3o calculados ou lidos. \line O comando de pseudoc\'f3digo \line Receber os dados de entrada, somar e contar as notas do teste \line exige uma estrutura de repeti\'e7\'e3o (i.e., um la\'e7o) que sucessivamente recebe como entrada cada nota. Como n\'e3o sabemos com anteced\'eancia quantas notas ser\'e3o processadas, usaremos uma repeti\'e7\'e3o controlada por sentinela, O usu\'e1rio digitar\'e1 notas v\'e1lidas, uma de cada vez. Depois da \'faltima nota v\'e1lida ser digitada, o usu\'e1rio digitar\'e1 o valor sentinela. O programa testar\'e1 se foi lido o valor sentinela, ap\'f3s cada nota ser digitada, terminando o la\'e7o quando o valor sentinela \'e9 digitado pelo usu\'e1rio, O segundo refinamento do comando de pseudoc\'f3digo precedente fica ent\'e3o: \line Receba como entrada a primeira nota (possivelmente a sentinela) \line Enquanto o usu\'e1rio ainda n\'e3o digitou a sentinela \line Some esta nota ao total corrente \line Some um ao contador de notas \line Receba como entrada a pr\'f3xima nota (possivelmente a sentinela) \line Note que, em pseudoc\'f3digo, n\'e3o usamos chaves em torno do conjunto de comandos que forma o corpo da estrutura \line enquanto. Simplesmente indentamos os comandos sob o enquanto para mostrar que eles pertencem ao mesmo. \line Novamente, o pseudoc\'f3digo \'e9 s\'f3 uma ajuda informal para o desenvolvimento de programas. \line O comando de pseudoc\'f3digo \line Calcule e imprima a m\'e9dia da turma \line pode ser refinado como segue: \line Se o contador n\'e3o \'e9 igual a zero \line Inicialize a m\'e9dia com o total dividido pelo contador \line imprima a m\'e9dia \line sen\'e3o \line imprima \ldblquote Nenhuma nota foifornecida\rdblquote  \line Note que estamos sendo cuidadosos aqui, testando a possibilidade de divis\'e3o por zero - um erro fatal de l\'f3gica, que se n\'e3o for detectado far\'e1 o programa terminar anormalmente (freq\'fcentemente chamado \ldblquote abortar\rdblquote ). O segundo refinamento completo do pseudoc\'f3digo para o problema da m\'e9dia da turma \'e9 mostrado na Fig. 2.8. \par
\line 1 Erro comum de programa\'e7\'e3o 2.9 \line Uma tentativa de dividir por zero causa um erro fatal. \par
\par
116 C++ COMO PROGRAMAR \par
\line Boa pr\'e1tica de programa\'e7\'e3o 2.9 \line Quando executar uma divis\'e3o por uma express\'e3o cujo valor pode ser zero, teste explicitamente esta possibilidade e trate-a apropriadamente em seu programa (tal como ao imprimir uma mensagem de erro), em vez de permitir que aconte\'e7a o erro fatal. \line Na Fig. 2.6 e na Fig. 2.8, inclu\'edmos algumas linhas completamente em branco no pseudoc\'f3digo, para tornar o pseudoc\'f3digo mais leg\'edvel. As linhas em branco separam estes programas em suas v\'e1rias fases. \line O algoritmo em pseudoc\'f3digo na Fig. 2.8 resolve a classe mais geral de problemas de c\'e1lculo da m\'e9dia. Este algoritmo foi desenvolvido ap\'f3s somente dois n\'edveis de refinamento. As vezes, mais n\'edveis s\'e3o necess\'e1rios. \line Inicializar total com zero. \line Inicializar contador com zero \line Receba como entrada a primeira nota (possivelmente a sentinela) \line Enquanto o usu\'e1rio ainda n\'e3o digitou a sentinela \line Some esta nota ao total corrente \line Some um ao contador de notas \line Receba como entrada a pr\'f3xima nota (possivelmente a sentinela) \line Se o contador n\'e3o for igual a zero \line Inicialize a m\'e9dia com o total dividido pelo contador \line Imprima a m\'e9dia \line Sen\'e3o \line Imprima \ldblquote Nenhuma nota foi fornecida\rdblquote  \line Fig. 2.8 Algoritmo em pseudoc\'f3digo que usa repeti\'e7\'e3o controlada por sentinela para resolver o problema da m\'e9dia da turma. \par
\line Observa\'e7\'e3o de engenharia de software 2.6 \par
\line O programador termina o processo de refinamento top-down passo a passo quando o algoritmo em pseudoc\'f3digo est\'e1 especificado em detalhes suficientes para o programador ser capaz de converter o pseudoc\'f3digo para C++. Implementar o programa em C++ \'e9 ent\'e3o, normalmente, um processo direto. \line O programa em C++ e um exemplo de execu\'e7\'e3o s\'e3o mostrados na Fig. 2.9. Embora somente notas de tipo inteiro sejam fornecidas, \'e9 prov\'e1vel que o c\'e1lculo da m\'e9dia produza um n\'famero com fra\'e7\'e3o decimal, i.e., um n\'famero real. O tipo int n\'e3o pode representar n\'fameros reais. O programa introduz o tipo de dados double para tratar n\'fameros com ponto decimal (tamb\'e9m chamados de n\'fameros de ponto-flutuante) e introduz um operador especial chamado de operador de coer\'e7\'e3o para for\'e7ar o c\'e1lculo da m\'e9dia a produzir um resultado num\'e9rico em ponto flutuante. Estes recursos s\'e3o explicados em detalhes depois de o programa ser apresentado. \line Neste exemplo, vemos que estruturas de controle podem ser empilhadas uma em cima da outra (em seq\'fc\'eancia) da mesma maneira que uma crian\'e7a empilha blocos de constru\'e7\'e3o. A estrutura while (linhas 30 a 35) \'e9 seguida imediatamente por uma estrutura if/else (linhas 38 a 45) em seq\'fc\'eancia. A maior parte do c\'f3digo neste programa \'e9 id\'eantica ao c\'f3digo na Fig. 2.7, de modo que nos concentramos, neste exemplo, nos recursos e t\'f3picos novos. \line A linha 20 declara double a vari\'e1vel average. Esta mudan\'e7a nos permite armazenar o resultado do c\'e1lculo da m\'e9dia da turma como um n\'famero em ponto flutuante. A linha 24 inicializa a vari\'e1vel gradeCounter com 0, porque ainda n\'e3o havia sido digitada nenhuma nota. Lembre-se de que este programa usa repeti\'e7\'e3o controlada por sentinela. Para manter um registro preciso do n\'famero de notas digitadas, a vari\'e1vel gradeCounter \'e9 incrementada somente quando um valor de nota v\'e1lido \'e9 digitado. \line Observe que os dois comandos de entrada (linhas 28 e 34) \line cin >> grade; \line s\'e3o precedidos por um comando de sa\'edda que solicita ao usu\'e1rio os dados de entrada. \par
\par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 117 \par
\line 1 // Fig. 2.9: figo2_09.cpp \line 2 // Programa para c\'e1lculo da m\'e9dia da turma c/repeti\'e7\'e3o controlada por sentinela. \line 3 #include <iostream> \line 4 \line 5 using std: :cout; \line 6 using std::cin; \line 7 using std: :endl; \line 8 using std::ios; \line 9 \line 10 #include <iomanip> \line 11 \line 12 using std::setprecision; \line 13 using std: :setiosflags; \line 14 \line 15 int main ()\line 16 \line 17 int total, // soma das notas \line 18 gradeCounter, // n\'famero de notas digitadas \line 19 grade; // uma nota \line 20 double average; // n\'famero com ponto decimal para a m\'e9dia \line 21 \line 22 // fase de inicializa\'e7\'e3o \line 23 total = 0; \line 24 gradeCounter = 0; \line 25 \line 26 // fase de processamento \line 27 cout\'ab << "Forne\'e7a nota ou -1 para finalizar: ";\line 28 cin >> grade; \line 29 \line 30 while ( grade != -1 \line 31 total = total + grade; \line 32 gradeCounter = gradeCounter + 1; \line 33 cout << \ldblquote Forne\'e7a nota ou -1 para finalizar:" \line 34 cin >>  grade; \line 35 \line 36 \line 37 // fase de t\'e9rmino \line 38 if ( gradeCounter != 0 )\line 39 average = static_cast< double >( total ) / gradeCounter; \line 40 cout << "A m\'e9dia da turma \'e9 \ldblquote  << setprecision ( 2 )\line 41 \'ab setiosflags( ios::fixed 1 ios::showpoint \line 42 \'ab average \'ab endl; \line 43 \} \line 44 else \line 45 cout << \ldblquote Nenhuma nota foi fornecida\rdblquote  << endl; \line 46 \line 47 return 0; // indica que o programa terminou com sucesso \line 48 \par
Fig. 2.9 Programa em C++ e exemplo de execu\'e7\'e3o para o problema de c\'e1lculo da m\'e9dia da turma com \par
\par
repeti\'e7\'e3o controlada por sentinela (parte 1 de 2). \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1382\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1791\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2200\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2801\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3978\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4387\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4856\pard\intbl Forne\par
\'e7a \cell nota \cell ou \cell -1 \cell para \cell finalizar: \cell 75 \cell 1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1382\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1791\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2200\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2801\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3978\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4387\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4856\pard\intbl Forne\'e7a \cell nota \cell ou \cell -1 \cell para \cell finalizar: \cell 94 \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1382\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1791\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2200\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2801\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3978\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4387\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4856\pard\intbl Forne\'e7a \cell nota \cell ou \cell -1 \cell para \cell finalizar: \cell 97 \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx781\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1382\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1791\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2200\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2801\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3978\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4387\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4856\pard\intbl Forne\'e7a \cell nota \cell ou \cell -1 \cell para \cell finalizar: \cell 88 \cell 1 \cell\row\pard\par
\pard\sb100\sa240 118 C++ COMO PROGRAMAR \par
Forne\'e7a nota ou -1 para finalizar: 70 \line Forne\'e7a nota ou -1 para finalizar: 64 \line Forne\'e7a nota ou -1 para finalizar: 83 \line Forne\'e7a nota ou -1 para finalizar: 89 \line Forne\'e7a nota ou -1 para finalizar: -1 \line A m\'e9dia da turma \'e9 82,50 \line Fig. 2.9 Programa em C++ e exemplo de execu\'e7\'e3o para o problema de c\'e1lculo da m\'e9dia da turma com repeti\'e7\'e3o controlada por sentinela (parte 2 de 2). \par
\line Boa pr\'e1tica de programa\'e7\'e3o 2. 10 \line Solicite explicitamente ao usu\'e1rio cada entrada pelo teclado, O lembrete deve indicar a forma da entrada e quaisquer valores de entrada especiais que devam ser fornecidos (tal como o valor de sentinela que o usu\'e1rio deve digitar para terminar um la\'e7o). \par
\line Boa pr\'e1tica de programa\'e7\'e3o 2. 11 \line Em um la\'e7o controlado por sentinela, os lembretes solicitando entrada de dados deveriam lembrar explicitamente ao usu\'e1rio qual \'e9 o valor de sentinela. \line Estude a diferen\'e7a entre a l\'f3gica do programa para repeti\'e7\'e3o controlada por sentinela, comparada com aquela para a repeti\'e7\'e3o controlada por contador na Fig. 2.7. Na repeti\'e7\'e3o controlada por contador, lemos um valor digitado pelo usu\'e1rio durante cada itera\'e7\'e3o da estrutura while, pelo n\'famero especificado de itera\'e7\'f5es. Na repeti\'e7\'e3o controlada por sentinela, lemos um valor (linha 28) antes que o programa atinja a estrutura while. Este valor \'e9 usado para determinar se o fluxo de controle do programa deve entrar no corpo da estrutura while. Se a condi\'e7\'e3o da estrutura while \'e9 false (falsa) (i.e., o usu\'e1rio j\'e1 digitou a sentinela), o corpo da estrutura while n\'e3o \'e9 executado (nenhuma nota foi fornecida). Se, por outro lado, a condi\'e7\'e3o \'e9 true (verdadeira), o corpo come\'e7a a ser executado e o valor digitado pelo usu\'e1rio \'e9 processado (somado a total, neste exemplo). Ap\'f3s o valor ser processado, \'e9 lido o pr\'f3ximo valor digitado pelo usu\'e1rio antes do fim do corpo da estrutura while. Quando a chave \'e0 direita ( ) ) de fechamento do corpo \'e9 atingida na linha 35, a execu\'e7\'e3o continua com o pr\'f3ximo teste da condi\'e7\'e3o da estrutura while. usando o novo valor rec\'e9m-digitado pelo usu\'e1rio para determinar se o corpo da estrutura while deve ser executado novamente. Observe que o pr\'f3ximo valor digitado pelo usu\'e1rio \'e9 sempre lido imediatamente antes de ser avaliada a condi\'e7\'e3o da estrutura while. Isto nos permite determinar se o valor rec\'e9m-digitado pelo usu\'e1rio \'e9 o valor sentinela, antes de este valor ser processado (i.e., somado a total). Se o valor digitado \'e9 o valor sentinela, a estrutura while termina e o valor n\'e3o \'e9 somado a total. \line Note o comando composto no la\'e7o while na Fig 2.9. Sem as chaves, os \'faltimos tr\'eas comandos no corpo do la\'e7o cairiam fora do la\'e7o, fazendo com que o computador interpretasse incorretamente este c\'f3digo, como segue \line while ( grade -1 \line total = total + grade; \line gradeCounter = gradecounter + 1; \line cout << \ldblquote Forne\'e7a nota ou -1 para finalizar: \line cin \'bb grade; \line Isto causaria um la\'e7o infinito se o usu\'e1rio n\'e3o fornecesse como entrada -1 para a primeira nota. \line C\'e1lculos de m\'e9dias nem sempre produzem valores inteiros. Freq\'fcentemente, uma m\'e9dia \'e9 um valor que cont\'e9m uma parte fracion\'e1ria, tal como 7,2 ou -93,5. Estes valores s\'e3o chamados n\'fameros de ponto flutuante e s\'e3o representados pelos tipos de dados float e double. Uma vari\'e1vel do tipo double pode armazenar um valor de magnitude muito maior ou com maior precis\'e3o do que float. Por esta raz\'e3o, tendemos a usar o tipo double em vez do tipo float para representar valores em ponto flutuante em nossos programas. Constantes (como 1000.0  e 05) s\'e3o tratadas por C++ como sendo do tipo double. \par
\par
(parei aqui)\par
CAP\'cdTULO 2-ESTRUTURAS DE CONTROLE 119 \line A vari\'e1vel average \'e9 declarada com o tipo double para capturar o resultado fracion\'e1rio de nosso c\'e1lculo. Por\'e9m, o resultado do c\'e1lculo total / counter \'e9 um inteiro, porque total e counter s\'e3o ambas vari\'e1veis inteiras. Dividir dois inteiros resulta em uma divis\'e3o inteira em que qualquer parte fracion\'e1ria do c\'e1lculo \'e9 perdida (i.e., truncada). Como o c\'e1lculo \'e9 executado primeiro, a parte fracion\'e1ria \'e9 perdida antes de o resultado ser atribu\'eddo para average. Para produzir um c\'e1lculo de ponto flutuante com valores inteiros, devemos criar valores tempor\'e1rios que sejam n\'fameros de ponto flutuante para o c\'e1lculo. C++ fornece o operador un\'e1 rio de coer\'e7\'e3o para realizar esta tarefa. O comando \line average = static_cast< double > ( total ) / gradeCounter; \line inclui o operador de coer\'e7\'e3o staticcast < double > ( ), que cria uma c\'f3pia de ponto flutuante tempor\'e1ria de seu operando entre par\'eanteses - total. Usar um operador de coer\'e7\'e3o desta maneira \'e9 chamado de convers\'e3o expl\'edcita. O valor armazenado em total ainda \'e9 um inteiro. O c\'e1lculo agora consiste em um valor de ponto flutuante (a vers\'e3o double tempor\'e1ria de total) dividido pelo inteiro counter. \line O compilador de C\'f7+ s\'f3 sabe como calcular express\'f5es em que os tipos de dados dos operandos s\'e3o id\'eanticos. Para assegurar que os operandos sejam do mesmo tipo, o compilador executa uma opera\'e7\'e3o chamada promo\'e7\'e3o (tamb\'e9m chamada convers\'e3o impl\'edcita) sobre operandos selecionados. Por exemplo, em uma express\'e3o contendo os tipos de dados int e double. operandos int s\'e3o promovidos a double. Em nosso exemplo, depois de counter ser promovido a double, o c\'e1lculo \'e9 executado e o resultado da divis\'e3o em ponto flutuante \'e9 atribu\'eddo a average. Mais tarde neste cap\'edtulo, discutimos todos os tipos de dados padr\'e3o e sua ordem de promo\'e7\'e3o. \line Os operadores de coer\'e7\'e3o est\'e3o dispon\'edveis para qualquer tipo de dados. O operador static cast \'e9 for- \line a mado seguindo-se a palavra-chave static_cast pelos sinais de menor e maior (< e >) em volta do nome de um \line a tipo de dados. O operador de coer\'e7\'e3o \'e9 um operador un\'e1rio, i.e., um operador que aceita s\'f3 um operando. No \line a Cap\'edtulo 1, estudamos os operadores aritm\'e9ticos bin\'e1rios. C++ tamb\'e9m suporta vers\'f5es un\'e1rias dos operadores \line a mais (+) e menos (-), de modo que o programador possa escrever express\'f5es como -7 ou +5. Operadores de \line a coer\'e7\'e3o t\'eam preced\'eancia mais alta que outros operadores un\'e1rios, tais como + un\'e1rios e - un\'e1rios. Esta preced\'eancia \line\'e9 mais alta que a dos operadores multiplicativos / e %, e mais baixa que a dos par\'eanteses. Indicamos o operador de coer\'e7\'e3o com a nota\'e7\'e3o static_cast < tipo> ( ) em nossos quadros de preced\'eancia. \line O recursos de formata\'e7\'e3o da Fig. 2.9 s\'e3o explicados em profundidade no Cap\'edtulo 11 e discutidos aqui brevemente. A chamada setprecision (2) no comando de sa\'edda \line cout \'ab \lquote A m\'e9dia da turma \'e9 \ldblquote  \'ab setprecision( 2 \line\'ab setiosflags( ios::fixed 1 ios::showpoint \line\'ab average \'ab eridi; \line indica que a vari\'e1vel double average deve ser impressa com precis\'e3o de dois d\'edgitos \'e0 direita da casa decimal (por exemplo, 92, 37). Esta chamada \'e9 denominada manipulador de streamparametrizado. Os programas que usam estas chamadas devem conter a diretiva do pr\'e9-processador \line #include <iomanip> \line As linhas II e 12 especificam os identificadores definidos no arquivo de cabe\'e7alho <iomanip> que s\'e3o usados neste programa. Note que endi \'e9 um manipulador de stream n\'e3o-parametrizado e n\'e3o exige o arquivo cabe\'e7alho iomanip. Se a precis\'e3o n\'e3o for especificada, os valores de ponto flutuante s\'e3o normalmente exibidos/impressos com seis d\'edgitos de precis\'e3o (i.e., a precis\'e3o default), embora logo vejamos uma exce\'e7\'e3o a esta regra. \line O manipulador de stream setiosflags (ios: : fixed 1 ios: : showpoint) no comando precedente define duas op\'e7\'f5es de formata\'e7\'e3o para sa\'edda, i.e., ios: fixed e ios: showpoint. O caractere barra vertical \line 1 ) separa op\'e7\'f5es m\'faltiplas em uma chamada a setiosflags (explicaremos a nota\'e7\'e3o em profundidade no Cap\'edtulo 16). [Nota: embora v\'edrgulas (,) sejam freq\'fcentemente usadas para separar itens de uma lista, elas n\'e3o podem ser usadas com o manipulador de stream setiosflags: caso contr\'e1rio, somente a \'faltima op\'e7\'e3o na lista vai ser ajustadaj. A op\'e7\'e3o ios: fixed faz com que um valor de ponto flutuante seja exibido/impresso no chamado formato de ponto fixo (em oposi\'e7\'e3o \'e0 nota\'e7\'e3o cientifica que discutiremos no Cap\'edtulo 11). A op\'e7\'e3o ios: : showpoint for\'e7a a impress\'e3o da casa decimal e dos zeros n\'e3o-significativos, ainda que o valor seja um \par
120 C+\'f7 COMO PROGRAMAR \line n\'famero inteiro, tal como 88,00. Sem a op\'e7\'e3o ios: : showpoint, tal valor seria exibido/impresso em C++ como 88, sem os zeros n\'e3o-significativos e sem a casa decimal. Quando a formata\'e7\'e3o precedente \'e9 usada em um programa, o valor de sa\'edda \'e9 arredondado para o n\'famero indicado de posi\'e7\'f5es decimais, embora o valor na mem\'f3ria permane\'e7a inalterado. Por exemplo, os valores 87,945 e 67,543 s\'e3o exibidos/impressos como 87,95 e 67,54, respectivamente. \line Erro comum de programa\'e7\'e3o 2. 10 \line Usar n\'fameros de ponto flutuante de uma maneira que assume que eles s\'e3o representados precisamente pode levar a resultados incorretos. Os n\'fameros de ponto flutuante s\'e3o representados somente aproximadamente pela maioria dos computadores. \line Boa pr\'e1tica de programa\'e7\'e3o 2.12 \line N\'e3o compare valores em ponto flutuante quanto \'e0 igualdade ou desigualdade. Basta testar se o valor \line absoluto da diferen\'e7a \'e9 menor que um valor pequeno especificado. \line Apesar do fato de n\'fameros de ponto flutuante n\'e3o serem sempre \ldblquote 100% precisos\rdblquote , eles t\'e8m numerosas aplica\'e7\'f5es. Por exemplo, quando dizemos que \ldblquote a temperatura normal do corpo \'e9 36,7 \'b0C\rdblquote , n\'e3o necessitamos da precis\'e3o de um grande n\'famero de d\'edgitos. Quando olhamos a temperatura em um term\'f4metro e lemos 36,7, ela realmente pode ser 36.69994732 10643. A quest\'e3o a destacar aqui \'e9 que chamar este n\'famero simplesmente de 36,7 \'e9 suficiente para a maioria das aplica\'e7\'f5es. \line Outro modo de surgirem n\'fameros de ponto flutuante \'e9 atrav\'e9s da divis\'e3o. Quando dividimos 10 por 3, o resultado \'e9 3,3333333... com a seq\'fc\'eancia de 3s repetindo-se infinitamente. O computador aloca uma quantidade fixa de espa\'e7o para guardar esse valor; assim, obviamente, o valor armazenado em ponto flutuante s\'f3 pode ser uma aproxima\'e7\'e3o. \line 2.10 Formulando algoritmos com refinamento top-down, passo a passo: estudo de caso 3 (estruturas de controle aninhadas) \line Iremos estudar outro problema completo. Uma vez mais, formularemos o algoritmo usando pseudoc\'f3digo e o refinamento top-down passo a passo, e escreveremos um programa correspondente em C++. Vimos que estruturas de controle poderem ser empilhadas uma em cima da outra (em seq\'fc\'eancia) da mesma maneira que uma crian\'e7a constr\'f3i empilhando blocos. Neste estudo de caso, veremos o \'fanico outro modo estruturado pelo qual estruturas de controle podem ser conectadas em C++, i.e., atrav\'e9s do aninhamento de uma estrutura de controle dentro de outra. \line Considere a seguinte defini\'e7\'e3o de problema: \line Uma escola oferece um curso que prepara estudantes para o exame estadual de licenciamento de corretores de im\'f3veis. No \'faltimo ano, v\'e1rios dos estudantes que completaram este curso fizeram o exame de licenciamento. Naturalmente, a escola quer saber qu\'e3o bem seus estudantes fbram no exame. Foi pedido a voc\'ea para escrever um programa para resumir os resultados. Voc\'ea recebeu uma lista destes 10 estudantes. Ap\'f3s cada nome est\'e1 escrito um 1 se o estudante passou no exame ou um 2 se o estudante foi reprovado. \line Seu programa deve analisar os resultados do exame como segue.\rquote  \line 1. Forne\'e7a como entrada cada resultado de teste (i.e., um 1 ou um 2). Exiba a mensagem \ldblquote Digite o resultado\rdblquote  na tela cada vez que o programa pede outro resultado de teste. \line 2. Conte o n\'famero de resultados de teste de cada tipo. \line 3. Exiba um resumo dos resultados de teste indicando o n\'famero de estudantes que passaram e o n\'famero de estudantes que foram reprovados. \line 4. Se mais de 8 estudantes passaram no exame, imprima a mensagem \ldblquote Aumente o pre\'e7o do curso\rdblquote  \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 121 \par
Depois de ler a defini\'e7\'e3o do problema cuidadosamente, fazemos as seguintes observa\'e7\'f5es: \par
1. O programa deve processar 10 resultados de teste. Um la\'e7o controlado por contador ser\'e1 usado. \line 2. Cada resultado de teste \'e9 um n\'famero - um 1 ou um 2. Cada vez que o programa l\'ea um resultado de teste, o programa deve determinar se o n\'famero \'e9 um 1 ou um 2. Em nosso algoritmo, testamos se \'e9 um 1. Se o n\'famero n\'e3o for um 1, assumimos que ele \'e9 um 2 (um exerc\'edcio no fim do cap\'edtulo discute as conseq\'fc\'eancias desta suposi\'e7\'e3o). \line 3. Dois contadores s\'e3o usados - um para contar o n\'famero de estudantes que passaram no exame e outro para contar o n\'famero de estudantes que foram reprovados no exame. \line 4. Depois de o programa ter processado todos os resultados, deve testar se mais de 8 estudantes passaram no exame. \line Iremos proceder o refinamento top-down passo a passo. Come\'e7amos com uma representa\'e7\'e3o em pseudoc\'f3digo do topo: \line Analise os resultados do exame e decida se o pre\'e7o deve ser aumentado \line Uma vez mais, \'e9 importante enfatizar que o topo \'e9 uma representa\'e7\'e3o completa do programa, mas provavelmente v\'e1rios refinamentos ser\'e3o necess\'e1rios antes de o pseudoc\'f3digo poder ser naturalmente convertido em um programa em C++. Nosso primeiro refinamento \'e9 \line inicialize varic\'edveis \line Obtenha as dez notas do teste e conte as aprova\'e7\'f5es e reprova\'e7\'f5es \line Imprima um resumo dos resultados do teste e decida se o pre\'e7o do curso deve ser aumentado \line Aqui, tamb\'e9m, embora tenhamos uma representa\'e7\'e3o completa de todo o programa, \'e9 necess\'e1rio um refinamento adicional. Agora definimos vari\'e1veis espec\'edficas. Ser\'e3o necess\'e1rios contadores para registrar as aprova\'e7\'f5es e reprova\'e7\'f5es, um contador ser\'e1 usado para controlar o la\'e7o de processamento e ser\'e1 necess\'e1ria uma vari\'e1vel para armazenar a entrada fornecida pelo usu\'e1rio. O comando de pseudoc\'f3digo \line Inicialize vari\'e1veis \line pode ser refinado como segue: \line Inicialize aprova\'e7\'f5es com zero \line Inicialize reprova\'e7\'f5es com zero \line Inicialize contador de estudantes com um \line Note que s\'f3 os contadores e totais s\'e3o inicializados. O comando de pseudoc\'f3digo \line Forne\'e7a como entrada as dez notas do teste e conte as aprova\'e7\'f5es e reprova\'e7\'f5es \line exige um la\'e7o, que sucessivamente recebe como entrada o resultado de cada teste. Aqui sabemos com anteced\'eancia que existem precisamente dez resultados de teste; assim, um la\'e7o controlado por contador \'e9 adequado. Dentro do la\'e7o (i.e., aninhada dentro do la\'e7o) uma estrutura de sele\'e7\'e3o dupla determinar\'e1 se cada resultado de teste \'e9 uma aprova\'e7\'e3o ou uma reprova\'e7\'e3o e, conseq\'fcentemente, incrementar\'e1 o contador apropriado, O refinamento do comando de pseudoc\'f3digo precedente fica ent\'e3o \line Enquanto o contador de estudantes for menor que ou igual a dez \line Leia o pr\'f3ximo resultado do teste \line Se o estudante foi aprovado \line Some um a aprova\'e7\'f5es \par
122 C++ COMO PROGRAMAR \line sen\'e3o \line Some um a reprova\'e7\'f5es \line Some um ao contador de estudantes \line Note o uso de linhas em branco para separar a estrutura de controle se/sen\'e3o para melhorar a legibilidade do proglama. O comando de pseudoc\'f3digo \line imprima um resumo dos resultados do teste e decida se o pre\'e7o do curso deve ser aumentado \line pode ser refinado como segue: \line imprima o n\'famero de aprova\'e7\'f5es \line imprima o n\'famero de reprova\'e7\'f5es \line Se mais de oito estudantes foram aprovados \line imprima \ldblquote Aumente o pre\'e7o do curso\rdblquote  \line O segundo refinamento completo aparece na Fig. 2.10. Note que linhas em branco lambeni sao usadas para separar a estrutura while, para melhorar a legibilidade do programa. \line inicialize aprova\'e7\'f5es com zero \line inicialize reprova\'e7\'f5es com zero \line inicialize contador de estudantes com um \line Enquanto contador de estudantes for menor que ou igual a dez \line Leia o pr\'f3ximo resultado do teste \line Se o estudante foi aprovado \line Some um a aprova\'e7\'f5es \line sen\'e3o \line Some um a reprova\'e7\'f5es \line Some um ao contador de estudantes \line imprima o n\'famero de aprova\'e7\'f5es \line imprima o n\'famero de reprova\'e7\'f5es \line Se mais de oito estudantes foram aprovados \line imprima \ldblquote Aumente o pre\'e7o do curso\rdblquote  \line Fig. 2.10 Pseuc\'f3digo para o problema dos resultados do teste. \line Este pseuc\'f3digo est\'e1 agora suficientemente refinado para ser convertido em C++. O programa em C++ e dois exemplos de execu\'e7\'f5es s\'e3o mostrados na Fig. 2.11. \par
Fig. 2.11 Programa em C++ e exemplos de execu\'e7\'f5es para o problema dos resultados do teste (parte 1 \line de 2). \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx205\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3563\pard\intbl 1 \cell II Fig. 2.11: figO2ll.cpp \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx205\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3563\pard\intbl 2 \cell II An\'e1lise dos resultados do teste \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx205\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3563\pard\intbl 3 \cell #include <iostream> \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx205\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3563\pard\intbl 4 \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx205\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3563\pard\intbl 5 \cell using std: :cout; \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx205\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3563\pard\intbl 6 \cell using std::cin; \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx205\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3563\pard\intbl 7 \cell using std::endl; \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx205\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3563\pard\intbl 8 \cell\cell\row\pard\par
\pard\sb100\sa240 CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 123 \par
9 \line 10 \line 11 \line 12 \line 13 \line 14 \line 15 \par
16 \line 17 \line 18 \line 19 \line 20 \par
21 \line 22 \line 23 \line 24 \line 25 \line 26 \line 27 \par
28 \line 29 \line\'c9 30 \line 31 \line 32 \par
33 \par
34 \line 35 \par
36 \line 37 \line 38 \par
int main \line // inicializa as vari\'e1veis nas declara\'e7\'f5es \par
int passes = 0, \line failures = 0, \line studentCounter = 1, \line result; \par
1/\rquote  numero de aprova\'e7\'f5es \line II n\'famero de reprova\'e7\'f5es \line II contador de estudantes \line II um resultado do teste \par
II processa 10 estudantes; ciclo controlado por contador while ( studentCounter <= 10 \line cout \'ab \ldblquote Forne\'e7a resultado (l=aprovado,2=reprovado) \line cm \'bb result; \line if ( result == 1 ) II if/else aninhado no while \line passes = passes + 1; \line else \line failures = failures + 1; \line studentCounter = studentCounter + 1; \line // fase de t\'e9rmino \line cout\'ab Aprovados \ldblquote  \'ab passes \'ab endi; \line cout\'ab \ldblquote Reprovados \ldblquote  \'ab failures \'ab endl; \line if ( passes > 8 \line cout \'ab \ldblquote Aumente o pre\'e7o do curso \ldblquote  \'ab endl; \line return 0; // t\'e9rmino normal \par
Fg. 2.11 Programa em C++ e exemplos de execu\'e7\'f5es para o problema dos resultados do teste (parte 2 de 2). \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4743\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5248\pard\intbl Forne\'e7a resultado (1=aprovado,2=reprovado) \cell :1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4743\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5248\pard\intbl Forne\'e7a resultado (1=aprovado, 2=reprovado) \cell : 1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4743\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5248\pard\intbl Forne\'e7a resultado (1=aprovado , 2reprovado) \cell :1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2126\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4743\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5248\pard\intbl Forne\'e7a resultado \cell (l=aprovado, 2=reprovado) \cell : 1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4743\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5248\pard\intbl Forne\'e7a resultado (1=aprovado, 2=reprovado) \cell :2 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2126\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4743\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5248\pard\intbl Forne\'e7a resultado \cell (1=aprovado,2=reprovado) \cell :1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2126\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4743\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5248\pard\intbl Forne\'e7a resultado ( \cell 1=aprovado, 2=reprovado) \cell : 1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2126\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4743\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5248\pard\intbl Forne\'e7a resultado \cell (1=aprovado , 2=reprovado) \cell :1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2126\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4743\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5248\pard\intbl Forne\'e7a resultado \cell (1=aprovado, 2=reprovado) \cell :1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4743\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5248\pard\intbl Forne\'e7a resultado (l=aprovado , 2reprovado)  Aprovados 9  Reprovados 1  Aumente o pre\'e7o do curso \cell :1 \cell\row\pard\sa240\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4237\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4742\pard\intbl Forne\'e7a resultado (1=aprovado , 2reprovado) \cell :1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4237\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4742\pard\intbl Forne\'e7a resultado (l=aprovado, 2=reprovado) \cell :2 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4237\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4742\pard\intbl Forne\'e7a resultado (1=aprovado, 2reprovado) \cell : 2 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4237\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4742\pard\intbl Forne\'e7a resultado (1=aprovado , 2=reprovado) \cell :1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4237\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4742\pard\intbl Forne\'e7a resultado (1=aprovado, 2reprovado) \cell :1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4237\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4742\pard\intbl Forne\'e7a resultado (1=aprovado, 2=reprovado) \cell :1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4237\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4742\pard\intbl Forne\'e7a resultado (l=aprovado , 2=reprovado) \cell :2 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4237\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4742\pard\intbl Forne\'e7a resultado (1=aprovado, 2=reprovado) \cell :1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4237\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4742\pard\intbl Forne\'e7a resultado (l=aprovado , 2reprovado) \cell :1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4237\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4742\pard\intbl Forne\'e7a resultado (1=aprovado , 2=reprovado) \cell :2 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4237\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4742\pard\intbl Aprovados 6 \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4237\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4742\pard\intbl Reprovados 4 \cell\cell\row\pard\par
\pard\sb100\sa240 124 C++ COMO PROGRAMAR \line As linhas 12 a 15 \line int passes = O, II n\'famero de aprova\'e7\'f5es \line failures = O, II n\'famero de reprova\'e7\'f5es \line studentCounter = 1, II contador de estudantes \line result; II um resultado do teste \line declaram as vari\'e1veis usadas em main para processar os resultados do exame. Note que aproveitamos um recurso de C++ que permite que a inicializa\'e7\'e3o de vari\'e1veis seja incorporada \'e0s suas declara\'e7\'f5es (o \'e9 atribu\'eddo a passes. o \'e9 atribu\'eddo a failures e 1 \'e9 atribu\'eddo a studentCounter). Programas com la\'e7os podem exigir inicializa\'e7\'f5es no princ\'edpio de cada repeti\'e7\'e3o; tais inicializa\'e7\'f5es normalmente aconteceriam em comandos de atribui\'e7\'e3o. \line Boa pr\'e1tica de programa\'e7\'e3o 2.13 \line inicializar as vari\'e1veis quando elas s\'e3o declaradas ajuda o programador a evitar os problemas de dados \line n\'e3o-inicializados. \line Observa\'e7\'e3o de engenharia de software 2.7 \line A experi\'eancia mostra que a parte mais difTcil da solu\'e7\'e3o de um problema em um computador est\'e1 no \line desenvolvimento do algoritmo para a solu\'e7\'e3o. Uma vez que um algoritmo correto tenha sido especificado, \line o processo de produzir um programa em C+ + que funciona, a partir do algoritmo, \'e9 normalmente direto. \line Observa\'e7\'e3o de engenharia de software 2.8 \line Muitos programadores experientes escrevem programas sem usar ferramentas de desenvolvimento de programas como pseudoc\'f3digo. Estes programadores pensam que sua meta essencial \'e9 resolver o problema em um computador e que escrever pseudoc\'f3digo somente atrasa a produ\'e7\'e3o de resultado final. \line Embora isto possa funcionar para problemas simples efamiliares, pode levar a s\'e9rios erros e atrasos em projetos grandes e complexos. \line 2.11 Operadores de atribui\'e7\'e3o \line C++ oferece v\'e1rios operadores de atribui\'e7\'e3o para abreviar as express\'f5es de atribui\'e7\'e3o. Por exemplo, o comando c = c + 3; \line pode ser abreviado com o operador atribui\'e7\'e3o com adi\'e7\'e3o += como \line c += 3; \line O operador + soma o valor da express\'e3o \'e0 direita do operador ao valor da vari\'e1vel \'e0 esquerda do operador e armazena o resultado na vari\'e1vel \'e0 esquerda do operador. Qualquer comando da forma \line vari\'e1vel = vari\'e1vel express\'e3o operador; \line onde operador \'e9 um dos operadores bin\'e1rios +, -, *, 1, ou % (ou outros que discutiremos mais tarde no texto), pode ser escrito na forma \line vari\'e1vel operador = express\'e3o; \line Deste modo, a atribui\'e7\'e3o c += 3 soma 3 a c. A Fig. 2.12 mostra os operadores de atribui\'e7\'e3o aritm\'e9ticos, exemplos de express\'f5es usando estes operadores e explica\'e7\'f5es. \line Dica de desempenho 2.3 \line ______ Os programadores podem escrever programas um pouco mais r\'e1pidos e os compiladores podem compilar programas um pouco mais rapidamente quando forem usados os operadores de atribui\'e7\'e3o \ldblquote abreviados \ldblquote . \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 125 \par
Alguns compiladores geram c\'f3digo que \'e9 executado mais r\'e1pido quando s\'e3o usados operadores de atribui\'e7\'e3o \ldblquote abreviados\rdblquote . \par
Fig. 2.12 Operadores aritm\'e9ticos de atribui\'e7\'e3o \line\ul 1 Dica de desempenho 2.4 \ulnone\line Muitas das dicas de desempenho que mencionamos neste texto resultam em melhorias pequenas; assim, o \line leitor pode ficar tentado a ignor\'e1-las. Freq\'fcentemente, \'e9 obtida uma melhoria de desempenho significativa \line quando uma melhoria, supostamente pequena, \'e9 introduzida em um la\'e7o que \'e9 repetido muitas vezes. \line 2.12 Operadores de incremento e decremento \line C++ tamb\'e9m fornece o operador un\'e1rio de incremento ++ e o operador un\'e1rio de decremento --, os quais \line est\'e3o resumidos na Fig. 2.13. Se uma vari\'e1vel c \'e9 incrementada por 1, o operador de incremento (++) pode \line ser usado em vez das express\'f5es e = c+1 ou c += 1. Se um operador de incremento ou decremento \'e9 - colocado antes de uma vari\'e1vel, \'e9 chamado de operador de pr\'e9-incremento ou pr\'e9-decremento, respectiva- \line mente. Se um operador de incremento ou decremento \'e9 colocado depois de uma vari\'e1vel, \'e9 chamado de \line operador de p\'f3s-incremento ou de p\'f3s-decremento, respectivamente. Pr\'e9-incrementar (pr\'e9-decrementar) uma \line vari\'e1vel faz com que a vari\'e1vel seja incrementada (decrementada) por 1, sendo o novo valor da vari\'e1vel \line usado na express\'e3o em que ela aparece. P\'f3s-incrementar (p\'f3s-decrementar) uma vari\'e1vel faz com que o _______ valor atual da vari\'e1vel seja primeiro usado na express\'e3o em que ela aparece, sendo ent\'e3o, ap\'f3s, o valor da \line vari\'e1vel incrementado (decrementado) por 1. \par
Fig. 2.13 Os operadores de incremento e decremento. \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2131\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2367\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2776\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3770\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4386\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6105\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7115\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7428\pard\intbl Operador de atribui\'e7\'e3o \cell\cell\cell Express\'e3  exemplo \cell o \cell\cell Explica\'e7\'e3o \cell Atribui \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2367\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2776\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4783\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5192\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5622\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6105\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6514\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7115\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7428\pard\intbl Assuma:intc= \cell 3, \cell d=5, e= \cell 4, f= \cell 6, \cell g= \cell 12; \cell\cell\cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2131\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2367\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2776\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3770\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4386\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4783\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6105\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6514\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7115\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7428\pard\intbl + \cell\cell\cell c+7 \cell\cell\cell c \cell =c+7 \cell 10 \cell para \cell c \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2131\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2367\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2776\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3770\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4386\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4783\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6105\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6514\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7428\pard\intbl - \cell\cell\cell d-=4 \cell\cell\cell d \cell =d-4 \cell 1 \cell parad \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2131\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2367\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2776\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3770\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4386\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4783\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6105\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6514\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7115\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7428\pard\intbl *= \cell\cell\cell e*=5 \cell\cell\cell e \cell =e*5 \cell 20 \cell para \cell e \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2131\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2367\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2776\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3770\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4386\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4783\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6105\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6514\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7428\pard\intbl / \cell\cell\cell f/3 \cell\cell\cell f \cell f/3 \cell 2 \cell paraf \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2131\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2367\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2776\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3770\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4386\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4783\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6105\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6514\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7428\pard\intbl %= \cell\cell\cell g%=9 \cell\cell\cell g \cell =g%9 \cell 3 \cell parag \cell\row\pard\sa240\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx953\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2245\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4099\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx8946\pard\intbl Operador \cell Chamado \cell Exemplo de express\'e3o \cell Explica\'e7\'e3o \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx953\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2245\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4099\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx8946\pard\intbl ++ \cell pr\'e9-incremento \cell ++a \cell Incrementa a por 1 e ent\'e3o usa o novo valor de a na express\'e3o em que a est\'e1. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx953\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2245\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4099\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx8946\pard\intbl ++ \cell p\'f3s-incremento \cell a++ \cell Usa o valor corrente de a na express\'e3o em que a est\'e1 e ent\'e3o incrementa a por 1. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx953\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2245\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4099\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx8946\pard\intbl - - \cell pr\'e9-decremento \cell --b \cell Decrementa b por 1 e ent\'e3o usa o novo valor de b na express\'e3o em que b est\'e1. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx953\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2245\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4099\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx8946\pard\intbl - - \cell p\'f3s-decremento \cell - \cell Usa o valor corrente de b na express\'e3o em que b est\'e1 e ent\'e3o decrementa b por 1. \cell\row\pard\par
\pard\sb100\sa240 126 C++ COMO PROGRAMAR \line O programa da Fig. 2.14 demonstra a diferen\'e7a entre a vers\'e3o de pr\'e9-incremento e a vers\'e3o de p\'f3s-incremento do operador ++. P\'f3s-incrementar a vari\'e1vel e faz com que a mesma seja incrementada depois de ser usada no comando de impress\'e3o. Pr\'e9-incrementar a vari\'e1vel c faz com que a mesma seja incrementada antes de ser usada no comando de impress\'e3o. \line O programa exibe o valor de c antes e depois que o operador ++ \'e9 usado. O operador de decremento (- -) funciona de maneira similar. \line Boa pr\'e1tica de programa\'e7\'e3o 2.14 \line Operadores un\'e1rios deveriam ser colocados pr\'f3ximos a seus operandos, sem espa\'e7os intermedi\'e1rios. \line Os tr\'eas comandos de atribui\'e7\'e3o na Fig 2.11 \line passes = passes + 1; \line failures = failures + 1; \line studentCounter = studentCounter + 1; \line 1 II Fig. 2.14: figo2_14.cpp \line 2 II Pr\'e9-incrementando e p\'f3s-incrementando \line 3 #include <iostream> \line 4 \line 5 using std: :cout; \line 6 using std::endl; \line 7 \line 8 int main() \line 9 \line 10 int c; \line 11 \line 12 c=5; \line 13 cout \'ab c \'ab endi; II imprime 5 \line 14 cout \'ab c++ \'ab endi; II imprime 5 e ent\'e3o p\'f3s-incrementa \line 15 cout \'ab c \'ab endi \'ab endi; II imprime 6 \line 16 \line 17 c=5; \line 18 cout \'ab c \'ab endi; II imprime 5 \line 19 cout \'ab ++c \'ab endi; II pr\'e9-incrementa e ent\'e3o imprime 6 \line 20 cout \'ab e \'ab endi; II imprime 6 \line 21 \line 22 return 0; II t\'e9rmino normal \line 23 \} \par
Fig. 2.14 A diferen\'e7a entre pr\'e9-incrementar e p\'f3s-incrementar. \line podem ser escritos mais concisamente, usando operadores de atribui\'e7\'e3o, como \line passes += 1; \line failures += 1; \line studentCounter += 1; \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx740\pard\intbl 5 \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx740\pard\intbl 5 \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx740\pard\intbl 6 \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx740\pard\intbl 5 \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx740\pard\intbl : \cell 1 \cell\row\pard\par
\pard\sb100\sa240 CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 127 \line com operadores de pr\'e9-incremento como \line ++passes; \line ++failures; \line ++studentCounter; \line ou com operadores de p\'f3s-incremento como \line passes++; \line failures++; \line studentCounter++; \line Note que, quando incrementarmos ou decrementarmos uma vari\'e1vel s\'f3zinha em um comando, as formas de pr\'e9- incremento e p\'f3s-incremento t\'eam o mesmo efeito e as formas de pr\'e9-decremento e p\'f3s-decremento t\'eam o mesmo efeito. S\'f3 quando uma vari\'e1vel aparece no contexto de uma express\'e3o maior \'e9 que pr\'e9-increment\'e1-la e p\'f3s-increment\'e1-la t\'eam efeitos diferentes (e, semelhantemente, para pr\'e9-decrementar e p\'f3s-decrementar). Al\'e9m disso, o pr\'e9- incremento e o pr\'e9-decremento operam de forma um pouco mais r\'e1pida do que p\'f3s-incremento e p\'f3s-decremento. \line Por ora, s\'f3 um nome simples de vari\'e1vel pode ser usado como o operando de um operador de incremento ou \line decremento (veremos que estes operadores podem ser usados com os chamados Ivalues). \line Erro comum de programa\'e7\'e3o 2. 11 \line Tentar usar o operador de incremento ou decremento em uma express\'e3o que n\'e3o seja um simples nome de \line vari\'e1vel, por exemplo, escrever ++ (x + 1), \'e9 um erro de sintaxe. \line A Fig. 2. 15 mostra a preced\'eancia e associatividade dos operadores introduzidos at\'e9 aqui. Os operadores s\'e3o mostrados de cima para baixo em ordem decrescente de preced\'eancia. A segunda coluna descreve a associatividade dos operadores em cada n\'edvel de preced\'eancia. Note que o operador condicional (? :), os operadores un\'e1rios incremento (++) e decremento (--), mais (+), menos (-) e de coer\'e7\'e3o, e os operadores de atribui\'e7\'e3o =, +=, -=, =, 1= e %= se associam da direita para a esquerda. Todos os outros operadores no quadro de preced\'eancia de operadores da Fig. 2.15 se associam da esquerda para a direita. A terceira coluna nomeia os v\'e1rios grupos de operadores. \line 2.13 Aspectos essenciais da repeti\'e7\'e3o controlada por contador \line A repeti\'e7\'e3o controlada por contador exige: \line o nome de uma vari\'e1vel de controle (ou contador de la\'e7o); \line 2. o valor inicial da vari\'e1vel de controle; \line 3. a condi\'e7\'e3o que testa o valor final da vari\'e1vel de controle (i.e., se o la\'e7o deve continuar); \line 4. o incremento (ou decremento) pelo qual a vari\'e1vel de controle \'e9 modificada cada vez em uma execu\'e7\'e3o do la\'e7o; \par
f \par
Fig. 2.15 Preced\'eancia dos operadores encontrados at\'e9 agora no texto. \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2885\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3161\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6186\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7697\pard\intbl Operadores \cell\cell Associatividade \cell Tipo \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx724\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2885\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3161\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6186\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7697\pard\intbl O \cell\cell\cell\cell da esquerda para a direita \cell par\'eanteses \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx724\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2885\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3161\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6186\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7697\pard\intbl ++ \cell -- \cell staticcast<type> ( \cell ) \cell da esquerda para a direita \cell un\'e1rios (p\'f3s-fixo) \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx724\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2885\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3161\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6186\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7697\pard\intbl ++ \cell -- \cell + - \cell\cell da direita para a esquerda \cell un\'e1rios (prefixo) \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx724\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2885\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3161\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6186\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7697\pard\intbl * \cell / \cell % \cell\cell da esquerda para a direita \cell multiplicativos \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx724\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2885\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3161\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6186\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7697\pard\intbl + \cell - \cell\cell\cell da esquerda para a direita \cell aditivos \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx724\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2885\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3161\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6186\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7697\pard\intbl\'ab \cell\'bb \cell\cell\cell da esquerda para a direita \cell inser\'e7\'e3o/extra\'e7\'e3o \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx724\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2885\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3161\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6186\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7697\pard\intbl < \cell <= \cell > >= \cell\cell da esquerda para a direita \cell relacionais \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx724\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2885\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3161\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6186\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7697\pard\intbl == \cell = \cell\cell\cell da esquerda para a direita \cell igualdade \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx724\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2885\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3161\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6186\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7697\pard\intbl ?: \cell\cell\cell\cell da direita para a esquerda \cell condicional \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx724\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2885\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3161\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6186\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7697\pard\intbl\cell += \cell -= *= /= %= \cell\cell da direita para a esquerda \cell atribui\'e7\'e3o \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx268\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx724\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2885\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3161\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6186\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7697\pard\intbl , \cell\cell\cell\cell da esquerda para a direita \cell v\'edrgula \cell\row\pard\par
\pard\sb100\sa240 128 c++ COMO PROGRAMAR \par
1 II Fig. 2.16: figO2_16.cpp \line 2 II Repeti\'e7\'e3o controlada por contador \line 3 #include <iostream> \par
5 using std::cout; \line 6 using std::endl; \par
int main() \par
10 int counter = 1; \par
11 \line 12 \line 13 \line 14 \line 15 \line 16 \line 17 \line 18 \par
1 \par
2 \line 3 \line 4 \line 5 \line 6 \line 7 \line 8 \par
while ( counter <= 10 ) \{ cout \'ab counter \'ab endl; \line ++counter; \par
\} \par
return O; \par
Fig. 2.16 Repeti\'e7\'e3o controlada por contador. \par
A declara\'e7\'e3o e inicializa\'e7\'e3o de counter tamb\'e9m podiam ter sido realizadas com os comandos \line int counter; \line counter = 1; \line Usamos ambos os m\'e9todos para inicializar vari\'e1veis. \line O comando \line ++counter; \par
Considere o programa simples mostrado na Fig. 2.16, que imprime os n\'fameros de 1 at\'e9 10. A declara\'e7\'e3o int contador = 1; \line nomeia a vari\'e1vel de controle (contador), declara a mesma como do tipo inteiro, reserva espa\'e7o para ela n mem\'f3ria e lhe atribui um valor inicial de 1. Declara\'e7\'f5es que exigem inicializa\'e7\'e3o s\'e3o, na realidade, comandos execut\'e1veis. Em C++, \'e9 mais correto chamar uma declara\'e7\'e3o que tamb\'e9m reserva mem\'f3ria - como faz a declara\'e7\'e3o precedente - uma defini\'e7\'e3o. \par
4 \par
7 \par
8 \line 9 \par
// inicializa\'e7\'e3o \line II condi\'e7\'e3o de repeti\'e7\'e3o \line // incremento \par
1 \par
9 \par
10 \par
incrementa o contador de la\'e7o por 1 toda vez que o la\'e7o \'e9 executado. A condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o na estrutura while testa se o valor da vari\'e1vel de controle \'e9 menor que ou igual a 10 (o \'faltimo valor para o qual a condi\'e7\'e3o \'e9 \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 129 \line true). Note que o corpo deste while \'e9 executado at\'e9 quando a vari\'e1vel de controle \'e9 10. O la\'e7o termina quando a vari\'e1vel de controle excede 10 (i.e., counter se torna 11). \line O programa na Fig. 2.16 pode ficar mais conciso inicializando counter com O e substituindo a estrutura while por \line while ( ++counter <= 10 \line cout \'ab counter \'ab endl; \line Este c\'f3digo economiza um comando, porque o incremento \'e9 feito diretamente na condi\'e7\'e3o do while antes de a condi\'e7\'e3o ser testada. Al\'e9m disso, este c\'f3digo elimina as chaves em torno do corpo do while porque o while agora cont\'e9m s\'f3 um comando. A codifica\'e7\'e3o condensada dessa forma requer alguma pr\'e1tica e pode levar a programas que s\'e3o mais dif\'edceis de depurar, modificar e manter. \line Erro comum de programa\'e7\'e3o 2.12 \line Como os valores em ponto flutuante podem ser aproximados, controlar la\'e7os com vari\'e1veis de ponto \line flutuante pode resultar em valores imprecisos do contador e testes de t\'e9rmino inexatos. \line Boa pr\'e1tica de programa\'e7\'e3o 2.15 \line Controle la\'e7os controlados por contadores com valores inteiros. \line Boa pr\'e1tica de programa\'e7\'e3o 2.16 \line Indente os comandos no corpo de cada estrutura de controle. \line Boa pr\'e1tica de programa\'e7\'e3o 2.17 \line Coloque uma linha em branco antes e depois de cada estrutura de controle, para destac\'e1-la no programa. \line Boa pr\'e1tica de programa\'e7\'e3o 2.18 \line Muitos n\'edveis de aninhamento podem tornar um programa dif\'edcil de se entender Como regra geral, tente \line evitar usar mais de tr\'eas n\'edveis de indenta\'e7\'e3o. \line Boa pr\'e1tica de programa\'e7\'e3o 2.19 \line O espa\'e7amento vertical acima e abaixo de estruturas de controle e a indenta\'e7\'e3o dos corpos das estruturas de controle dentro dos cabe \'e7alhos dessas estruturas d\'e3o aos programas uma apar\'eancia bidimensional que melhora muito sua legibilidade. \line 2.14 A estrutura de repeti\'e7\'e3o for \line A estrutura de repeti\'e7\'e3o for trata todos os detalhes da repeti\'e7\'e3o controlada por contador. Para ilustrar o poder do for, iremos reescrever o programa da Fig. 2.16. O resultado \'e9 mostrado na Fig. 2.17. O programa opera como segue. \line Quando a estrutura for come\'e7a a ser executada, a vari\'e1vel de controle counter \'e9 declarada e inicializada com 1. Ent\'e3o, \'e9 verificada a condi\'e7\'e3o de cofflinua\'e7\'e3o do la\'e7o, counter <= 10. Como o valor inicial de counter \'e9 1, a condi\'e7\'e3o \'e9 satisfeita; assim, o comando do corpo imprime o valor de counter, 1.e., 1. A vari\'e1vel de controle counter \'e9 ent\'e3o incrementada na express\'e3o counter++ e o la\'e7o come\'e7a novamente com o teste de continua\'e7\'e3o do la\'e7o. Como a vari\'e1vel de controle agora \'e9 igual a 2, o valor final n\'e3o \'e9 excedido e assim o programa executa novamente o comando do corpo. Este processo continua at\'e9 que a vari\'e1vel de controle counter seja incrementada para 11. isto faz com que o teste de continua\'e7\'e3o do la\'e7o n\'e3o seja satisfeito e a       repeti\'e7\'e3o termine. O programa continua, executando o primeiro comando depois da estrutura for (neste caso, o comando return no fim do programa). \par
\pard\par
\pard\sb100\sa240 130 C++ CoMo PROGRAMAR \line 1 II Fig. 2.17: figo2_17.cpp O \line 2 // Repeti\'e7\'e3o controlada por contador com a estrutura for \line 3 #include <iostream> \line 4 \line 5 using std: :cout; \line 6 using std::endl; \line 7 \line 8 intmain () \line 10 // inicializa\'e7\'e0o, condi\'e7\'e3o de repeti\'e7\'e3o e incremento \line 11 1/ est\'e3o todas incluidas no cabe\'e7alho da estrutura for. \line 12 \line 13 for ( \'ednt counter 1; counter <= 10; counter++ \line 14 cout \'ab counter \'ab endi; \line 15 \line 16 return 0; \line l7\} \line Fig. 2.17 Repeti\'e7\'e3o controlada por contador com a estrutura for. \line A Fig. 2.18 examina mais de perto a estrutura for da Fig. 2.17. Note que a estrutura for \ldblquote faz tudo\rdblquote  - especifica cada um dos itens necess\'e1rios para uma repeti\'e7\'e3o controlada por contador com uma vari\'e1vel de controle. Se existir mais de um comando no corpo do for, s\'e3o necess\'e1rias chaves para definir o corpo do la\'e7o. \line palavra- Nome da Valor final \line chave vari\'e1vel de da vari\'e1vel \line for controle de controle \line for ( int counter = 1; counter <= 7; ++counter \line Valor inicial da Condi\'e7\'e3o de Incremento \line vari\'e1vel de continua\'e7\'e3o da vari\'e1vel \line controle do la\'e7o de controle \line Fig. 2.18 Componentes de um cabe\'e7alho for t\'edpico. \line Note que a Fig. 2.17 usa a condi\'e7\'e3o de continua\'e7\'e3o de la\'e7o counter <= 10. Se o programador escrevesse, incorretamente, counter < 10, ent\'e3o o ciclo seria executado somente 9 vezes. Este \'e9 um erro de l\'f3gica comum, chamado saindo do la\'e7o uma itera\'e7\'e3o antes (off-by-one errar). \line Erro comum de programa\'e7\'e3o 2.13 \line Usar uni operador relacional incorreto ou usar um valor final incorreto de m contador de la\'e7o na condi\'e7\'e3o de um while ou estrutura for pode causar erro do tipo \ldblquote sair uma itera\'e7\'e3o antes \line Boa pr\'e1tica de programa\'e7\'e3o 2.20 \line Usar o valor final na condi\'e7\'e3o de um while ou estrutura for e usar o operador relacional < ajuda a evitar erros \ldblquote sair uma itera\'e7\'e3o antes \ldblquote . Para um la\'e7o usado para imprimir os valores 1 a 10, por exemplo, a condi\'e7\'e3o de continua\'e7\'e3o de la\'e7o deveria ser counter <= 10, em vez de counter < 10 (o que \'e9 um erro \ldblquote sair uma itera\'e7\'e3o antes\rdblquote ) ou counter < 11 (que \'e9, no entanto, correto). Muitos programadores, entretanto, preferem a chamada contagem baseada em zero - na qual, para contar 10 vezes o la\'e7o, coun- ter seria inic\'edalizado com zero e o teste de continua\'e7\'e3o do la\'e7o seria counter < 10. \par
CAP\'cdTULO 2 -ESTRUTURAS DE CONTROLE 131 \line O formato geral da estrutura for \'e9 \line for ( initialization; loopContinuationTest; increment) \line statement \line onde initialization inicializa a vari\'e1vel de controle do la\'e7o, loopContinuationTest \'e9 a condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o e increment incrementa a vari\'e1vel de controle. Na maioria dos casos, a estrutura for pode ser representada com uma estrutura whiJ.e equivalente, como segue: \line initialization; \line while ( loopContinuationTest) \line statement \line increment; \line Existe uma exce\'e7\'e3o a esta regra que discutiremos na Se\'e7\'e3o 2.18. \line Se inicialization (a se\'e7\'e3o de inicializa\'e7\'e3o) no cabe\'e7alho da estrutura for define a vari\'e1vel de controle (i.e., o \line tipo da vari\'e1vel de controle \'e9 especificado antes do nome da vari\'e1vel), a vari\'e1vel de controle s\'f3 pode ser usada no ifica corpo da estrutura for, i.e., o valor da vari\'e1vel de controle ser\'e1 desconhecido fora da estrutura for. Este uso restrito \line :istir do nome da vari\'e1vel controle \'e9 conhecido como escopo da vari\'e1vel, O escopo de uma vari\'e1vel define onde ela pode ser usada em um programa. O escopo \'e9 discutido em detalhes no Cap\'edtulo 3, \ldblquote Fun\'e7\'f5es\rdblquote . \line\ul Erro comum de programa\'e7\'e3o 2.14 \ulnone\line Quando a vari\'e1vel de controle de uma estrutura for \'e9 definida na se\'e7\'e3o de inicializa\'e7\'e3o do cabe\'e7alho da \line estrutura for, usar a vari\'e1vel de controle ap\'f3s o corpo da estrutura \'e9 um erro de sintaxe. \line\ul Dica de portabilidade 2.1 \ulnone\line No padr\'e3o C++, o escopo da vari\'e1vel de controle declarada na se\'e7\'e3o de inicializa\'e7\'e3o de uma estrutura for \'e9 diferente do escopo em compiladores de C+ + mais antigos. O c\'f3digo C+ + criado com compiladores C+ + antigos pode n\'e3o funcionar quando compilado com compiladores compat\'edveis com o padr\'e3o C+ +. Duas estrat\'e9gias de programa\'e7\'e3o defensiva que podem ser usadas para prevenir este problema s\'e3o: \line defina vari\'e1veis de controle com nomes diferentes em cada estrutura for, ou, se voc\'ea preferir usar o mesmo nome para a vari\'e1vel de controle em v\'e1rias estruturas for, defina a vari\'e1vel de controle fora e antes do primeiro la\'e7o for. \line\'c0s vezes, as express\'f5es de inicialization e increment s\'e3o listas de express\'f5es separadas por v\'edrgulas. As v\'edrgulas, tal \line or- \lquote  como usadas aqui, s\'e3o operadores v\'edrgula que garantem que listas de express\'f5es sejam calculadas da esquerda para \line a direita. O operador v\'edrgula tem a preced\'eancia mais baixa de todos os operadores em C++. O valor e tipo de uma \line lista de express\'f5es separadas por v\'edrgulas \'e9 o valor e tipo da express\'e3o mais \'e0 direita na lista. O operador v\'edrgula \'e9 \line mais freq\'fcentemente usado em estruturas for. Sua aplica\'e7\'e3o prim\'e1ria \'e9 habilitar o programador a usar express\'f5es \line de inicializa\'e7\'e3o m\'faltiplas e/ou express\'f5es de incremento m\'faltiplas. Por exemplo, pode haver v\'e1rias vari\'e1veis de \line * controle em uma \'fanica estrutura for que devem ser inicializadas e incrementadas. \line\ul Boa pr\'e1tica de programa\'e7\'e3o 2.21 \ulnone\line - Coloque somente express\'f5es envolvendo as vari\'e1veis de controle nas se\'e7\'f5es de inicializa\'e7\'e3o e incremento \line a a de uma estrutura for. As manipula\'e7\'f5es de outras vari\'e1veis devem aparecer ou em qualquer lugar antes ilo do la\'e7o (se elas s\'e3o executadas s\'f3 uma vez, como em comandos de inicializa\'e7\'e3o) ou no corpo do la\'e7o (se \line iuna vez por itera\'e7\'e3o, como comandos de incremento ou decremento). \line As tr\'eas express\'f5es na estrutura for s\'e3o opcionais. Se a express\'e3o loopContinuationTest \'e9 omitida, C++ assume que a condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o \'e9 sempre verdadeira, criando deste modo um la\'e7o infinito. Algu\'e9m poderia omitir inicialization se a vari\'e1vel de controle fosse inicializada em outro lugar do programa. A express\'e3o increment pode \par
132 C++ COMO PROGRAMAR \line ser omitida se o incremento for calculado por comandos no corpo da estrutura for, ou se nenhum incremento for necess\'e1rio. A express\'e3o de incremento na estrutura for atua como um comando isolado no fim do corpo do for. Portanto, as express\'f5es \line counter = counter + 1 \line couriter += 1 \line ++counter \line counter++ \line s\'e3o todas equivalentes \'e0 parte de incremento da estrutura for. Muitos programadores preferem a forma coun- ter++, porque o incremento ocorre depois do corpo do la\'e7o ser executado. A forma de p\'f3s-incremento parece, portanto, mais natural. Como a vari\'e1vel que est\'e1 sendo incrementada aqui n\'e3o aparece em uma express\'e3o, tanto o pr\'e9-incremento como o p\'f3s-incremento t\'eam o mesmo efeito. Os dois ponto-e-v\'edrgulas na estrutura for s\'e3o obrigat\'f3rios. \line Erro comum de programa\'e7\'e3o 2.15 \line Usar v\'edrgulas em vez dos dois ponto-e-v\'edrgulas exigidos no cabe\'e7alho de um for \'e9 um erm de sintaxe. \line Erro de programa\'e7\'e3o comum 2.16 \line Colocar um ponto-e-v\'edrgula imediatamente \'e0 direita do par\'eantese \'e0 direita do cabe\'e7alho de um for torna \line o corpo daquela estrutura for um comando vazio. Isto, normalmente, \'e9 um erro de l\'f3gica. \line Observa\'e7\'e3o de engenharia de software 2.9 \line Colocar um ponto-e-v\'edrgula logo depois do cabe\'e7alho de um for \'e9 \'e0s vezes usado para criar um la\'e7o chamado de la\'e7o de retardo. Tal la\'e7o for, com um corpo vazio, executa o n\'famero de vezes indicado, nada mais fazendo sen\'e3o contar. Voc\'ea pode usar um la\'e7o de retardo, por exemplo, para diminuir a velocidade de um programa que est\'e1 produzindo exibi\'e7\'f5es na tela muito rapidamente, para que voc\'ea possa l\'ea-las. \line As partes de inicializa\'e7\'e3o, condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o e de incremento de uma estrutura for podem conter express\'f5es aritm\'e9ticas. Por exemplo, assuma que x = 2 e y = 10. Sex e y n\'e3o s\'e3o modificados no corpo do la\'e7o, o comando \line for ( int j = x; j <= 4 * x * y; j + y / x ) \line\'e9 equivalente ao comando \line for (intj 2; j<=80; j +=5) \line O \ldblquote incremento\rdblquote  de uma estrutura for pode ser negativo (sendo, de fato, um decremento e o la\'e7o, na verdade, conta para tr\'e1s). \line Se a condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o \'e9 inicialmente falsa, o corpo da estrutura for n\'e3o \'e9 executado. Em vez \line disso, a execu\'e7\'e3o continua com o comando seguinte ao for. \line A vari\'e1vel de controle \'e9 freq\'fcentemente impressa ou usada em c\'e1lculos, no corpo de uma estrutura for, mas \line ela n\'e3o precisa ser. E comum usar a vari\'e1vel de controle somente para controlar a repeti\'e7\'e3o sem nunca refenci\'e1-la no corpo da estrutura for. \line Boa pr\'e1tica de programa\'e7\'e3o 2.22 \line Embora o valor da vari\'e1vel de controle possa ser mudado no corpo de um la\'e7o for, evite fazer isto, pois \line esta pr\'e1tica pode levar a erros de l\'f3gica sutis. \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 133 \par
O fluxograma da estrutura for \'e9 muito semelhante ao da estrutura while. A Fig. 2.19 mostra o fluxograma do comando for \line counter \line verdadeiro [_ <edi counter++ \line Corpo do la\'e7o Incrementa a \line (este pode ter vari\'e1vel de \line muitos comandos) controle \par
Fig. 2.19 Fluxograma de uma estrutura de repeti\'e7\'e3o for t\'edpica. \line O fluxograma torna claro que a inicializa\'e7\'e3o acontece uma vez e que o incremento acontece todas as vezes depois de o comando do corpo ser executado. Note que (al\'e9m de pequenos c\'edrculos e setas) o fluxograma cont\'e9m somente ret\'e2ngulos e losangos. Imagine, novamente, que o programador pode acessar uma caixa de estruturas for vazias - tantas quanto o programador poder\'e1 necessitar empilhar e aninhar com outras estruturas de controle, para formar uma implementa\'e7\'e3o estruturada de um algoritmo. Os ret\'e2ngulos e losangos s\'e3o preenchidos com a\'e7\'f5es e decis\'f5es apropriadas ao algoritmo. \line 2.15 Exemplos usando a estrutura for \line Os exemplos seguintes mostram diferentes m\'e9todos de fazer variar a vari\'e1vel de controle em uma estrutura for. Em cada caso, escrevemos o cabe\'e7alho do for apropriado. Note a mudan\'e7a no operador relacional para la\'e7os que decrementam a vari\'e1vel de controle. \line a) Fa\'e7a a vari\'e1vel de controle variar de 1 at\'e9 100 em incrementos de 1. \line for ( int i = 1; i <= 100; i++ \line b) Fa\'e7a a vari\'e1vel de controle variar de 100 at\'e9 1 em incrementos de -1 (decrementos de 1). \par
for ( irit i = 100; i > 1; i-- \par
Erro comum de programa\'e7\'e3o 2.17 \par
N\'e3o usar o operador relacional apropriado na condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o, em um la\'e7o que conta para tr\'e1s (tal como usar incorretamente i <= 1 em um la\'e7o que conta at\'e9 1) \'e9 normalmente um erro de l\'f3gica que produzir\'e1 resultados incorretos quando o programa for executado. \line c) Fa\'e7a a vari\'e1vel de controle variar de 7 at\'e9 77 em incrementos de 7. \par
for ( int counter = 1; counter <= 10; counter++ cout \'ab counter \'ab endl; \par
Estabelece o valor inicial da vari\'e1vel de controle -. \line Determina se o valor final da vari\'e1vel de controle foi atingido -a \par
falso \par
for ( inti=7; i<=77; i+=7 ) \par
\pard\par
\pard\sb100\sa240 134 C++ COMO PROGRAMAR \line d) Fa\'e7a a vari\'e1vel de controle variar de 20 at\'e9 2 em incrementos de -2. \line for ( int i = 20; i >= 2; i-=2 \line e) Fa\'e7a a vari\'e1vel de controle variar ao longo da seguinte seq\'fc\'eancia de valores: 2, 5, 8, 11, 14. \line 17, 20. \line for ( intj 2; j <201 j +=3 \line O Fa\'e7a a vari\'e1vel de controle variar segundo seq\'fc\'eancia seguinte de valores: 99. 88. 77, 66. 55, 44, 33, 22, 11, O. \line for ( int = 99; j >= 0; j -= 11) \line Os pr\'f3ximos dois exemplos fornecem aplica\'e7\'f5es simples da estrutura for. O programa da Fig. 2.20 usa a estrutura for para somar todos os inteiros de 2 a 100. \line 1 II Fig. 2.20: figO22O.cpp \line 2 // Somat\'f3rio com for \line 3 #include <iostream> \line 4 \line 5 using std::cout; \line 6 using std: :endl; \line 7 \line 8 intmain () \line 10 intsum=0; \line 11 \line 12 for ( int number = 2; number <= 100; number += 2 \line 13 sum += number; \line 14 \line 15 cout \'ab \ldblquote A soma \'e9 \ldblquote  \'ab sum \'ab endi; \line 16 \line 17 return 0; \line 18 \line A soma \'e9 2550 \line Fig. 2.20 Somat\'f3rio com for, \line Note que o corpo da estrutura for da Fig. 2.20 na verdade podia ser fundido com a parte mais \'e0 direita do \line cabe\'e7alho de for, usando-se o operador v\'edrgula como segue: \line for ( int nuxnber = 2; II inicializa\'e7\'e3o \line number <= 100; // condi\'e7\'e3o de continua\'e7\'e3o \line sum += number, number += 2) // totaliza\'e7\'e3o e incremento \line A atribui\'e7\'e3o sum = O tamb\'e9m poderia ser fundida com a se\'e7\'e3o de inicializa\'e7\'e3o do for. \line Boa pr\'e1tica de programa\'e7\'e3o 2.23 \line Embora os comandos que antecedem um for e os comandos no corpo de um for possam ser freq\'fcentemente fundidos no cabe\'e7alho do for, evite fazer isso porque torna o programa mais dif\'edcil de ser lido. \par
CAP\'edTULO 2 - ESTRUTURAS DE CONTROLE 135 \line Boa pr\'e1tica de programa\'e7\'e3o 2.24 \line Limite o tamanho de cabe \'e7alhos de estruturas de controle a uma \'fanica linha, se poss\'edvel. \line O pr\'f3ximo exemplo calcula juros compostos usando a estrutura for. Considere a seguinte defini\'e7\'e3o de problema: \line Uma pessoa investe $1000,00 em uma poupan\'e7a rendendo 5 por cento de juros. Assumindo que todo o rendimento dos juros \'e9 deixado depositado na conta, calcule e imprima a quantia de dinheiro na conta nofim de todo ano, por 10 anos. Use a seguinte f\'f3rmula para determinar estas quantias: \line a=p(l +r) \line onde \line p \'e9 a quantia original investida (i.e., o principal), \line r \'e9 a taxa anual de juros, \line n \'e9on\'famerodeanose \line a \'e9 a quantia em dep\'f3sito no fim do n-\'e9simo ano. \line Este problema envolve um la\'e7o que executa o c\'e1lculo indicado sobre o dinheiro em dep\'f3sito, para cada um dos 10 anos. A solu\'e7\'e3o \'e9 mostrada na Fig. 2.21. \line A estrutura for executa o corpo do la\'e7o 10 vezes, fazendo variar uma vari\'e1vel de controle de 1 at\'e9 10 em incrementos de 1. C++ n\'e3o inclui um operador de exponencia\'e7\'e3o; assim, usaremos a fun\'e7\'e3o pow, da biblioteca padr\'e3o, para esta finalidade. A fun\'e7\'e3o pow ( x, y ) calcula o valor de x elevado a y-\'e9sima pot\'eancia. Neste exemplo, a express\'e3o alg\'e9brica (1 + r) \'e9 escrita como pow ( 1 + rate, year ) , na qual a vari\'e1vel rate representa r e a vari\'e1vel year representa n. A fun\'e7\'e3o pow recebe dois argumentos do tipo double e retorna um valor double. \line Este programa n\'e3o compilaria sem a inclus\'e3o de <cmath>. A fun\'e7\'e3o pow exige dois par\'e2metros double. Note que year \'e9 um inteiro. O arquivo <cmath> inclui informa\'e7\'f5es que dizem ao compilador para converter o valor de year em uma representa\'e7\'e3o double tempor\'e1ria antes de chamar a fun\'e7\'e3o. Estas informa\'e7\'f5es est\'e3o contidas no prot\'f3tipo da fun\'e7\'e3o pow. Os prot\'f3tipos de fun\'e7\'f5es s\'e3o explicados no Cap\'edtulo 3. Fornecemos um resumo da fun\'e7\'e3o pow e outras fun\'e7\'f5es da biblioteca de matem\'e1tica no Cap\'edtulo 3. \line Erro comum de programa\'e7\'e3o 2.18 \line Esquecer de incluir o arquivo <cmath> em um programa que usa fun\'e7\'f5es da biblioteca matem\'e1tica \'e9 um \line erro de sintaxe. \line Note que declaramos as vari\'e1veis amount, principal e rate como do tipo double . Fizemos isto para simplificar, porque estamos lidando com partes fracion\'e1rias de moedas e necessitamos de um tipo que permita partes fracion\'e1rias em seus valores. Infelizmente, isto pode trazer dificuldades. Uma explica\'e7\'e3o simples do que pode dar errado quando usamos float ou double para representar quantias em moedas (supondo que setprecision (2) \'e9 \line usada para especificar dois d\'edgitos de precis\'e3o na impress\'e3o): duas quantidades expressas em d\'f3lares armazenadas na m\'e1quina poderiam ser 14,234 (impressa como 14,23) e 18,673 (impressa como 18,67). Quando estas quantias forem somadas, elas produzem a soma interna 32,907, que \'e9 impressa como 32,91. Deste modo, seu relat\'f3rio poderia se parecer com \line 14.23 \line + 18.67 \line 32.91 \line mas uma pessoa somando os n\'fameros individuais impressos esperaria obter a soma 32,90! Voc\'ea foi alertado! \par
136 C++ COMO PROGRAMAR \par
Boa pr\'e1tica de programa\'e7\'e3o 2.25 \line N\'e3o use vari\'e1veis do tipo float ou double para fazer c\'e1lculos monet\'e1rios. A imprecis\'e3o dos n\'fameros de ponto flutuante pode causar erros que resultar\'e3o em valores monet\'e1rios incorretos. Nos exerc\'edcios, exploramos o uso de inteiros para executar c\'e1lculos monet\'e1rios. Nota: bibliotecas de classes de C+ + de fornecedores independentes est\'e3o dispon\'edveis para executar corretamente c\'e1lculos monet\'e1rios. \line 1 II Fig. 2.21: figO22l.cpp \line 2 II Calculando juros compostos \line 3 #include <iostream> \line 4 \line 5 using std::cout; \line 6 using std::endl; \line 7 using std::ios; \line 8 \line 9 #include <iomanip> \line 10 \line 11 using std::setw; \line 12 using std::setiosflags; \line 13 using std::setprecision; \line 14 \line 15 #include <cmath> \line 16 \line 17 int main \line 18 \{ \line 19 double amount, II quantia em dep\'f3sito \line 20 principal = 1000.0, II inicializando o capital \line 21 rate = .05; II taxa de juros \line 22 \line 23 cout \'ab \ldblquote Ano\rdblquote  \'ab setw( 21 \line 24 \'ab \ldblquote Quantia em dep\'f3sito\rdblquote  \'ab endl; \line 25 \line 26 II ajusta o formato de n\'fameros em ponto flutuante \line 27 cout\'ab setiosflags( ios::fixed 1 ios::showpoint \line 28 \'ab setprecision( 2 ); \line 29 \line 30 for ( int year = 1; year <= 10; year++ \line 31 amount = principal * pow( 1.0 + rate, year ); \line 32 cout \'ab setw( 4 ) \'ab year\'ab setw( 21 ) \'ab amount \'ab endl; \line 33 \} \line 34 \line\bullet 1 35 return 0; \line 36 \} \line Ano Quantia em dep\'f3sito \line 1 1050.00 \line 2 1102.50 \line 3 1157.62 \line 4 1215.51 \line 5 1276.28 \line 6 1340.10 \line 7 1407.10 \line 8 1477.46 \line 9 1551.33 \line 10 1628.89 \par
Fig. 2.21 Calculando juros compostos com for. \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 137 \line O comando de sa\'edda \line cout\'ab setiosflags( ios::fixed 1 ios::showpoint \line\'ab setprecision( 2 ); \line antes do la\'e7o for e o comando de sa\'edda \line cout\'ab setw( 4 ) \'ab year\'ab setw( 21 ) \'ab amount \'ab endi; \line no la\'e7o for s\'e3o combinados para imprimir os valores das vari\'e1veis year e amount com a formata\'e7\'e3o especificada pelos manipuladores de stream parametrizados setw. setiosflags e setprecision. A chamada setw 4 ) especifica que o pr\'f3ximo valor de sa\'edda \'e9 impresso em um campo de comprimento 4, i.e., o valor \'e9 impresso \line com pelo menos 4 posi\'e7\'f5es de caracteres. Se o valor a ser exibido/impresso tem menos que 4 caracteres de comprimento, o valor \'e9 alinhado \'e0 direita no campo automaticamente. Se o valor a ser exibido/impresso tem mais de 4 caracteres de comprimento, o comprimento do campo \'e9 estendido para acomodar todo o valor. A chamada seti- osflags (ios: : left) pode ser usada para especificar que os valores devem ser exibidos/impressos alinhados \'e0 esquerda no campo. \line O restante da formata\'e7\'e3o no comando de sa\'edda precedente indica que a vari\'e1vel amount \'e9 impressa como um valor de ponto fixo com uma casa decimal (especificada com o manipulador de stream setiosflags ( ios: \line fixed 1 ios: : showpoint )) alinhado \'e0 direita em um campo de 21 posi\'e7\'f5es de caracteres (especificado com setw( 21 )) e dois d\'edgitos de precis\'e3o \'e0 direita da casa decimal (especificado com setprecision (2). Discutiremos em detalhes as poderosas capacidades de formata\'e7\'e3o de entrada/sa\'edda de C++ no Cap\'edtulo 11. Colocamos os manipuladores de stream setiosflags e setprecision em um comando cout antes do la\'e7o for porque estes ajustes continuam valendo at\'e9 que sejam mudados. Assim, eles n\'e3o precisam ser aplicados durante cada itera\'e7\'e3o do la\'e7o. \line Note que o c\'e1lculo 1 . O + rate, que aparece como um par\'e2metro para a fun\'e7\'e3o pow, est\'e1 contido no corpo \line do comando for. Na verdade, este c\'e1lculo produz o mesmo resultado toda vez que o la\'e7o \'e9 executado, de modo que repetir o c\'e1lculo \'e9 um desperd\'edcio de tempo. \line Dica de desempenho 2.5 \line\bullet  Evite colocar express\'f5es cujos valores n\'e3o mudam dentro de la\'e7os - mas, ainda que voc\'ea assim o fa\'e7a, muitos dos sofisticados compiladores otimizadores atuais automaticamente colocar\'e3o tais express\'f5es fora \line dos la\'e7os no c\'f3digo gerado em linguagem de m\'e1quina. \line Dica de desempenho 2.6 \line f Muitos compiladores cont\'eam recursos de otimiza\'e7\'e3o que melhoram o c\'f3digo que voc\'ea escreve; por\'e9m, ainda \'e9 melhor escrever um bom c\'f3digo desde o in\'edcio. \line Por divers\'e3o, n\'e3o deixe de tentar resolver nosso problema de Peter Minuit nos exerc\'edcios do cap\'edtulo. Este problema demonstra as maravilhas dos juros compostos. \line 2.16 A estrutura de sele\'e7\'e3o m\'faltipla switch \line Discutimos a estrutura de sele\'e7\'e3o if de sele\'e7\'e3o \'fanica e a estrutura if/else de sele\'e7\'e3o dupla. Ocasionalmente, um algoritmo conter\'e1 uma s\'e9rie de decis\'f5es em que uma vari\'e1vel ou express\'e3o ser\'e1 separadamente testada para cada um dos valores integrais constantes que ela pode assumir e a\'e7\'f5es diferentes ser\'e3o executadas. C++ oferece a estrutura de sele\'e7\'e3o m\'faltipla switch para tratar tais tomadas de decis\'f5es. \line A estrutura switch consiste em uma s\'e9rie de r\'f3tulos case e um caso default opcional. O programa na \line Fig. 2.22 usa switch para contar a quantidade de cada nota representada por letra diferente que estudantes receberam em um exame. \par
1 \line 2 \line 3 \line 4 \line 5 \line 6 \line 7 \line 8 \line 9 \line 10 \line 11 \line 12 \line 13 \line 14 \line 15 \line 16 \line 17 \line 18 \line 19 \line 20 \par
22 \line 23 \line 24 \line 25 \line 26 \line 27 \line 28 \line 29 \line 30 \line 31 \line 32 \line 33 \line 34 \line 35 \line 36 \line 37 \line 38 \line 39 \line 40 \line 41 \line 42 \line 43 \line 44 \line 45 \line 46 \line 47 \line 48 \line 49 \line 50 \line 51 \line 52 \line 53 \line 54 \line 55 \line 56 \line 57 \par
using std::cout; using std::cin; using std::endl; \line int main \line int grade, \line aCount = 0, \line bCount = 0, \line cCount = 0, \line dCount 0, \line fCount = 0; \par
case A\rquote  case a\rquote : \line ++aCount; \line break; \line case \lquote B\rquote : \line case \lquote b\rquote : \line ++bCount; \line break; \line case \lquote C\rquote : \line case \lquote c\rquote : \line ++cCount; \line break; \line case \lquote D\rquote : \line case \lquote d\rquote : \line ++dCount; \line break; \line case \lquote F\rquote : \line case \lquote f\rquote : \par
++fCount; \line break; \line case case case \line break; \line default: \par
// uma nota \line // n\'famero de As \line // n\'famero de Bs \line // n\'famero de Cs \line II n\'famero de Ds \line // n\'famero de Fs \par
// nota foi A mai\'fasculo // ou a min\'fasculo \par
II nota foi C mai\'fasculo // ou c min\'fasculo \par
II nota foi D mai\'fasculo // ou d min\'fasculo \line // nota foi F mai\'fasculo II ou f min\'fasculo \line II ignora newlines, II tabula\'e7\'f5es, II e espa\'e7os na entrada \par
138 C++ COMO PROGRAMAR \par
II Fig. 2.22: figo2_22.cpp \line II Contando notas representadas por letras #include <iostream> \par
cout\'ab \ldblquote Forne\'e7a as notas representadas por letras.\rdblquote  \'ab endl \line\'ab \ldblquote Digite o caractere EOF para terminar a entrada de dados.\rdblquote  \'ab endi; \line 21 while ( (grade = cin.get ( ) ) = EOF \line switch ( grade ) // switch aninhado no while \par
1 \par
// necess\'e1rio para sair do switch \line // nota foi B mai\'fasculo /1 ou b min\'fasculo \par
II pega todos os outros caracteres \line cout \'ab \ldblquote Fornecida nota representada por letra incorreta.\rquote  \'ab \ldblquote  Digite urna nova nota.\rdblquote  \'ab endl; \par
Fig. 2.22 Um exemplo usando switch (parte 1 de 2). \par
68 \line 69 return 0; \line 70 \par
totais para cada nota representada por letra s\'e3o:\rdblquote  \line\'ab aCount \line\'ab bCount \line\'ab cCount \line\'ab dCount \line\'ab fCount \'ab endl; \par
Forne\'e7a as notas representadas por letras. \line Digite o caractere EOF para terminar a entrada de dados. \par
a \line B \line c \line c \line A \par
d \line f \line c \line E \par
Fornecida nota representada por letra incorreta. Digite uma nova nota. \line D \par
A \par
b \par
Os totais para cada nota representada por letra s\'e3o: \line A: 3 \par
B: 2 \line C: 3 \line O: 2 \line F: 1 \par
Fig. 2.22 Um exemplo usando switch (parte 2 de 2). \par
No programa, o usu\'e1rio digita notas representadas por letras para uma turma. Dentro do cabe\'e7alho do while, while ( ( grade = cin.get ( ) ) != EOF) \line a atribui\'e7\'e3o entre par\'eanteses ( grade = cm . get ( \'e9 executada primeiro. A fun\'e7\'e3o ci get ( ) l\'ea um caractere do teclado e armazena esse caractere na vari\'e1vel inteira grade. A nota\'e7\'e3o com ponto usada em cm . get ( ) ser\'e1 explicada no Cap\'edtulo 6, \ldblquote Classes\rdblquote . Caracteres normalmente s\'e3o armazenados em vari\'e1veis do tipo char. Por\'e9m, uma caracter\'edstica importante de C++ \'e9 que caracteres podem ser armazenados em qualquer tipo de dado inteiro porque s\'e3o representados como inteiros de 1 byte no computador. Deste modo, podemos tratar um caractere ou como um inteiro ou como um caractere, dependendo de seu uso. Por exemplo, o comando \line cout \'ab \lquote 0 caractere (\ldblquote  \'ab \lquote a\rquote  \'ab \ldblquote ) tem o valor \line\'ab static cast< int > ( \lquote a ) \'ab endl; \line imprime o caractere a e seu valor inteiro, como segue \par
break; II opcional \par
58 \line 59 \line 60 \line 61 \line 62 \line 63 \line 64 \line 65 \line 66 \line 67 \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 139 \par
cout \'ab \line\'ab \line\'ab \line\'ab \line\'ab \line\'ab \par
\ldblquote\\n\\nOs \line\\nB: \par
O caractere (a) tem o valor 97 \par
140 C++ COMO PROGRAMAR \line O inteiro 97 \'e9 a representa\'e7\'e3o num\'e9rica do caractere no computador. Muitos computadores hoje usam o conjunto de caracteres ASCII (American Standard Code for Information Interchange), no qual 97 representa a letra m\'ednuscula \lquote a\rquote . Nos ap\'eandices, \'e9 apresentada a lista dos caracteres ASCII e seus valores decimais. \line Os comandos de atribui\'e7\'e3o como um todo t\'eam o valor que \'e9 atribu\'eddo \'e0 vari\'e1vel \'e0 esquerda do =. Deste modo, o valor da atribui\'e7\'e3o grade = cm . get \'e9 o mesmo que o valor retornado por cm . get ( ) e atribu\'eddo \'e0 vari\'e1vel grade. \line O fato que comandos de atribui\'e7\'e3o t\'eam valores pode ser \'fatil para inicializar v\'e1rias vari\'e1veis com o mesmo valor. Por exemplo, \line a = b = c = O; \line primeiro avalia a atribui\'e7\'e3o c = O (porque o operador = se associa da direita para a esquerda). \'c0 vari\'e1vel b \'e9 ent\'e3o atribu\'eddo o valor da atribui\'e7\'e3o c = O (que \'e9 O). Ent\'e3o, \'e0 vari\'e1vel a \'e9 atribu\'eddo o valor da atribui\'e7\'e3o b = Cc = O) (que tamb\'e9m \'e9 O). No programa, o valor da atribui\'e7\'e3o grade = cm . get \'e9 comparado com o valor de EOF (um s\'edmbolo formado com as iniciais de \ldblquote fim de arquivo\rdblquote  em ingl\'eas). Usamos EOF (que tem normalmente o valor \line -1) como o valor sentinela. No entanto, voc\'ea n\'e3o digita o valor -1 nem as letras EOF como valor sentinela. O usu\'e1rio digita uma combina\'e7\'e3o de teclas, dependente do sistema, para informar \ldblquote fim de arquivo\rdblquote , i.e., \ldblquote eu n\'e3o tenho mais dados para digitar\rdblquote . EOF \'e9 uma constante inteira simb\'f3lica definida no \ldblquote arquivo de cabe\'e7alho\rdblquote  <iostreani>. Se o valor atribu\'eddo a grade for igual a EQE, o programa termina. Optamos por representar caracteres neste programa como ints porque EOF tem um valor inteiro (repetindo, normalmente -1). \line Dica de portabilidade 2.2 \line ______ As combina\'e7\'f5es de teclas para digitar fim de arquivo s\'e3o dependentes do sistema. \line Dica de portabilidade 2.3 \line ______ Testar a constante simb\'f3lica EOF em lugar de -1 torna os programas mais port\'e1veis. O padr\'e3o ANSI estabelece que EOF \'e9 um valor inteiro negativo (mas n\'e3o necessariamente -1). Assim, EOF pode ter valores diferentes em sistemas diferentes. \line Nos sistemas UNIX e muitos outros, o fim de arquivo \'e9 indicado digitando-se a seq\'fc\'eancia \line <ctrl-d> \line em uma linha. Esta nota\'e7\'e3o significa apertar simultaneamente tanto a tecla ctrl como a tecla d. Em outros sistemas, tal como o VAX VMS da Digital Equipment Corporation ou o MS-DOS da Microsoft Corporation, o fim de arquivo pode ser indicado digitando-se \line <ctrl-z> \line Nota: em alguns casos, voc\'ea pode ter que apertar Enter ap\'f3s a seq\'fc\'eancia de teclas precedente. \line O usu\'e1rio fornece as notas pelo teclado. Quando a tecla Enter (ou Return) \'e9 apertada, os caracteres s\'e3o udos pela fun\'e7\'e3o cm . get ( ) um caractere de cada vez. Se o caractere digitado n\'e3o \'e9 fim de arquivo, a estrutura switch \'e9 executada. A palavra-chave switch \'e9 seguida pelo nome de vari\'e1vel grade entre par\'eanteses. Isto \'e9 chamado de express\'e3o de controle. O valor desta express\'e3o \'e9 comparado com cada um dos r\'f3tulos case. Assuma \line 4 que o usu\'e1rio digitou a letra C como uma nota. C \'e9 automaticamente comparada a cada case no switch, Se \line :4 ocorre uma igualdade (case \lquote C\rquote  :), os comandos para esse case s\'e3o executados. Para a letra C, cCount \'e9 incre1 mentado por 1 e sai da estrutura switch imediatamente com o comando break. Note que, diferentemente de \line outras estruturas de controle, n\'e3o \'e9 necess\'e1rio se incluir um comando case m\'faltiplo entre chaves. \line O comando break faz com que o controle do programa passe para o primeiro comando depois da estrutura switch. O comando break \'e9 usado porque, caso contr\'e1rio, os cases em um comando switch seriam executados juntos. Se break n\'e3o for usado em algum lugar em uma estrutura switch, ent\'e3o toda vez que ocorrer uma igualdade, ou correspond\'eancia, na estrutura, os comandos para todos os casos restantes ser\'e3o executados. (Esta \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 141 \line caracter\'edstica \'e0s vezes \'e9 \'fatil quando se quer executar as mesmas a\'e7\'f5es para v\'e1rios cases, como no programa da Fig. 2.22.) Se nenhuma correspond\'eancia ocorrer, ocaso default \'e9 executado e \'e9 impressa uma mensagem de erro. \line Cada case pode ter uma ou mais a\'e7\'f5es. A estrutura switch \'e9 diferente de todas outras estruturas no sentido \line de que n\'e3o s\'e3o exigidas chaves antes e depois de a\'e7\'f5es m\'faltiplas em um case de um switch. O fluxograma da estrutura de sele\'e7\'e3o m\'faltipla switch gen\'e9rica (usando um break em cada case) \'e9 mostrado na Fig. 2.23. \line O fiuxograma torna claro que cada comando break no fim de um case faz com que o controle saia imediatamente da estrutura switch. Novamente, note que (al\'e9m de pequenos c\'edrculos e setas) o fluxograma cont\'e9m s\'f3 ret\'e2ngulos e losangos. Imagine, novamente, que o programador tem acesso a uma caixa cheia de estruturas switch vazias - tantas quanto o programador poderia necessitar para empilhar e aninhar com outras estruturas de controle para formar uma implementa\'e7\'e3o estruturada do fluxo de controle de um algoritmo. E, novamente, os ret\'e2ngulos e losangos s\'e3o ent\'e3o prenchidos com a\'e7\'f5es e decis\'f5es apropriadas ao algoritmo. Estruturas de controle aninhadas s\'e3o comuns, mas \'e9 raro se encontrar em um programa estruturas switch aninhadas. \par
falso \par
Fig. 2.23 A estrutura de sele\'e7\'e3o m\'faltipla switch com breaks. \par
142 C++ COMO PROGRAMAR \line Erro comum de programa\'e7\'e3o 2.19 \line Esquecer um comando break, quando \'e9 necess\'e1rio um, em uma estrutura switch, \'e9 um erro de \line l\'f3gica. \line Erro comum de programa\'e7\'e3o 2.20 \line Omitir o espa\'e7o entre a palavra case e o valor inteiro que est\'e1 sendo testado, em uma estrutura swi - tch, pode causar um erro de l\'f3gica. Por exemplo, escrever case3: em vez de escrever case 3: simplesmente cria um r\'f3tulo n\'e3o-usado (falaremos mais sobre isto no Cap\'edtulo 18). O problema \'e9 que a \line estrutura switch n\'e3o executar\'e1 as a\'e7\'f5es apropriadas quando a express\'e3o de controle do switch tiver \line o valor 3. \line Boa pr\'e1tica de programa\'e7\'e3o 2.26 \line Forne\'e7a um caso default em comandos switch. Os casos n\'e3o-testados explicitamente em um comando switch sem um caso default s\'e3o ignorados. Incluir um caso default chama a aten\'e7\'e3o do programador sobre a necessidade de processar condi\'e7\'f5es excepcionais. Existem situa\'e7\'f5es em que nenhum processamento defaul t \'e9 necess\'e1rio. Embora as cl\'e1usulas case e a cl\'e1usula do caso defaul t em uma estrutura swi tch possam ocorrer em qualquer ordem, \'e9 considerada uma boa pr\'e1tica de programa\'e7\'e3o colocar a cl\'e1usula default por \'faltimo. \line Boa pr\'e1tica de programa\'e7\'e3o 2.27 \line Em uma estrutura switch, quando a cl\'e1usula default \'e9 listada por \'faltimo, o comando break n\'e3o \line\'e9 necess\'e1rio. Alguns programadores incluem este break por clareza e simetria com outros casos. \line Na estrutura switch da Fig. 2.22, as linhas 50 a 53 \line case \line case \line case \line break; \line fazem o programa ignorar caracteres de nova linha, marcas de tabula\'e7\'e3o e caracteres \ldblquote branco\rdblquote . Ler um caractere de cada vez pode causar alguns problemas. Para que o programa leia os caracteres, eles devem ser enviados ao computador pressionando-se a tecla Enter no teclado. Isto coloca um caractere de nova linha na entrada, depois do caractere que desejamos processar. Freq\'fcentemente, este caractere de nova linha deve ser processado especialmente para fazer o programa funcionar corretamente. Pela inclus\'e3o dos casos precedentes em nossa estrutura switch, evitamos que a mensagem de erro do caso default seja impressa sempre que um caractere de nova linha, marca de tabula\'e7\'e3o ou espa\'e7o \'e9 encontrado na entrada. \line Erro com um de programa\'e7\'e3o 2.21 \line N\'e3o processar caracteres de nova linha e outros caracteres de espa\'e7o na entrada, quando estivermos \line lendo caracteres um de cada vez, pode causar erros de l\'f3gica. \line Note que v\'e1rios r\'f3tulos de caso listados juntos (tal como case \lquote D\rquote  : case d\rquote  : na Fig. 2.22) simplesmente indicam que o mesmo conjunto de a\'e7\'f5es deve ocorrer para cada um dos casos. \line Quando usar a estrutura switch, lembre-se de que ela s\'f3 pode ser usada para testar uma express\'e3o inteira constante, i.e., qualquer combina\'e7\'e3o de constantes de caracteres e constantes inteiras cujo valor \'e9 um inteiro constante. Uma constante de caractere \'e9 representada com o caractere espec\'edfico entre ap\'f3strofes, tal como \lquote A\rquote  . Uma constante inteira \'e9 simplesmente um valor do tipo inteiro. \line Quando chegarmos \'e0 parte do livro sobre programa\'e7\'e3o orientada a objetos, apresentaremos um caminho mais elegante para implementar a l\'f3gica de switch. Usaremos uma t\'e9cnica chamada polimorfismo para criar programas que freq\'fcentemente s\'e3o claros, mais concisos, mais f\'e1ceis de manter e mais f\'e1ceis de estender que os programas que usam l\'f3gica de switch. \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 143 \par
As linguagens port\'e1veis como C-i-+ devem ter tamanhos de tipos de dados flex\'edveis. Aplicativos diferentes podem necessitar de inteiros de tamanhos diferentes. C++ oferece v\'e1rios tipos de dados para representar inteiros. O intervalo de valores inteiros para cada tipo depende do hardware de um computador particular. Al\'e9m dos tipos int e char, C++ oferece os tipos short (uma abrevia\'e7\'e3o de short int) e long (uma abrevia\'e7\'e3o de long int). O intervalo m\'ednimo de valores para inteiros short \'e9 -32.768 a 32.767. Para a vasta maioria dos c\'e1lculos com inteiros, inteiros long s\'e3o suficientes. O intervalo de valores m\'ednimo para inteiros long \'e9 -2.147.483.648 a 2.147,483.647. Na maioria dos computadores, ints s\'e3o equivalentes ou a short ou a long. O intervalo de valores para um int \'e9 pelo menos o mesmo que o intervalo para inteiros short e n\'e3o maior que o intervalo para inteiros long. O tipo de dados char pode ser usado para representar quaisquer dos caracteres no conjunto de caracteres do computador. O tipo de dados char tamb\'e9m pode ser usado para representar valores inteiros peque- \par
nos, \par
Dica de portabilidade 2.4 \par
Como ints variam de tamanho entre sistemas, use inteiros long se voc\'ea espera processar inteiros fora do intervalo -32.768 a 32.767 e quer ser capaz de executar seu programa em v\'e1rios sistemas de computador diferentes. \par
Dica de desempenho 2.7 \par
Em situa\'e7\'f5es voltadas para o desempenho, em que a mem\'f3ria \'e9 muito escassa ou a velocidade de execu\'e7\'e3o \'e9 crucial, pode ser desej\'e1vel usar tamanhos menores de inteiros. \par
Dica de desempenho 2.8 \line Usar tamanhos de inteiro menores pode resultar em um programa mais lento se as instru\'e7\'f5es da m\'e1quina para manipul\'e1-los n\'e3o forem t\'e3o eficientes quanto aquelas para os inteiros de tamanho natural (por exemplo, pode ser preciso fazer extens\'e3o do bit de sinal neles). \par
Erro comum de programa\'e7\'e3o 2.22 \par
Fornecer r\'f3tulos de case id\'eanticos, em uma estrutura switch, \'e9 erro de sintaxe. \par
2.17 A estrutura de repeti\'e7\'e3o do/while \par
A estrutura de repeti\'e7\'e3o do/while \'e9 semelhante \'e0 estrutura while. Na estrutura while, a condi\'e7\'e3o cc cominua\'e7\'e3o do la\'e7o \'e9 testada no princ\'edpio do la\'e7o antes do corpo do la\'e7o ser executado. A estrutura do/while testa a condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o depois do corpo do la\'e7o ser executado; assim, o corpo do la\'e7o ser\'e1 executado pelo menos uma vez. Quando um do/while termina, a execu\'e7\'e3o continua com o comando depois da cl\'e1usula while. Note que n\'e3o \'e9 necess\'e1rio usar chaves na estrutura do/while se existir s\'f3 um comando no corpo. Por\'e9m, as chaves s\'e3o normalmente inclu\'eddas para evitar confus\'e3o entre a estrutura while e a estrutura do/while. Por exemplo, \par
while (condition \par
\'e9 normalmente considerado como o cabe\'e7alho de uma estrutura while. Um do/while sem chaves em torno do corpo de comando \'fanico aparece como \par
do \par
state,nent \par
while (condition \par
que pode ser confuso. A \'faltima linha - while (condition) ; - pode ser mal interpretada pelo leitor como uma estrutura while contendo um comando vazio. Deste modo, o do/while com um comando \'e9 freq\'fcentemente escrito como segue, para evitar confus\'e3o: \par
do \par
.ltatenlent \line 1 while ( condition \par
144 C++ COMO PROGRAMAR \line Boa pr\'e1tica de programa\'e7\'e3o 2.28 \line Alguns programadores sempre incluem chaves em uma estrutura do/while mesmo que as chaves n\'e3o sejam necess\'e1rias. Isto ajuda a eliminar a ambig\'fcidade entre a estrutura while e a estrutura do/while contendo um \'fanico comando. \line Erro comum de programa\'e7\'e3o 2.23 \line La\'e7os infinitos s\'e3o causados quando a condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o, em uma estrutura while. for ou do/whi le, nunca se torna falsa. Para prevenir este erro, tenha certeza de que o valor da condi\'e7\'e3o muda em algum lugar no cabe\'e7alho ou no corpo do la\'e7o, de maneira que a condi\'e7\'e3o possa, em algum momento, se tornar falsa. \line O programa na Fig. 2.24 usa uma estrutura de repeti\'e7\'e3o do/while para imprimir os n\'fameros de 1 at\'e9 10. Note que \line a vari\'e1vel de controle counter \'e9 pr\'e9-incrementada no teste de continua\'e7\'e3o do la\'e7o. Note tamb\'e9m o uso das chaves \line para incluir o \'fanico comando do corpo da estrutura do/while. \line 1 II Fig. 2.24: figO2_24.cpp \line 2 II usando a estrutura de repeti\'e7\'e3o do/while \line 3 #include <iostream> \line 4 \line 5 using std: :cout; \line 6 using std::endl; \line 7 \line 8 intmain () \line 9 \{ \line 10 int counter = 1; \line 11 \line 12 do\{ \line 13 cout \'ab counter \'ab \line 14 \} while ( ++counter < 10 ); \line 15 \line 16 cout \'ab endi; \line 17 \line 18 return 0; \line 19 \line 2345678910 \line Fig. 2.24 Usando a estrutura do/while. \line O fluxograma da estrutura do/while \'e9 mostrado na Fig. 2.25. Este fluxograma torna claro que a condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o n\'e3o \'e9 executada at\'e9 depois da a\'e7\'e3o ser executada pelo menos uma vez. Novamente, note que (al\'e9m de pequenos c\'edrculos e setas) o fluxograma cont\'e9m s\'f3 um ret\'e2ngulo e um losango. Imagine, novamente, que o programador tem acesso a uma caixa cheia de estruturas do/while vazias - tantas quantas o programador possa necessitar empilhar e aninhar em outras estruturas de controle para formar uma implementa\'e7\'e3o estruturada do fluxo de controle de um algoritmo. E, novamente, os ret\'e2ngulos e losangos s\'e3o ent\'e3o prenchidos com a\'e7\'f5es e decis\'f5es apropriadas ao algoritmo. \line 2.18 Os comandos break e continue \line Os comandos break e continue alteram o fluxo de controle, O comando break. quando executado em uma estrutura while, for, do/while ou switch, provoca a sa\'edda imediata da estrutura. A execu\'e7\'e3o do programa continua com o primeiro comando depois da estrutura. Os usos mais comuns do comando break s\'e3o sair antecipadamente de um la\'e7o ou saltar o restante de uma estrutura switch (como na Fig. 2.22). A Fig. 2.26 demonstra o \par
iao \line le \par
CAP\'edTULo 2 ESTRUTURAS DE CONTROLE 145 \par
comando break em uma estrutura de repeti\'e7\'e3o for. Quando a estrutura if descobre que x se tornou 5, o break \'e9 executado. Isto termina o comando for e o programa continua com o cout depois do for. O la\'e7o \'e9 executado completamente s\'f3 quatro vezes. \line Note que a vari\'e1vel de controle x neste programa \'e9 definida fora do cabe\'e7alho da estrutura for. Isto porque \line pretendemos usar a vari\'e1vel de controle tanto no corpo do la\'e7o como depois do la\'e7o completar sua execu\'e7\'e3o. \par
1 II Fig. 2.26: figo2_26.cpp \line 2 // Usando o comando break em uma estrutura for \line 3 #include <iostream> \par
4 \par
using std::cout; \line using std: :endl; \par
int main \par
x \'e9 declarado aqui para que possa ser usado ap\'f3s o la\'e7o int x; \par
for ( x 1; x <= 10; x++ \par
if ( x == 5 \line break; /1 sai do la\'e7o somente se x \'e9 5 \par
ou \line em \line , se \par
que \line aves \par
Fig. 2.25 O fluxograma da estrutura de repeti\'e7\'e3o do/while. \par
lo de que que )ossa [luxo is\'f5es \par
5 \line 6 \line 7 \line 8 \line 9 \line 10 \line 1]. \line 12 \line 13 \line 14 \line 15 \line 16 \line 17 \line 18 \line 19 \line 20 \line 21 \line 22 \line 23 \par
1 \par
cout \'ab x \'ab \line cout \'ab \ldblquote\\nSaiu do la\'e7o com x igual a \'ab x \'ab endi; return 0; \par
uma \line rama cipatra o \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx544\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx953\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1680\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3174\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5204\pard\intbl 123 \cell 4 \cell\cell\cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx953\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1680\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5204\pard\intbl Saiu do \cell la\'e7o \cell com x igual a 5 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx953\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1680\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3174\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5204\pard\intbl Fig. 2.26 U \cell sancio \cell o comando brea \cell k em uma estrutura for. \cell\row\pard\par
\pard\sb100\sa240 146 C++ COMO PROGRAMAR \line O comando continue, quando executado em uma estrutura while. for ou do/while. salta os comandos restantes no corpo dessa estrutura e prossegue com a pr\'f3xima repeti\'e7\'e3o do la\'e7o. Em estruturas while e dof while. o teste de continua\'e7\'e3o do la\'e7o \'e9 feito logo depois do comando continue ser executado. Na estrutura for, a express\'e3o de incremento \'e9 executada e ent\'e3o \'e9 feito o teste de continua\'e7\'e3o do la\'e7o. Anteriormente, declaramos que a estrutura while pode ser usada na maioria dos casos para representar a estrutura for. A \'fanica exce\'e7\'e3o ocorre quando a express\'e3o de incremento na estrutura while vem ap\'f3s o comando continue. Neste caso, o incremento n\'e3o \'e9 executado antes da condi\'e7\'e3o de repeti\'e7\'e3o/continua\'e7\'e3o ser testada e o while n\'e3o \'e9 executado da mesma maneira que o for. A Fig. 2.27 usa o comando continue em um estrutura for para saltar o comando de sa\'edda na estrutura e come\'e7ar a pr\'f3xima repeti\'e7\'e3o do la\'e7o. \line 1 II Fig. 2.27: fig0227.cpp \line 2 // Usando o comando continue em uma estrutura for \line 3 #include <iostream> \line 4 \line 5 using std::cout; \line 6 using std::endl; \line 7 \line 8 int main O \line 9 \{ \line 10 for ( int x = 1; x <= 10; x++ \line 11 \line 12 if(x5) \line 13 continue; // salta o restante do c\'f3digo no la\'e7o \line 14 // somente se x \'e9 5 \line 15 \line 16 cout \'ab x \'ab \line 17 \line 18 \line 19 cout \'ab \ldblquote\\nusou continue para pular a impress\'e3o do valor 5\rquote  \line 20 \'ab endi; \line 21 returnO; \line 22 \line 1 2 3 4 6 7 8 9 10 \line Usou cont\'ednue para pular a impress\'e3o do valor 5 \line Fig. 2.27 Usando o comando continue em uma estrutura for. \line Boa pr\'e1tica de programa\'e7\'e3o 2.29 \line Alguns programadores consideram que break e continue violam a programa\'e7\'e3o estruturada. Como os efeitos destes comandos podem ser obtidos por t\'e9cnicas de progrwna\'e7\'e3o estruturada que logo aprenderemos, estes programadores n\'e3o usam break e continue. \line\ul fDica \ulnone de desempenho 2.9 \line ______ Os comandos break e continue, quando usados corretamente, s\'e3o executados mais rapidamente que \line as t\'e9cnicas estruturadas correspondentes que logo aprenderemos. \line Observa\'e7\'e3o de engenharia de software 2.10 \line Existe um certo conflito, ou incompatibilidade, entre realizar uma engenharia de software de qualidade e obter o software de melhor desempenho. Freq\'fcentemente, uma destas metas \'e9 alcan\'e7ada \'e0s custas da outra. \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 147 \par
ilta os comandos ,s while e do! \line ido. Na estrutura 3rmente, declara- A \'fanica exce\'e7\'e3o \line ie. Neste caso, o lo \'e9 executado da Itar o comando de \par
2.19 Operadores l\'f3gicos \line At\'e9 agora estudamos somente condi\'e7\'f5es simples, tais como counter <= 10, total > 1000 e nuniber ! = sentinelValue. Expressamos estas condi\'e7\'f5es em termos dos operadores relacionais>. <, > e < e dos operadores de igualdade == e ! . Cada decis\'e3o testa precisamente uma condi\'e7\'e3o. Para testar condi\'e7\'f5es m\'faltiplas ao tomar uma decis\'e3o, executamos estes testes em comandos separados, ou em if ou estruturas if/else aninhadas. \line C++ oferece operadores l\'f3gicos que s\'e3o usados para especificar condi\'e7\'f5es mais complexas combinando condi\'e7\'f5es simples. Os operadores l\'f3gicos s\'e3o: & & (E l\'f3gico), 1 1 (OU l\'f3gico) e ! (NAO l\'f3gico, tamb\'e9m chamado de nega\'e7\'e3o l\'f3gica). Examinaremos exemplos de cada um destes. \line Suponhamos que desejemos nos assegurar de que duas condi\'e7\'f5es s\'e3o ambas true, antes de escolhermos um certo caminho de execu\'e7\'e3o. Neste caso, podemos usar o operador l\'f3gico &&, como segue: \line Este comando if cont\'e9m duas condi\'e7\'f5es simples. A condi\'e7\'e3o gender == 1 poderia ser avaliada, por exemplo, para determinar se uma pessoa \'e9 uma mulher. A condi\'e7\'e3o age >= 65 \'e9 avaliada para determinar se uma pessoa \'e9 idosa. A condi\'e7\'e3o simples \'e0 esquerda do operador && \'e9 avaliada primeiro, porque a preced\'eancia de == \'e9 mais alta que a preced\'eancia de &&. Se necess\'e1rio, a condi\'e7\'e3o simples \'e0 direita do operador && \'e9 avaliada em seguida, porque a preced\'eancia de >= \'e9 mais alta que a preced\'eancia de & & (como discutiremos em breve, o lado direito de uma express\'e3o l\'f3gica E s\'f3 \'e9 avaliado se o lado esquerdo \'e9 (true) . O comando if, ent\'e3o, analisa a condi\'e7\'e3o combinada \line Esta condi\'e7\'e3o \'e9 true se, e somente se, ambas as condi\'e7\'f5es simples s\'e3o true. Finalmente, se esta condi\'e7\'e3o combinada \'e9 realmente true, ent\'e3o a contagem de seniorFemales \'e9 incrementada por 1. Se uma, ou ou ambas, das condi\'e7\'f5es simples s\'e3o false. ent\'e3o o programa salta o incremento e continua no comando em seguida ao if. A condi\'e7\'e3o combinada precedente pode ser tomada mais leg\'edvel acrescentando-se par\'eanteses redundantes \par
Erro comum de programa\'e7\'e3o 2.24 \line Embora 3 < x < 7 seja uma condi\'e7\'e3o matematicamente correta, ela n\'e3o \'e9 avaliada corretamente em \line C++. Use ( 3 < x && x < 7 ) para obter a avalia\'e7\'e3o apropriada em C++. \line A tabela da Fig. 2.28 resume o operador &&. A tabela mostra todas as quatro combina\'e7\'f5es poss\'edveis de valores \line false e true para a express\'e3o 1 e a express\'e3o2. Tais tabelas s\'e3o freq\'fcentemente chamadas de tabelas verdade. \line C++ avalia como false ou true todas as express\'f5es que incluem operadores relacionais, operadores de igualdade e/ou operadores l\'f3gicos. \par
express\'e3ol express\'e3o2 express\'e3ol && express\'e3o2 1 \par
false false true true \par
false \par
Fig. 2.28 Tabela verdade para o operador && (E l\'f3gico). \par
are de qualidade e i\'e7ada \'e0s custas da \par
\ul Dica de portabidade 2.5 \ulnone\line Por compatibilidade com vers\'f5es antigas do padr\'e3o C+ +, o valor true do tipo bool pode tamb\'e9m ser representado por qualquer valor diferente de zero e o valor bool fal se tamb\'e9m pode ser representado como o valor 0. \par
if ( gender == 1 && age >= 65 ++seniorFemales; \par
gender == 1 && age >= 65 \par
gender == 1 ) && ( age > 65 \par
estruturada. Como que logo aprendeis rapidamente que \par
true false true \par
false false false true \par
148 C++ COMO PROGRAMAR \line Agora vamos considerar o operador 1 1 (OU logico). Suponhamos que desejemos nos assegurar, em um certo \line ponto de um programa, que ou uma ou ambas de duas condi\'e7\'f5es s\'e3o true antes de escolhermos um certo caminho de execu\'e7\'e3o. Neste caso, usamos o operador 1 1 como no segmento de programa seguinte: \line if ( semesterAverage >= 90 1 1 finalExaju > 90 \line cout \'ab \ldblquote A nota do estudante \'e9 A\rdblquote  \'ab endi; \line A condi\'e7\'e3o precedente tamb\'e9m cont\'e9m duas condi\'e7\'f5es simples. A condi\'e7\'e3o simples semesterAverage > 90 \line\'e9 avaliada para determinar se o estudante merece um \ldblquote A\rdblquote  no curso por causa de um desempenho altamente consistente ao longo do semestre. A condi\'e7\'e3o simples finalExam >= 90 \'e9 avaliada para determinar se o estudante \line merece um \ldblquote A\rdblquote  no curso por causa de um desempenho excelente no exame final. O comando if, ent\'e3o, considera a \line condi\'e7\'e3o combinada \line sezuesterAverage >= 90 1 1 finalExam > 90 \line e premia o estudante com um \ldblquote A\rdblquote  se qualquer uma ou ambas as condi\'e7\'f5es simples s\'e3o true (verdadeiras). Note que a mensagem \ldblquote A nota do estudante \'e9 A\rdblquote  s\'f3 n\'e3o \'e9 impressa quando ambas as condi\'e7\'f5es simples s\'e3o falsas. A Fig. 2.29 \'e9 uma tabela verdade para o operador l\'f3gico 0k (1 1). \par
express\'e3ol express\'e3o2 express\'e3ol 1 1 express\'e3o2 \par
false false false \line false true true \line true false true \line true true true \line Fig. 2.29 Tabela verdade para o operador 1 1 (OU l\'f3gico). \line O operador & & tem uma preced\'eancia mais alta que o operador I. Ambos os operadores se associam da esquerda para a direita. Uma express\'e3o contendo operadores & & ou 1 1 \'e9 avaliada somente at\'e9 sua verdade ou falsidade ser conhecida. Deste modo, a avalia\'e7\'e3o da express\'e3o \line gender == 1 && age >= 65 \line parar\'e1 imediatamente se gender n\'e3o for igual a 1 (i.e., a express\'e3o inteira \'e9 false) e continuar\'e1 se gender for \line igual a 1 (i.e., a express\'e3o inteira pode ainda ser true se a condi\'e7\'e3o age >= 65 for true). \line Erro comum de programa\'e7\'e3o 2.25 \line Em express\'f5es que usam o operador &&, \'e9 poss\'edvel que uma condi\'e7\'e3o - chamaremos esta condi\'e7\'e3o de condi\'e7\'e3o dependente - possar exigir que uma outra condi\'e7\'e3o seja true para que fa\'e7a sentido avaliar a condi\'e7\'e3o dependente. Neste caso, a condi\'e7\'e3o dependente deve ser colocada depois da outra condi\'e7\'e3o ou ent\'e3o pode ocorrer um erro. \line Dica de desempenho 2.10 \line f . Em express\'f5es que usam o operador &&, se as condi\'e7\'f5es separadas s\'e3o independentes uma da outra, coloque \'e0 esquerda a condi\'e7\'e3o com maior probabilidade de ser false. Em express\'f5es que usam o operador I I , coloque mais \'e0 esquerda a condi\'e7\'e3o que tem maior probabilidade de ser true. Isto pode reduzir o tempo de execu\'e7\'e3o de um programa. \line C++ oferece o operador ! (nega\'e7\'e3o l\'f3gica) para possibilitar ao programador \ldblquote inverter\rdblquote  o significado de uma condi\'e7\'e3o. Diferentemente dos operadores && e 1 l que combinam duas condi\'e7\'f5es (operadores bin\'e1rios), o operador de nega\'e7\'e3o l\'f3gica tem somente uma \'fanica condi\'e7\'e3o como operando (operador un\'e1rio). O operador de nega\'e7\'e3o \par
if ( ! ( grade sentinelValue \line cout \'ab A pr\'f3xima nota \'e9 \ldblquote  \'ab grade \'ab endi; \par
Os par\'eanteses em torno da condi\'e7\'e3o grade == sentinelValue s\'e3o necess\'e1rios porque o operador de nega\'e7\'e3o l\'f3gica tem uma preced\'eancia mais alta que o operador de igualdade. A Fig. 2.30 \'e9 uma tabela verdade para o operador de nega\'e7\'e3o l\'f3gica. \par
Na maioria dos casos, o programador pode evitar o uso da nega\'e7\'e3o l\'f3gica expressando a condi\'e7\'e3o diferentemente com um operador relacional ou de igualdade apropriado. Por exemplo, o comando precedente pode tamb\'e9m ser \par
escrito como segue: \par
if ( grade sentinelVa].ue \line cout \'ab \ldblquote A pr\'f3xima nota \'e9 \ldblquote  \'abgrade \'ab endi; \par
Esta flexibilidade freq\'fcentemente pode ajudar um programador a expressar uma condi\'e7\'e3o de uma maneira mais \par
\ldblquote natural\rdblquote  ou conveniente. \par
A Fig. 2.31 mostra a preced\'eancia e associatividade dos operadores de C++ introduzidos at\'e9 aqui. Os operadores s\'e3o mostrados de cima para baixo, em ordem decrescente de preced\'eancia. \par
Fig. 2.31 Preced\'eancia e associatividade de operadores. \par
erto \line nho \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 149 \par
l\'f3gica \'e9 colocado antes de uma condi\'e7\'e3o quando estivermos interessados em escolher um caminho de execu\'e7\'e3o se a condi\'e7\'e3o original (sem o operador de nega\'e7\'e3o l\'f3gica) for fa].se, tal como no segmento de programa a seguir: \par
=90 \line nsislante \line era a \par
Note \par
5 SO \par
Fig. 2.30 Tabela verdade para o operador \lquote (nega\'e7\'e3o l\'f3gica). \par
uerda \line de ser \par
\'e3o de \line\lquote liara \line\'e3o ou \par
am o \line pode \par
uma peraa\'e7\'e3o \par
120 Confundindo os operadores de igualdade (==) e de atribui\'e7\'e3o (=) \par
Existe um tipo de erro que os programadores de C++, n\'e3o importa qu\'e3o experientes sejam, tendem a cometer t\'e3o freq\'fcentemente que percebemos que este problema merecia uma se\'e7\'e3o separada. O erro \'e9 trocar, acidentalmente, os \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx942\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2382\pard\intbl express\'e3o \cell\lquote express\'e3o 1 \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx942\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2382\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 false \cell true \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx942\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2382\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 true \cell false \cell\row\pard\sa240\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl Operaclores Associatividade \cell Tipo \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx397\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl O \cell\cell esquerda para a direita \cell par\'eanteses \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx397\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 ++ \cell -- \cell static_cast<type> () esquerda para a direita \cell un\'e1rio (p\'f3s-fixo) \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx397\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 ++ \cell -- \cell + - direita para a esquerda \cell un\'e1rio (prefixo) \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx397\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 * \cell / \cell % esquerda para a direita \cell multiplicativo \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx397\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 + \cell - \cell esquerda para a direita \cell aditivo \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx397\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 \'ab \cell\'bb \cell esquerda para a direita \cell inser\'e7\'e3o/extra\'e7\'e3o \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx397\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 < \cell <= \cell > >= esquerda para a direita \cell relacional \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx397\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 = \cell = \cell esquerda para a direita \cell igualdade \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx397\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 & & \cell\cell esquerda para a direita \cell E l\'f3gico \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx397\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 1 \cell\cell esquerda para a direita \cell OU l\'f3gico \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx397\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 ?: \cell\cell direita para a esquerda \cell condicional \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx397\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 \cell + \cell * /= %= direita para a esquerda \cell atribui\'e7\'e3o \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx397\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4086\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx5562\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 , \cell\cell esquerda para a direita \cell v\'edrgula \cell\row\pard\par
\pard\sb100\sa240 150 C++ COMO PROGRAMAR \line operadores == (igualdade) e = (atribui\'e7\'e3o). O que torna estas trocas tao prejudiciais e o tato de que elas normalmente n\'e3o causam erros de sintaxe. Ao contr\'e1rio, comandos com estes erros compilam em geral corretamente e os programas executam at\'e9 o fim, provavelmente gerando resultados incorretos atrav\'e9s de erros de l\'f3gica durante a execu\'e7\'e3o. \line Existem dois aspectos de C++ que causam estes problemas. Um deles \'e9 que qualquer express\'e3o que produz um valor pode ser usada na parte de decis\'e3o de qualquer estrutura de controle. Se o valor for O, ele ser\'e1 tratado como false e se o valor n\'e3o for zero, ser\'e1 tratado como true. A segunda \'e9 que atribui\'e7\'f5es em C++ produzem um valor, i.e., o valor que \'e9 atribu\'eddo \'e0 vari\'e1vel do lado esquerdo do operador de atribui\'e7\'e3o. Por exemplo, suponha que pretendamos escrever \line if ( payCode 4 \line cout \'ab Voc\'ea obteve urna gratifica\'e7\'e3o\rquote\rdblquote  \'ab endi; \line mas que, por\'e9m, escrevamos acidentalmente \line if ( payCode 4 \line cout \'ab \ldblquote Voc\'ea obteve urna gratifica\'e7\'e3o!\rdblquote  \'ab endi; \line O primeiro comando if concede corretamente uma gratifica\'e7\'e3o \'e0 pessoa cujo paycode \'e9 igual a 4. O segundo comando if - o que tem o erro - avalia a express\'e3o de atribui\'e7\'e3o na condi\'e7\'e3o if obtendo a constante 4. Como qualquer valor diferente de zero \'e9 interpretado como true, a condi\'e7\'e3o neste comando if \'e9 sempre true e a pessoa sempre recebe uma gratifica\'e7\'e3o, n\'e3o importando qual seja o paycode verdadeiro! Pior ainda, o paycode foi modificado, quando se supunha que ele seria somente testado! \line Erro comum de programa\'e7\'e3o 2.26 \line Usar o operador == para atribui\'e7\'e3o, ou usar o operador = para igualdade, constitui erros de l\'f3gica. \line\'ae Dica de teste e depura \'e7\'e3o 2.1 \line Os programadores escrevem normalmente condi\'e7\'f5es tais como x 7 com o nome da vari\'e1vel \'e0 esquerda e o da constante \'e0 direita. Invertendo estes nomes, deforma que a constante fique \'e0 esquerda e o nome da vari\'e1vel \'e0 direita, como em 7 == x, o programador que substituir acidentalmente o operador == pelo = estar\'e1 protegido pelo compilador. O compilador tratar\'e1 essa troca como um erro de sintaxe porque s\'f3 um nome de vari\'e1vel pode ser colocado \'e0 esquerda de um comando de atribui\'e7\'e3o. Pelo menos este evitar\'e1 a devasta\'e7\'e3o potencial do erro de l\'f3gica durante a execu\'e7\'e3o. \line Os nomes de vari\'e1veis s\'e3o chamados de Ivalues (ou seja. \ldblquote valores \'e0 esquerda\rdblquote  - left values, em ingl\'eas) porque podem ser usados \'e0 esquerda de um operador de atribui\'e7\'e3o. As constantes s\'e3o chamadas de rtalues (ou seja, \ldblquote valores \'e0 direita\rdblquote  - right values) porque podem ser usadas somente \'e0 direita de um operador de atribui\'e7\'e3o. Note que lvalues tamb\'e9m podem ser usados como rvalues, mas n\'e3o vice-versa. \line O outro lado da moeda pode ser igualmente desagrad\'e1vel. Suponha que o programador quer atribuir um valor a uma vari\'e1vel com um comando simples como \line x = 1; \line mas, em vez disso, ele escreve \line x == 1; \line Aqui, tamb\'e9m, n\'e3o temos um erro de sintaxe. Em vez disso, o compilador simplesmente avalia a express\'e3o condicional. Se x for igual a 1, a condi\'e7\'e3o \'e9 true e a express\'e3o retorna o valor true. Se x n\'e3o for igual 1, a condi\'e7\'e3o \'e9 false e a express\'e3o retorna o valor false. Independentemente de qual valor \'e9 retornado, n\'e3o existe nenhum operador de atribui\'e7\'e3o, assim o valor \'e9 simplesmente perdido, permanecendo inalterado o valor de x e provavelmente causando um erro de l\'f3gica durante a execu\'e7\'e3o. Infelizmente, n\'e3o temos \'e0 m\'e3o um truque dispon\'edvel para ajud\'e1-lo a evitar este problema! \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 151 \par
\'ae Dica de teste e depura \'e7\'e3o 2.2 \line Use seu editor de texto para procurar todas as ocorr\'eancias de = em seu programa e conferir se voc\'ea tem o \line operador correto em cada lugar \par
2.21 Resumo de programa\'e7\'e3o estruturada \par
\pard\sb100\sa100 Da mesma maneira que os arquitetos projetam constru\'e7\'f5es empregando a sabedoria coletiva de sua profiss\'e3o, assim deveriam os programadores projetar seus programas. Nosso campo \'e9 mais jovem que a arquitetura e nossa sabedoria coletiva \'e9 consideravelmente mais escassa. Aprendemos que a programa\'e7\'e3o estruturada produz programas que s\'e3o mais f\'e1ceis de entender do que programas n\'e3o-estruturados e que, conseq\'fcentemente, s\'e3o mais f\'e1ceis para testar, depurar, modificar e at\'e9 provar sua corre\'e7\'e3o no sentido matem\'e1tico. \line A Fig. 2.32 resume as estruturas de controle de C++. Os c\'edrculos pequenos s\'e3o usados na figura para indicar \line o ponto \'fanico de entrada e o ponto \'fanico de sa\'edda de cada estrutura. Conectar s\'edmbolos individuais de fluxogra ma \par
\pard\sb100\sa240 arbitrariamente pode levar a programas n\'e3o-estruturados. Portanto, os profissionais de programa\'e7\'e3o decidiram combinar s\'edmbolos de fluxograma, de forma a compor um conjunto limitado de estruturas de controle e construir programas estruturados corretamente combinando estruturas de controle de duas maneiras simples. \par
estrutura if (sele\'e7\'e3o \'fanica) \par
estrutura if/else (sele\'e7\'e3o dupla) \line FI T \par
Fig. 2.32 As estruturas de repeti\'e7\'e3o de seq\'fc\'eancia, sele\'e7\'e3o e repeti\'e7\'e3o com uma \'fanica entrada/\'fanica sa\'edda em C++. \par
Para simplificar, s\'e3o usadas somente estruturas de controle de entrada e sa\'edda \'fanica e existe uma \'fanica maneira para entrar, bem como uma \'fanica maneira para sair de cada estrutura de controle. Conectar estruturas de controle em seq\'fc\'eancia para formar programas estruturados \'e9 simples - o ponto de sa\'edda de uma estrutura de controle \'e9 conectado ao ponto de entrada da pr\'f3xima estrutura de controle, i.e., as estruturas de controle s\'e3o simplesmente colocadas uma depois da outra em um programa; temos chamado isto de \ldblquote empilhamento de estruturas de controle\rdblquote . As regras para formar programas estruturados tamb\'e9m permitem que as estruturas de controle sejam aninhadas. \par
nte raao. \line luz \par
[no or, jue \par
do \par
de \par
Seq.i\'eancia \par
Sele\'e7\'e3o \par
T \line + \par
Repeti\'e7\'e3o \par
(\'e0 \line (or xe \line [OS \par
_ 1 \line _____ \ul 1 \ulnone\line estrutura switch \line (sele\'e7\'e3o m\'faltipla) \par
ue \line loue \par
estrutura while \line O estrutura do/while \line estrutura for \line O \par
lor \par
T \par
ao \line ,a \line ;te \par
152 C+\'f7 COMO PROGRAMAR \par
A Fig. 2.33 mostra as regras para formar programas corretamente estruturados. As regras assumem ret\'e2ngulo de um fluxograma possa ser usado para indicar qualquer a\'e7\'e3o, inclusive entrada/sa\'edda. As regras taff \line sup\'f5em que come\'e7amos com o fluxograma mais simples (Fig. 2.34). \par
Regras para formar programas estruturados \par
Fig. 2.34 O fluxograma mais simples. \par
Aplicar as regras da Fig. 2.33 sempre resulta em um fluxograma estruturado, com uma apar\'eancia limpa como a blocos de constru\'e7\'e3o. Por exemplo, aplicando repet\'eddamente a regra 2, o fluxograma mais simples resulta em u fluxograma estruturado, contendo muitos ret\'e2ngulos em seq\'fc\'eancia (Fig. 2.35). Note que a regra 2 gera uma pilha estruturas de controle; assim, iremos chamar a regra 2 de regra de empilhamento. \par
\ul CD \ulnone\par
Regra 2 \par
\ul CD \ulnone\par
Fig. 235 Aplicando repetidamente a regra 2 da Fig. 2.33 ao fluxograma mais simples. \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx386\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7645\pard\intbl 1) \cell Comece com o\rdblquote  fluxograma mais simples\rdblquote  (Fig. 2.34). \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx386\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7645\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 2) \cell Qualquer ret\'e2ngulo (a\'e7\'e3o) pode ser substitu\'eddo por dois ret\'e2ngulos (a\'e7\'f5es) em seq\'fc\'eancia. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx386\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7645\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 3) \cell Qualquer ret\'e2ngulo (a\'e7\'e3o) pode ser substitu\'eddo por qualquer estrutura de controle \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx386\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7645\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 \cell (seq\'fc\'eancia, if, if/else. switch, while, doJwhi].e ou for). \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx386\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7645\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 4) \cell As regras 2 e 3 podem ser aplicadas t\'e3o freq\'fcentemente quanto voc\'ea queira e em qualquer ordem. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx386\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7645\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 Fig \cell . 2.33 Regras para formar programas estruturados. \cell\row\pard\par
\pard\sb100\sa240 CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 153 \line A regra \'e9 chamada de regra de aninhamento. Aplicando repetidamente a regra 3, o fluxograma mais \line simples resulta em um fluxograma com estruturas de controle nitidamente aninhadas. Por exemplo, na Fig. 2.36, o ret\'e2ngulo no fluxograma mais simples primeiro \'e9 substitu\'eddo por uma estrutura de sele\'e7\'e3o dupla (if/else). \line Ent\'e3o, a regra 3 \'e9 novamente aplicada a ambos os ret\'e2ngulos na estrutura de sele\'e7\'e3o dupla, substituindo cada um destes ret\'e2ngulos por estruturas de sele\'e7\'e3o dupla. As caixas tracejadas ao redor de cada estrutura de sele\'e7\'e3o dupla representam o ret\'e2ngulo que foi substitu\'eddo no fluxograma original mais simples. \line A regra 4 gera estruturas maiores, mais complicadas e mais profundamente aninhadas, O fluxograma que \line surge da aplica\'e7\'e3o das regras na Fig. 2.33 constitui o conjunto de todos os fluxogramas estruturados poss\'edveis e, conseq\'fcentemente, o conjunto de todos os programas estruturados poss\'edveis. \line\ul Ji.. \ulnone\line ______ Regra 3 \line Regra 3 \line t \line 1 \par
Regra 3 \par
Fig. 2.36 Aplicando a regra 3 da Fig. 2.33 ao fluxograma mais simples. \par
154 C++ COMO PROGRAMAR \line A beleza da abordagem estruturada est\'e1 no fato de usarmos somente sete pe\'e7as simples de entrada / sa\'edda \'fanica e as montarmos somente de duas maneiras. A Fig. 2.37 mostra o tipo de blocos de constru\'e7\'e3o empilhados que surgem da aplica\'e7\'e3o da regra 2 e os tipos de blocos de constru\'e7\'e3o aninhados que surgem da aplica\'e7\'e3o da regra 3. A Fig. tamb\'e9m mostra o tipo de blocos de constru\'e7\'e3o sobrepostos que n\'e3o pode aparecer em fluxogramas estruturados (por causa da elimina\'e7\'e3o do comando goto). \line Se as regras na Fig.2.33 s\'e3o seguidas, n\'e3o \'e9 poss\'edvel criar um fluxograma n\'e3o-estruturado (como o da Fig. 2.38). Se voc\'ea n\'e3o tiver certeza se um dado fluxograma \'e9 estruturado ou n\'e3o, aplique as regras da Fig. 2.33 na ordem inversa, para tentar reduzi-lo ao fluxograma mais simples. Se o fluxograma \'e9 redut\'edvel ao tluxograma mais simples, ent\'e3o o fluxograma original \'e9 estruturado; caso contr\'e1rio, ele n\'e3o o \'e9. \line Blocos de constru\'e7\'e3o empilhados \line\ul 1 \ulnone ___ \line\ul II \ulnone\line Blocos de constru\'e7\'e3o sobrepostos \line (ilegal em programas estruturados) \line Fig. 2.37 Blocos de constru\'e7\'e3o empilhados, aninhados e sobrepostos. \line A programa\'e7\'e3o estruturada promove a simplicidade. Bohm e Jacopini nos demonstraram que somente tr\'eas formas de controle s\'e3o necess\'e1rias: \line\bullet  Seq\'fc\'eancia \line\bullet  Sele\'e7\'e3o \line\bullet  Repeti\'e7\'e3o \line A seq\'fc\'eancia \'e9 trivial. A sele\'e7\'e3o \'e9 implementada em uma de tr\'eas formas: \line\bullet  Estrutura if (sele\'e7\'e3o \'fanica) \line\bullet  Estrutura if/else (sele\'e7\'e3o dupla) \line\bullet  Estrutura switch (sele\'e7\'e3o m\'faltipla) \par
Blocos de constru\'e7\'e3o aninhados \line\lquote 1 \par
1 \par
Fig. 2.38 Um fluxograma n\'e3o-estruturado. \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 155 \line e as De fato, \'e9 simples provar que a estrutura if simples \'e9 suficiente para satisfazer qualquer forma de sele\'e7\'e3o - tudo inda que pode ser feito com a estrutura if/else e a estrutura switch pode ser implementado pela combina\'e7\'e3o de b\'e9m estruturas if (embora talvez n\'e3o t\'e3o clara e eficientemente). \line sa da A repeti\'e7\'e3o \'e9 implementada em um de tr\'eas maneiras: \line Fi \bullet  estrutura while \line rdem \bullet  estrutura do/while \line pies, estrutura for \line\'c9 simples provar que a estrutura while \'e9 suficiente para implementar qualquer forma de repeti\'e7\'e3o. Tudo que pode ser feito com a estrutura do/while e a estrutura for pode ser feito com a estrutura while (embora talvez n\'e3o t\'e3o suavemente). \line Combinar estes resultados mostra que qualquer forma de controle que possa ser necess\'e1ria em um programa \line em C++ pode ser expressa em termos de: \line\bullet  seq\'fc\'eancia \line\bullet  estrutura if (sele\'e7\'e3o) \line\bullet  estrutura while (repeti\'e7\'e3o) \line e estas estruturas de controle podem ser combinadas s\'f3 de dois modos - empilhamento e aninhamento. A programa\'e7\'e3o estruturada realmente promove a simplicidade. \line Neste cap\'edtulo discutimos como compor programas a partir de estruturas de controle contendo a\'e7\'f5es e decis\'f5es. No Cap\'edtulo 3, introduziremos outra unidade de estrutura\'e7\'e3o de programa denominadafun\'e7\'e3o. Aprenderemos a compor programas grandes combinando fun\'e7\'f5es que, por sua vez, s\'e3o compostas de estruturas de controle. Tamb\'e9m discutiremos como fun\'e7\'f5es promovem a reusabilidade de software. No Cap\'edtulo 6, introduzimos outra unidade de estrutura\'e7\'e3o de programa de C++ denominada classe. Ent\'e3o, criaremos objetos a partir de classes e continuaremos com nosso tratamento da programa\'e7\'e3o orientada a objetos. Agora continuamos nossa introdu\'e7\'e3o a objetos, introduzindo um problema que o leitor atacar\'e1 com as t\'e9cnicas do projeto orientado a objetos. \line 2.22 (Estudo de caso opcional) Pensando em objetos: identificando as classes em um problema \line Agora iniciamos nosso estudo de caso opcional de projeto/implementa\'e7\'e3o orientado a objetos. Estas se\'e7\'f5es \ldblquote Pensando em objetos\rdblquote , nos finais deste e dos pr\'f3ximos cap\'edtulos, v\'e3o deix\'e1-lo \'e0 vontade com a orienta\'e7\'e3o a objetos, examinando um estudo de caso de simula\'e7\'e3o de elevador. Este estudo de caso vai proporcionar-lhe uma experi\'eancia de projeto e implementa\'e7\'e3o completa, substancial e cuidadosamente cadenciada. Nos Cap\'edtulos 2 a 5, executaremos as v\'e1rias etapas de um projeto orientado a objetos (OOD, object-oriented design) usando a UML. Nos Cap\'edtulos 6, 7 e 9, implementaremos o simulador de elevador usando as t\'e9cnicas de programa\'e7\'e3o orientada a objetos (OOP. object-oriented programming) em C\'f7+. Apresentamos este estudo de caso em um formato totalmente resolvido. Isto n\'e3o \'e9 um exerc\'edcio, mas sim uma experi\'eancia de aprendizado ponta a ponta que termina com um walkrhrough* detalhado do c\'f3digo em C++. Oferecemos este estudo de caso para que voc\'ea se acostume com os tipos de problemas de porte que s\'e3o enfrentados em empresas. Esperamos que voc\'ea aprecie esta experi\'eancia. \line rmas Defini\'e7\'e3o do problema \line Uma empresa pretende construir um edif\'edcio comercial de dois andares e equip\'e1-lo com um elevador. A empresa quer que voc\'ea desenvolva um simulador em software orientado a objetos em C++ que modele a opera\'e7\'e3o do elevador para determinar se este elevador satisfar\'e1 ou n\'e3o \'e0s suas necessidades. \line N. de R.T.: Termo usado para descrever uma das atividades de desenvolvimento de software, que consiste em reunir a equipe de desenvolvimento para analisar o c\'f3digo de um programa e discutir a implementa\'e7\'e3o e as decis\'f5es tomadas pelos programadores; usada como ferramenta de treinamento e como parte de um processo de qualidade no desenvolvimento de software. \par
156 C++ COMO PROGRAMAR \par
Seu simulador deve incluir um rel\'f3gio que inicia com sua hora, em segundos, ajustado para zero. O rel\'f3gic \ldblquote bate\rdblquote  (incrementa o tempo em uma unidade) a cada segundo; ele n\'e3o mant\'e9m controle de horas e minutos. Seu simulador tamb\'e9m deve incluir um scheduler* que come\'e7a o dia escalonando aleatoriamente dois momentos: a hora em que uma pessoa vai entrar no pavimento 1 e apertar o bot\'e3o do andar para chamar o elevador e a hora em que uma pessoa vai entrar no pavimento 2 e apertar o bot\'e3o do andar para chamar o elevador. Cada um destes momentos \'e9 um valor inteiro aleat\'f3rio, no intervalo fechado de 5 a 20 (i.e., 5, 6, 7 20). [Nota: voc\'ea aprender\'e1 como escalonar hor\'e1rios aleat\'f3rios no Cap\'edtulo 3]. Quando a hora do rel\'f3gio fica igual ao mais cedo destes dois momentos, o schedu/er cria uma pessoa, a qual, ent\'e3o, entra no andar apropriado e aperta o bot\'e3o do andar. [Nota: \'e9 poss\'edvel que estes dois momentos escalonados aleatoriamente sejam id\'eanticos, caso em que as pessoas entrar\'e3o nos dois pavimentos e apertar\'e3o os bot\'f5es dos andares ao mesmo tempo]. O bot\'e3o do andar se ilumina, indicando que foi pressionado. [Nota: a ilumina\'e7\'e3o do bot\'e3o do andar ocorre automaticamente quando o bot\'e3o \'e9 pressionado e n\'e3o requer nenhuma programa\'e7\'e3o; a luz embutida no bot\'e3o se apaga automaticamente quando o bot\'e3o \'e9 desligado]. O elevador come\'e7a o dia esperando, com sua porta fechada, no pavimento 1. Para economizar energia, ele se move somente quando necess\'e1rio. O elevador alterna a dire\'e7\'e3o de movimento entre subir e descer. \line Para simplificar, o elevador e cada um dos andares tem capacidade para uma pessoa. O scheduler inicialmente verifica se um andar est\'e1 desocupado, antes de criar uma pessoa para entrar naquele andar. Se o andar est\'e1 ocupado, o scheduler retarda a cria\'e7\'e3o da pessoa em um segundo (dando, assim, oportunidade para que o elevador busque a pessoa e libere o andar). Depois que uma pessoa entra em um andar, o scheduler gera o pr\'f3ximo momento aleat\'f3rio (entre 5 e 20 segundos mais tarde) em que uma pessoa entrar\'e1 naquele andar e apertar\'e1 o bot\'e3o do andar. \line Quando o elevador chega em um andar, ele desliga o bot\'e3o do elevador e faz soar a campainha (que est\'e1 no seu interior). O elevador ent\'e3o sinaliza sua chegada ao andar, O andar, em resposta, desliga o bot\'e3o do andar e liga a luz de chegada do elevador do andar. A porta se abre. [Nota: a porta no andar abre automaticamente, junto com a porta do elevador, e n\'e3o necessita de nenhuma programa\'e7\'e3o]. O passageiro, se houver, sai do elevador e uma pessoa, se houver uma esperando naquele andar, entra no elevador. Embora cada andar tenha capacidade para uma pessoa, suponha que haja espa\'e7o suficiente em cada andar para que uma pessoa espere naquele andar enquanto o passageiro do elevador, se houver, sai. \line Uma pessoa que entra no elevador aperta o bot\'e3o, que se ilumina (automaticamente, sem programa\'e7\'e3o) quando pressionado e se apaga quando o elevador chega no andar e libera o bot\'e3o. [Nota: como s\'f3 existem dois andares, \'e9 necess\'e1rio somente um bot\'e3o dentro do elevador; este bot\'e3o simplesmente diz ao elevador para se mover para o outro andar.] Ao chegar em um andar, se uma pessoa n\'e3o entra no elevador e o bot\'e3o no outro andar n\'e3o foi pressionado, o elevador fecha sua porta e permanece naquele andar at\'e9 que um bot\'e3o em um andar seja pressionado. \line Para simplificar, suponha que todas as atividades que acontecem quando o elevador chega em um andar e at\'e9 que feche a porta durem zero segundos. [Nota: embora estas atividades tenham dura\'e7\'e3o zero, elas ainda acontecem seq\'fcencialmente, por exemplo, a porta do elevador precisa abrir antes de o passageiro sair do mesmo]. O elevador leva cinco segundos para se mover de qualquer andar para o outro. Uma vez por segundo, o simulador informa a hora para o scheduler e para o elevador, O scheduler e o elevador usam a hora para determinar quais a\'e7\'f5es cada um deles deve tomar naquele momento em particular, por exemplo, o scheduler pode decidir que \'e9 hora de criar uma pessoa; e o elevador, se estiver se movendo, pode descobrir que \'e9 hora de chegar no pavimento de destino. \line O simulador deve exibir mensagens na tela descrevendo as atividades que ocorrem no sistema. Estas incluem uma pessoa apertando o bot\'e3o em um andar, o elevador chegando em um andar, o rel\'f3gio batendo, uma pessoa entrando no elevador, etc. A sa\'edda deve ser parecida com a seguinte: \par
1 \par
Digite tempo de execu\'e7\'e3o: 30 \line (scheduler escalona pr\'f3xima pessoa para o andar 1 no tempo 5) \line (scheduler escalona pr\'f3xima pessoa para o andar 2 no tempo 17) \line\ldblquote  IN\'cdCIO DA SIMULA\'c7\'c3O DO ELEVADOR *** \line TEMPO: \line elevador parado no andar 1 \par
* N. de R.T.: Termo usado para designar, em sistemas de software (principalmente sistemas operacionais), a rotina ou conjunto de rotinas que \line selecionam as tarefas que ser\'e3o executadas e em que ordem, com base em prioridades definidas pelo sistema. \par
--- \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 157 \par
para zero, O rel\'f3gio oras e minutos. Seu iomentos: a hora em a hora em que uma stes momentos \'e9 um ser\'e1 como escalonar mentos, o scheduler ss\'edvel que estes dois pavimentos e apertaressionado. [Nota: a er nenhuma progravador come\'e7a o dia nte quando necess\'e1eduler inicialmente \line andar est\'e1 ocupado, o elevador busque a momento aleat\'f3rio D do andar. \line inha (que est\'e1 no seu do andar e liga a luz e, junto com a porta lor e uma pessoa, se le para uma pessoa, quanto o passageiro \line )rograma\'e7\'e3o) quanistem dois andares, ira se mover para o andar n\'e3o foi presseja pressionado. \line em um andar e at\'e9 is ainda acontecem tesmol. O elevador idor informa a hora \'f5es cada um deles criar uma pessoa; \lquote o. \line ma. Estas incluem endo, uma pessoa \par
TEMPO: 2 \line elevador parado no andar 1 \line TEMPO: 3 \line elevador parado no andar 1 \line TEMPO: 4 \line elevador parado no andar 1 \line TEMPO: 5 \line scheduler cria a pessoa 1 \line pessoa 1 entra no andar 1 \line pessoa 1 aperta o bot\'e3o do andar no andar 1 \line bot\'e3o do andar 1 chama o elevador \line (scheduler escalona pr\'f3xima pessoa para o andar 1 no tempo 20) elevador desliga o bot\'e3o \line elevador toca a campainha \line andar 1 desliga o bot\'e3o \line andar 1 acende a luz \line elevador abre a porta no andar 1 \line pessoa 1 entra no elevador no andar 1 \line pessoa 1 aperta o bot\'e3o do elevador \line bot\'e3o do elevador diz ao elevador que se prepare para sair andar 1 apaga a luz \line elevador fecha a porta no andar 1 \line elevador come\'e7a a subir para o andar 2 (chega no tempo 10) \line TEMPO: 6 \line elevador subindo \line TEMPO: 7 \line elevador subindo \line TEMPO: 8 \line elevador subindo \line TEMPO: 9 \line elevador subindo \line TEMPO: 10 \line elevador chega no andar 2 \line elevador desliga o bot\'e3o \line elevador toca a campainha \line andar 2 desliga o bot\'e3o \line andar 2 acende a luz \line elevador abre a porta no andar 2 \line pessoa 1 sai do elevador no andar 2 \line andar 2 apaga a sua luz \line elevador fecha a porta no andar 2 \line elevador parado no andar 2 \line TEMPO: 11 \line elevador parado no andar 2 \line TEMPO: 12 \par
elevador parado no andar 2 \line TEMPO: 13 \line elevador parado no andar 2 \par
A \par
ijunto de rotinas que \par
TEMPO: 14 \line elevador parado no andar 2 \par
158 C++ COMO PROGRAMAR \par
TEMPO: 15 \line elevador parado no andar 2 \line TEMPO: 16 \line elevador parado no andar 2 \line TEMPO: 17 \line scheduler cria a pessoa 2 \line pessoa 2 entra no andar 2 \line pessoa 2 aperta o bot\'e3o do andar no andar 2 \line bot\'e3o do andar 2 chama o elevador \line (scheduler escalona pr\'f3xima pessoa para o andar 2 no tempo 34) elevador desliga o bot\'e3o \line elevador toca a campainha \line andar 2 desliga o bot\'e3o \line andar 2 acende a luz \line elevador abre a porta no andar 2 \line pessoa 2 entra no elevador no andar 2 \line pessoa 2 aperta o bot\'e3o do elevador \line bot\'e3o do elevador diz ao elevador que se prepare para sair andar 2 apaga a luz \line elevador fecha a porta no andar 2 \line elevador come\'e7a a descer para o andar 1 (chega no tempo 22) \line TEMPO: 18 \line elevador descendo \line TEMPO: 19 \line elevador descendo \line TEMPO: 20 \line scheduler cria a pessoa 3 \line pessoa 3 entra no andar 1 \line pessoa 3 aperta o bot\'e3o do andar no andar 1 \line bot\'e3o do andar 1 chama o elevador \line (scheduler escalona pr\'f3xima pessoa para o andar 1 no tempo 26) \line elevador descendo \line TEMPO: 21 \line elevador descendo \line TEMPO: 22 \line elevador chega no andar 1 \line elevador desliga o bot\'e3o \line elevador toca a campainha \line andar 1 desliga o bot\'e3o \line andar 1 acende a luz \line elevador abre a porta no andar 1 \line pessoa 2 sai do elevador no andar 1 \line pessoa 3 entra no elevador no andar 1 \line pessoa 3 aperta o bot\'e3o do elevador \line bot\'e3o do elevador diz ao elevador que se prepare para sair andar 1 apaga a luz \line elevador fecha a porta no andar 1 \line elevador come\'e7a a subir para o andar 2 (chega no tempo 27) \line TEMPO: 23 \line elevador subindo \par
TEMPO: 24 \line elevador subindo \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 159 \line TEMPO: 25 \line elevador subindo \line TEMPO: 26 \line scheduler cria a pessoa 4 \line pessoa 4 entra no andar 1 \line pessoa 4 aperta o bot\'e3o do andar no andar 1 \line bot\'e3o do andar 1 chama o elevador \line (scheduler escalona pr\'f3xima pessoa para o andar 1 no tempo 35) \line elevador subindo \line TEMPO: 27 \line elevador chega no andar 2 \line elevador desliga o bot\'e3o \line elevador toca a campainha \line andar 2 desliga o bot\'e3o \line andar 2 acende a luz \line elevador abre a porta no andar 2 \line pessoa 3 sai do elevador no andar 2 \line andar 2 apaga a luz \line elevador fecha a porta no andar 2 \line elevador come\'e7a a descer para o andar 1 (chega no tempo 32) \line TEMPO: 28 \line elevador descendo \line TEMPO: 29 \line elevador descendo \line TEMPO: 30 \line elevador descendo \line *** FIM DA SIMULA\'c7\'c3O DO ELEVADOR *** \line LNosso objetivo (ao longo destas se\'e7\'f5es \ldblquote Pensando em objetos\rdblquote  nos Cap\'edtulos 2 a 9) \'e9 implementar um simulador em software que funcione e modele a opera\'e7\'e3o do elevador durante o n\'famero de segundos especificado pelo usu\'e1rio do simulador. \line Analisando e projetando o sistema \line Nesta e nas pr\'f3ximas se\'e7\'f5es \ldblquote Pensando em objetos\rdblquote , executamos as etapas de um projeto orientado a objetos para o sistema do elevador. A UML \'e9 projetada para uso com qualquer processo OOAD - existem muitos destes processos. Um m\'e9todo popular \'e9 o Rational Unifled ProcessTM desenvolvido pela Rational Software Corporation. Para este estudo de caso, apresentamos nosso pr\'f3prio processo de projeto simplificado para sua primeira experi\'eancia com \line OOD/UML. \line Antes de come\'e7armos, precisamos examinar a natureza das simula\'e7\'f5es. Uma simula\'e7\'e3o consiste em duas partes. Uma cont\'e9m todos os elementos que pertencem ao mundo que queremos simular. Estes elementos incluem o elevador, os pavimentos, os bot\'f5es, as luzes, etc. Chamemos esta parte de parte do mundo. A outra parte cont\'e9m todos os elementos necess\'e1rios para simular este mundo. Estes elementos incluem o rel\'f3gio e o scheduler. Chamamos esta parte de parte controladora. Manteremos estas duas partes em mente \'e0 medida que projetamos nosso sistema. \line Diagramas de caso de uso \line Quando os desenvolvedores iniciam um projeto, eles raramente come\'e7am com uma defini\'e7\'e3o detalhada do problema. como a que fornecemos no come\'e7o desta se\'e7\'e3o (Se\'e7\'e3o 2.22). Este documento e outros normalmente s\'e3o o \line resultado da fase de an\'e1lise orientada a objetos (OOA, object-oriented analvsis). Nesta fase, voc\'ea entrevista as \line pessoas que querem que voc\'ea construa o sistema e as pessoas que v\'e3o em algum momento usar o sistema. Voc\'ea usa \line a informa\'e7\'e3o obtida nestas entrevistas para compilar uma lista de requisitos do sistema. Estes requisitos guiam voc\'ea \line e seus companheiros desenvolvedores enquanto projetam o sistema. Em nosso estudo de caso, a defini\'e7\'e3o do proble \par
160 C++ COMO PROGRAMAR \line ma cont\'e9m os requisitos de sistema para o sistema de elevador. O resultado da fase de an\'e1lise destina-se a especificar claramente o que se pretende que o sistema fa\'e7a. O resultado da fase de projeto destina-se a especificar claramente como o sistema deve ser constru\'eddo para fazer o que \'e9 necess\'e1rio. \line A UML oferece o diagrama de casos de uso para facilitar o processo de reunir requisitos. O diagrama de casos de uso modela as intera\'e7\'f5es entre os clientes externos do sistema e os casos de uso do sistema. Cada caso de uso representa um recurso diferente que o sistema oferece ao cliente. Por exemplo, uma m\'e1quina de caixa autom\'e1tica tem diversos casos de uso, incluindo \ldblquote dep\'f3sito\rdblquote , \ldblquote retirada\rdblquote  e \ldblquote transfer\'eancia de fundos\rdblquote . \line A Fig. 2.39 mostra o diagrama de caso de uso para o sistema do elevador. A figura estilizada representa um ator. Atores s\'e3o quaisquer entidades externas, tais como pessoas, rob\'f4s, outros sistemas, etc. que usam o sistema. Os \'fanicos atores em nosso sistema s\'e3o as pessoas que querem andar no elevador. Portanto, modelamos um ator chamado \ldblquote Pessoa\rdblquote . O \ldblquote nome\rdblquote  do ator aparece sob a figura estilizada. \line A caixa do sistema (i.e., o ret\'e2ngulo de contorno na figura) cont\'e9m os casos de uso para o sistema. Observe que a caixa est\'e1 rotulada com \ldblquote Sistema do elevador\rdblquote . Este t\'edtulo mostra que este modelo de caso de uso focaliza os comportamentos do sistema que queremos simular (i.e., elevador transportando pessoas), e n\'e3o os comportamentos da simula\'e7\'e3o (i.e., criar pessoas e escalonar chegadas). \line A UML modela cada caso de uso como uma elipse. Em nosso sistema simples, os atores usam o elevador \line somente para uma finalidade: ir para outro andar. O sistema oferece somente um recurso a seus usu\'e1rios; portanto, \ldblquote Ir para outro andar\rdblquote  \'e9 o \'fanico caso de uso em nosso sistema do elevador. \line A medida que constr\'f3i seu sistema, voc\'ea se ap\'f3ia no diagrama de caso de uso para assegurar que todas as necessidades dos clientes s\'e3o atendidas. Nosso estudo de caso cont\'e9m somente um caso de uso. Em sistemas maiores, diagramas de caso de uso s\'e3o ferramentas indispens\'e1veis que ajudam os projetistas do sistema a manter o foco na satisfa\'e7\'e3o das necessidades dos usu\'e1rios. O objetivo do diagrama de caso de uso \'e9 mostrar os tipos de intera\'e7\'f5es que os usu\'e1rios t\'eam com um sistema, sem fornecer os detalhes destas intera\'e7\'f5es. \line Identificando as classes em um sistema \line A pr\'f3xima etapa em nosso processo de OOD \'e9 identificar as classes em nosso problema. Em algum momento, vamos descrever estas classes de uma maneira formal e implement\'e1-las em C++ (come\'e7amos a implementar o simulador do elevador em C++ no Cap\'edtulo 6). Primeiro, revisamos a defini\'e7\'e3o do problema e localizamos todos os substantivos; muito provavelmente, eles representam a maioria das classes (ou inst\'e2ncias de classes) necess\'e1rias para implementar o simulador do elevador. A Fig. 2.40 \'e9 uma lista destes substantivos. \line Lista de substantivos na defini\'e7\'e3o do problema \line empresa andar 2 \line edif\'edcio porta do elevador \line elevador energia \line simulador capacidade \line rel\'f3gio bot\'e3o do elevador \par
Fig. 2.39 Diagrama de caso de uso para o sistema do elevador. \par
Fig. 2.40 Lista de substantivos na defini\'e7\'e3o do problema (parte 1 de 2). \par
\pard\par
\pard\sb100\sa240 CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 161 \par
Fig. 2.40 Lista de substantivos na defini\'e7\'e3o do problema (parte 2 de 2). \line A seguir, escolhemos somente os substantivos que desempenham tarefas importantes em nosso sistema. Por esta raz\'e3o, vamos omitir os seguintes: \line\bullet  empresa \line\bullet  simulador \line\bullet  hora \line\bullet  energia \line\bullet  capacidade \line N\'e3o precisamos modelar \ldblquote empresa\rdblquote  como uma classe, porque a empresa n\'e3o faz parte da simula\'e7\'e3o; ela simplesmente quer que modelemos o elevador. O \ldblquote simulador\rdblquote  \'e9 todo o nosso programa em C++, n\'e3o uma classe isolada. A \ldblquote hora\rdblquote  \'e9 uma propriedade do rel\'f3gio, n\'e3o uma entidade aut\'f4noma. N\'e3o modelamos \ldblquote energia\rdblquote  em nossa simula\'e7\'e3o (embora companhias de eletricidade, g\'e1s ou \'f3leo pudessem certamente estar interessadas em fazer isto em seus programas de simula\'e7\'e3o) e, finalmente, \ldblquote capacidade\rdblquote  \'e9 uma propriedade do elevador e dos pavimentos - n\'e3o uma entidade aut\'f4noma separada. \line Determinamos as classes para nosso sistema classificando os substantivos restantes em categorias. Cada substantivo remanescente da Fig. 2.40 se refere a uma ou mais das seguintes categorias: \line\bullet  edif\'edcio \line\bullet  elevador \line\bullet  rel\'f3gio \line\bullet  scheduler \line\bullet  pessoa (pessoa esperando em um andar, passageiro do elevador) \line\bullet  andar (andar 1, andar 2) \line\bullet  bot\'e3o do andar \line\bullet  bot\'e3o do elevador \line\bullet  campainha \line\bullet  luz \line\bullet  porta \line Estas categorias s\'e3o provavelmente as classes que precisaremos implementar para nosso sistema. Observe que criamos uma categoria para os bot\'f5es dos andares e uma categoria para o bot\'e3o do elevador. Os dois tipos de bot\'f5es desempenham tarefas diferentes em nossa simula\'e7\'e3o - os bot\'f5es nos andares chamam o elevador e o bot\'e3o no elevador diz ao elevador para come\'e7ar a se mover para o outro andar. \line Podemos agora modelar as classes em nosso sistema com base nas categorias que derivamos. Por conven\'e7\'e3o, vamos usar letras mai\'fasculas para iniciar nomes de classes. Se o nome de uma classe cont\'e9m mais de uma palavra, juntamos todas as palavras e come\'e7amos cada uma delas com letra mai\'fascula (por exemplo, NomeComVarias- Palavras). Usando esta conven\'e7\'e3o, criamos as classes Elevator. Clock, Scheduler, Person, Floor, Doar, Building, FloorButton. ElevatorButton. Beil e Light*. Constru\'edmos nosso sistema usando todas estas classes como blocos de constru\'e7\'e3o. Antes de come\'e7armos a construir o sistema, no entanto, precisamos entender melhor como as classes se relacionam entre si. \line * N. de T.: \ldblquote Elevador\rdblquote , \ldblquote Rel\'f3gio\rdblquote , \ldblquote Scheduler\rdblquote , \ldblquote Pessoa\rdblquote , \ldblquote Andar\rdblquote , \ldblquote Porta\rdblquote , \ldblquote Edif\'edcio\rdblquote , \ldblquote Bot\'e3o do andar\rdblquote , \ldblquote Bot\'e3o do elevador\rquote , \ldblquote Campainha\rdblquote  e \ldblquote Luz\rdblquote , respectivamente. \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4120\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7607\pard\intbl Lista de substantivos na defini\'e7\'e3o do problema \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4120\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7607\pard\intbl hora \cell campainha do elevador \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4120\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7607\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 scheduler \cell luz de chegada do elevador em um andar \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4120\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7607\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 pessoa \cell pessoa esperando no andar \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4120\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7607\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 andar 1 \cell passageiro do elevador \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4120\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx7607\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 bot\'e3o do andar \cell\cell\row\pard\par
\par
\pard\sb100\sa240 162 C++ COMO PROGRAMAR \par
Diagramas de classes \line A UML nos possibilita modelar as classes no sistema de elevador e seus relacionamentos atrav\'e9s de diagramas de classes. A Fig. 2.41 mostra como representar uma classe usando a UML. Aqui, modelamos a classe Elevator. Em um diagrama de classes, cada classe \'e9 modelada como um ret\'e2ngulo. Este ret\'e2ngulo pode, ent\'e3o, ser dividido em tr\'eas partes. A parte superior cont\'e9m o nome da classe. \line A parte do meio cont\'e9m os atributos da classe. Discutimos atributos na se\'e7\'e3o \ldblquote Pensando em objetos\rdblquote  no fim do Cap\'edtulo 3. A parte inferior cont\'e9m as opera\'e7\'f5es da classe. Discutimos opera\'e7\'f5es na se\'e7\'e3o \ldblquote Pensando em objetos\rdblquote  no fim do Cap\'edtulo 4. \line Elevator \line Fig. 2.41 Representando uma classe na UML. \line As classes se relacionam com outras classes atrav\'e9s de associa\'e7\'f5es. A Fig. 2.42 mostra como nossas classes Buil- ding, Elevator e Floor se relacionam umas com as outras. Observe que os ret\'e2ngulos neste diagrama n\'e3o est\'e3o subdivididos em tr\'eas se\'e7\'f5es. A UML permite o truncamento dos s\'edmbolos de classes desta maneira, de modo a criar diagramas mais leg\'edveis. \par
2 \line 2 Servi\'e7os li \line Floor Elevator \par
Fig. 2.42 Associa\'e7\'f5es entre classes em um diagrama de classes. \line Neste diagrama de classes, uma linha cheia que conecta classes representa uma associa\'e7\'e3o. Uma associa\'e7\'e3o \'e9 um relacionamento entre classes. Os n\'fameros junto \'e0s linhas expressam valores de multiplicidade. Os valores de multiplicidade indicam quantos objetos de uma classe participam da associa\'e7\'e3o. Pelo diagrama, vemos que dois objetos da classe Floor participam da associa\'e7\'e3o com um objeto da classe Building. Portanto, a classe Building tem um relacionamento um-para-dois com a classe Floor: tamb\'e9m podemos dizer que a classe Floor tem um relacionamento dois-para-um com a classe Building. A partir do diagrama, voc\'ea pode ver que a classe Building tem um relacionamento um-para-um com a classe Elevator e vice-versa. Usando a UML, podemos modelar muitos tipos de multiplicidade. A Fig. 2.43 mostra os tipos de multiplicidade e como represent\'e1-los. \line Uma associa\'e7\'e3o pode ter um nome. Por exemplo, a palavra \ldblquote Servi\'e7os\rdblquote  acima da linha que conecta as classes Floor e Elevator indica o nome daquela associa\'e7\'e3o - a seta mostra a dire\'e7\'e3o da associa\'e7\'e3o. Esta parte do diagrama \'e9 lida assim: \ldblquote um objeto da classe Elevator presta servi\'e7os a dois objetos da classe Floor\rdblquote . \line O losango cheio preso \'e0s linhas de associa\'e7\'e3o da classe Building indica que a classe Building tem um relacionamento de composi\'e7\'e3o com as classes Floor e Elevator. A composi\'e7\'e3o implica um relacionamento todo! parte. A classe que tem o s\'edmbolo de composi\'e7\'e3o (o losango cheio) em sua extremidade da linha de associa\'e7\'e3o \'e9 o todo (neste caso, Building) e a classe na outra extremidade da linha de associa\'e7\'e3o \'e9 a parte (i.e., Floor e Elevator).2 \line 2 De acordo com as especifica\'e7\'f5es da UML 1.3, as classes em um relacionamento de composi\'e7\'e3o possuem as tr\'eas propnedades seguintes: 1) somente uma classe no relacionamento pode representar o todo (i.e., o losango pode ser colocado somente em uma das extremidades da linha de associa\'e7\'e3o); 2) a composi\'e7\'e3o implica em tempos de vida coincidentes para as partes com o todo e o todo \'e9 respons\'e1vel pela cna\'e7\'e3o e destmi\'e7\'e3o de suas partes; 3) uma parte pode pertencer somente a um todo de cada vez, embora a parte possa ser removida e anexada a Outro todo, que ent\'e3o assume a responsabilidade pela parte. \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 163 \par
Fig. 2.43 Tabela de multiplicidade \par
A Fig. 2.44 mostra o diagrama de classes completo para o sistema do elevador. Todas as classes que criamos est\'e3o modeladas, bem como as associa\'e7\'f5es entre estas classes. [Nota: no Cap\'edtulo 9, expandimos nosso diagrama de classes usando o conceito orientado a objetos de heran\'e7al. \par
1 \par
passageiro \par
Fig. 2.44 Diagrama completo de classes para a simula\'e7\'e3o do elevador. \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx786\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4091\pard\intbl S\'edmbolo \cell Significado \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx786\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4091\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 O \cell Nenhum. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx786\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4091\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 1 \cell Um. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx786\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4091\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 m \cell Um valor inteiro. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx786\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4091\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 0.1 \cell Zero ou um. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx786\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4091\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 m..n \cell No m\'ednimo m, mas n\'e3o mais do que n. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx786\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4091\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 * \cell Qualquer inteiro n\'e3o-negativo. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx786\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4091\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 0..\rquote  \cell Zero ou mais. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx786\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4091\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 1..* \cell Umou mais. \cell\row\pard\par
\pard\sb100\sa240 164 C++ COMO PROGRAMAR \par
A classe Building est\'e1 representada pr\'f3ximo ao topo do diagrama e \'e9 composta de quatro classes, incluindo Clock e Scheduler. Estas duas classes comp\'f5em a parte controladora da simula\'e7\'e3o.3 A classe Building tamb\'e9m \'e9 composta pelas classes Elevator e Floor (observe o relacionamento um-para-dois entre a classe Building e a classe Floor). \line As classes Floor e Elevator est\'e3o modeladas pr\'f3ximas \'e0 base do diagrama. A classe Floor \'e9 composta de um objeto de cada uma das classes Light e FloorButton. A classe Elevator \'e9 composta de um objeto de cada uma das classes ElevatorButton. classe Door e classe Beli. \line As classes envolvidas em uma associa\'e7\'e3o tamb\'e9m podem desempenhar pap\'e9is. Pap\'e9is ajudam a tornar claro \line o relacionamento entre duas classes. Por exemplo, a classe Person faz o papel de \ldblquote passageiro aguardando\rdblquote  em \line associa\'e7\'e3o com a classe Floor (porque a pessoa est\'e1 esperando o elevador). A classe Person faz o papel de \line passageiro em sua associa\'e7\'e3o com a classe Elevator. Em um diagrama de classes, o nome do papel de uma classe \line\'e9 colocado em qualquer um dos lados da linha de associa\'e7\'e3o, pr\'f3ximo ao ret\'e2ngulo da classe. Cada classe em uma \line associa\'e7\'e3o pode desempenhar um papel diferente. \line A associa\'e7\'e3o entre a classe Floor e a classe Person indica que um objeto da classe Floor pode relacionar-se com zero ou um objeto da classe Person. A classe Elevator tamb\'e9m se relaciona com zero ou um objeto da classe Person. A linha tracejada que une estas duas linhas de associa\'e7\'e3o indica uma restri\'e7\'e3o no relacionamento entre as classes Person. Floor e Elevator. A restri\'e7\'e0o diz que um objeto da classe Person pode participar de um relacionamento com um objeto da classe Floor ou com um objeto da classe Elevator, mas n\'e3o com os dois objetos ao mesmo tempo. A nota\'e7\'e3o para este relacionamento \'e9 a palavra \ldblquote xor\rdblquote  (que significa \ldblquote ou exclusivo\rdblquote ) colocada entre chaves. A associa\'e7\'e3o entre a classe Scheduler e a classe Person afirma que um objeto da classe Scheduler cria zero ou mais objetos da classe Person. \line Diagramas de objetos \line A UML tamb\'e9m define diagramas de objetos, que s\'e3o similares aos diagramas de classes, exceto pelo fato de modelarem objetos e links - links s\'e3o relacionamentos entre objetos. Assim como os diagramas de classes, os diagramas de objetos modelam a estrutura do sistema. Diagramas de objetos apresentam uma fotografia da estrutura enquanto o sistema est\'e1 em execu\'e7\'e3o - isto oferece informa\'e7\'e3o sobre quais objetos est\'e3o participando do sistema em um determinado instante no tempo. \line A Fig. 2.45 modela uma fotografia do sistema quando ningu\'e9m est\'e1 no edif\'edcio (i.e., n\'e3o existe nenhum objeto da classe Person no sistema neste instante). Nomes de objetos s\'e3o normalmente escritos na forma \ul objectName:ClassName. \ulnone A primeira palavra em um nome de objeto n\'e3o inicia com letra mai\'fascula, mas as palavras seguintes sim. Todos os nomes de objetos em um diagrama de objetos s\'e3o sublinhados. Omitimos o nome do objeto para alguns objetos no diagrama (por exemplo, objetos da classe FloorButton). Em sistemas grandes, muitos nomes de objetos ser\'e3o usados no modelo. Isto pode dar origem a diagramas congestionados, dif\'edceis de ler. Se o nome de um objeto em particular \'e9 desconhecido ou se n\'e3o \'e9 necess\'e1rio incluir o nome (i.e., podemos nos preocupar somente com o tipo do objeto), podemos deixar de fora o nome do objeto. Neste caso, simplesmente mostramos os dois pontos e o nome da classe. \line Agora j\'e1 identificamos as classes para este sistema (embora possamos descobrir outras nas fases posteriores do processo de projeto). Tamb\'e9m examinamos o caso de uso do sistema. Na se\'e7\'e3o \ldblquote Pensando em objetos\rdblquote  no fim do Cap\'edtulo 3, usamos este conhecimento para examinar como o sistema muda ao longo do tempo. A medida que expandirmos nossos conhecimentos, tamb\'e9m descobriremos novas informa\'e7\'f5es que nos possibilitar\'e3o descrever nossas classes em maior profundidade. \line 1. Voc\'ea aprender\'e1 a implementar a \ldblquote aleatoriedade\rdblquote  no pr\'f3ximo cap\'edtulo (Cap\'edtulo 3), no qual estudamos a gera\'e7\'e3o de n\'fameros aleat\'f3rios. A gera\'e7\'e3o de n\'fameros aleat\'f3rios o ajuda a simular processos aleat\'f3rios, \line O relacionamento composto entre as classes Building e as classes Clock e Scheduler representa uma decis\'e3o de projeto tomada por voc\'ea. Consideramos a classe Building como sendo parte tanto da por\'e7\'e3o \ldblquote mundo\rdblquote  quanto da por\'e7\'e3o \ldblquote controladora\rdblquote  de nossa simula\'e7\'e3o. Em nosso projeto, atribu\'edmos ao edif\'edcio a responsabilidade de executar a simula\'e7\'e3o. \line Restri\'e7\'f5es em diagramas UML. podem ser escritas com o que \'e9 conhecido como a Object Constraint Language (OCL) - Linguagem de Restri\'e7\'e3o de Objetos. A OCI. foi criada para permitir que modeladores expressassem restri\'e7\'f5es em um sistema de uma forma claramente detinida. Para aprender mais, visite www-4.ibm.com/software/ad/5tandardilocl.html. \par
Notas \par
Fig. 2.45 Diagrama de objetos do edif\'edcio vazio. \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 165 \par
tais como sortear \ldblquote cara ou coroa\rdblquote  com uma moeda e o lan\'e7amento de dados. Tamb\'e9m o ajudar\'e1 a simular a chegada aleat\'f3ria de pessoas para usar o elevador. \line 2. Como o mundo real \'e9 t\'e3o orientado a objetos, ser\'e1 bastante natural para voc\'ea desenvolver este projeto, muito embora voc\'ea ainda n\'e3o tenha estudado formalmente a orienta\'e7\'e3o a objetos. \par
Perguntas \par
1. Como voc\'ea poderia decidir se o elevador pode dar conta do volume de tr\'e1fego previsto? \line 2. Por que poderia ser mais complicado implementar um edif\'efcio de tr\'eas pavimentos (ou mais alto)? \line 3. E comum em grandes edif\'edcios ter muitos elevadores. Veremos no Cap\'edtulo 6 que, uma vez que tenhamos criado um objeto elevador, \'e9 f\'e1cil criar tantos quanto queiramos. Que problemas ou oportunidades voc\'ea prev\'ea em ter v\'e1rios elevadores, cada um deles podendo apanhar e deixar passageiros em todos os andares de um grande edif\'edcio? \line 4. Para simplificar, demos ao nosso elevador e a cada andar a capacidade de um passageiro. Que problemas ou oportunidades voc\'ea prev\'ea para poder aumentar estas capacidades? \par
Resumo \par
\bullet  Um procedimento para resolver um problema em termos das a\'e7\'f5es a serem executadas e a ordem em que estas a\'e7\'f5es devem ser executadas \'e9 chamado de algoritmo. \par
\bullet  Especificar a ordem em que os comandos devem ser executados em um programa de computador \'e9 chamado de controle do programa. \par
\bullet  Pseudoc\'f3digo ajuda o programador a pensar sobre\rdblquote  um programa antes de tentar escrev\'ea-lo em uma linguagem de programa\'e7\'e3o, tal como C++. \par
\bullet  Declara\'e7\'f5es s\'e3o mensagens para o compilador informando-lhe os nomes e atributos das vari\'e1veis e solicitando-lhe que reserve espa\'e7o \'e0s mesmas. \par
Uma estrutura de sele\'e7\'e3o \'e9 usada para escolher cursos alternativos de a\'e7\'e3o. \par
\bullet  A estrutura de sele\'e7\'e3o if executa uma a\'e7\'e3o especificada s\'f3 quando a condi\'e7\'e3o \'e9 verdadeira. \par
\bullet  A estrutura de sele\'e7\'e3o if/else especifica a\'e7\'f5es separadas a serem executadas quando a condi\'e7\'e3o \'e9 verdadeira e quando a condi\'e7\'e3o \'e9 falsa. \par
166 c++ COMO PROGRAMAR \par
Sempre que mais de um comando deve ser executado, onde normalmente um \'fanico comando \'e9 esperado, estes comandos devem ser colocados entre chaves, formando um comando composto. Um comando composto pode ser colocado em qualquer lugar no qual possa ser colocado um \'fanico comando. \par
Um comando vazio, indicando que nenhuma a\'e7\'e3o deve ser executada, \'e9 indicado colocando-se um ponto-e-v\'edrgula (;) onde normalmente seria colocado um comando. \par
Uma estrutura de repeti\'e7\'e3o especifica que uma a\'e7\'e3o deve ser repetida enquanto alguma condi\'e7\'e3o permane\'e7a verdadeira. \par
O formato da estrutura de repeti\'e7\'e3o while \'e9 \par
while (condi\'e7\'e3o) \line comando \par
Um valor que cont\'e9m uma parte fracion\'e1ria \'e9 chamado de n\'famero de ponto flutuante e \'e9 representado pelo tipo de dados float ou double. \par
O operador de coer\'e7\'e3o un\'e1rio static_cast < double > ( ) cria uma c\'f3pia tempor\'e1ria em ponto flutuante de seu operando. \par
C++ oferece os operadores aritm\'e9ticos de atribui\'e7\'e3o +=, -=, =, 1= e %= que ajudam a abreviar certos tipos comuns de express\'f5es. \par
C++ oferece os operadores de incremento (++) e decremento (--) para incrementar ou decrementar uma vari\'e1vel por 1. Se o \line operador \'e9 pr\'e9-fixado \'e0 vari\'e1vel, a vari\'e1vel \'e9 incrementada ou decrementeda por 1 primeiro e ent\'e3o usada em sua express\'e3o. \line Se o operador \'e9 p\'f3s-fixado \'e0 vari\'e1vel, a vari\'e1vel \'e9 usada em sua express\'e3o e ent\'e3o incrementada ou decrementada por 1. \par
Um la\'e7o \'e9 um grupo de instru\'e7\'f5es que o computador executa repetidamente at\'e9 que alguma condi\'e7\'e3o de t\'e9rmino seja satisfeita. Duas formas de repeti\'e7\'e3o s\'e3o: repeti\'e7\'e3o controlada por contador e repeti\'e7\'e3o controlada por sentinela. \par
Uni contador de la\'e7o \'e9 usado para contar as repeti\'e7\'f5es de um grupo de instru\'e7\'f5es. \'c9 incrementado (ou decrementado) normalmente por 1 toda vez que o grupo de instru\'e7\'f5es \'e9 executado. \par
Os valores de sentinela s\'e3o geralmente usados para controlar a repeti\'e7\'e3o quando o n\'famero preciso de repeti\'e7\'f5es n\'e3o \'e9 conhecido com anteced\'eancia e o la\'e7o inclui comandos que obt\'eam dados toda vez que o la\'e7o \'e9 executado. Um valor de sentinela \'e9 digitado no final da entrada de itens de dados v\'e1lidos para o programa. As sentinelas devem ser diferentes de itens de dados v\'e1lidos. \par
A estrutura de repeti\'e7\'e3o for trata de todos os detalhes da repeti\'e7\'e3o controlada por contador. O formato geral da estrutura for \'e9 \par
for ( initialization; loopContinuationTest; increment ) \line statement \par
onde initialization inicializa a vari\'e1vel de controle do la\'e7o. IoopContinuationTest \'e9 a condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o e increment incrementa a vari\'e1vel de controle. \par
A estrutura de repeti\'e7\'e3o do/while testa a condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o no fim do mesmo: assim, o corpo do la\'e7o ser\'e1 executado pelo menos uma vez. O formato para a estrutura do/while \'e9 \par
do \par
comando \par
while (condi\'e7\'e3o) \par
O comando break, quando executado em uma das estruturas de repeti\'e7\'e3o (for, while e do/while) . provoca a sa\'edda imediata da estrutura. \par
O comando continue, quando executado em uma das estruturas de repeti\'e7\'e3o (for. while e do/while) . salta quaisquer comandos restantes no corpo da estrutura e prossegue com a pr\'f3xima repeti\'e7\'e3o do la\'e7o. \par
O comando swi tch processa uma s\'e9rie de decis\'f5es em que uma vari\'e1vel ou express\'e3o particular \'e9 testada para os valores que ela pode assumir e a\'e7\'f5es diferentes s\'e3o executadas. Na maioria dos programas, \'e9 necess\'e1rio se incluir um comando \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 167 \line break depois dos comandos para cada um dos case.V\'e1rios cases podem executar os mesmos comandos, listando-se os r\'f3tulos dos v\'e1rios cases em conjunto, antes dos comandos execut\'e1veis comuns aos cases. A estrutura switch s\'f3 pode \par
testar express\'f5es constantes inteiras. Um case multicomando n\'e3o precisa ser inclu\'eddo entre chaves. Em sistemas UNIX e muitos outros, o fim de arquivo \'e9 indicado digitando-se a seq\'fc\'eancia \line <ctrl-d> \line sozinha em uma linha. No VMS e no DOS, o fim de arquivo \'e9 indicado digitando-se a seq\'fc\'eancia \par
<ctrl-z> \par
possivelmente seguida pelo pressionamento da tecla Enter. \par
\bullet  Os operadores l\'f3gicos podem ser usados para formar condi\'e7\'f5es complexas combinando condi\'e7\'f5es. Os operadores l\'f3gicos s\'e3o &&, 1 1 e !. significando o E l\'f3gico, o OU l\'f3gico e o N\'c3O l\'f3gico (nega\'e7\'e3o), respectivamente. \line\bullet  Qualquer valor n\'e3o-zero \'e9 implicitamente convertido para true; O (zero) \'e9 implicitamente convertido para false. \line Terminologia \par
1 \par
algoritmo \par
bloco \par
bool break \par
caracteres em branco \line caso default no switch \line char \line comando composto \line comando vazio (;) \line comprimento de campo \line condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o \line conjunto de caracteres ASCII \line contador de la\'e7o \line continue \line corpo de um la\'e7o \line defini\'e7\'e3o \line divis\'e3o inteira \line double \line E l\'f3gico (&&) \line EOF \line erro \ldblquote sa\'edda uma repeti\'e7\'e3o antes do fim\rdblquote  \line erro de l\'f3gica \line erro de sintaxe \line erro fatal \line erro n\'e3o-fatal \line estrutura de controle \line estrutura de repeti\'e7\'e3o do/while \line estrutura de repeti\'e7\'e3o for \line estrutura de repeti\'e7\'e3o while \line estrutura de sele\'e7\'e3o dupla \line estrutura de sele\'e7\'e3o if \line estrutura de sele\'e7\'e3o if/else \line estrutura de sele\'e7\'e3o m\'faltipla \line estrutura de sele\'e7\'e3o switch \line estrutura de sele\'e7\'e3o unica \line estruturas de controle aninhadas \line estruturas de controle de entrada \'fanica / sa\'edda \'fanica \par
estruturas de repeti\'e7\'e3o \line execu\'e7\'e3o seq\'fcencial \line false \line float \line formato de ponto fixo \line fun\'e7\'e3ocin.get( \line fun\'e7\'e3o pow \line inicializa\'e7\'e3o \line ios: : fixed \line ios: :left \line ios: :showpoint \line la\'e7o de retardo \line la\'e7o infinito \line long \line Ivalue (\ldblquote left value\rdblquote ) \line manipulador de stream parametrizado manipulador de stream setiosflags manipulador de stream setprecision manipulador de stream setw modelo a\'e7\'e3o/decis\'e3o \line nega\'e7\'e3o l\'f3gica (!) \line operador - \line operador \line operador && \line operador?: \line operador 1 \line operador ++ \line operador condicional (?:) operador de coer\'e7\'e3o \line operador de decremento (-) operador de incremento (++) operador de p\'f3s-decremento operador de p\'f3s-incremento operador de pr\'e9-decremento operador de pr\'e9-incremento operador tern\'e1rio \line operador un\'e1rio \par
estruturas de controle empilhadas \par
operadores aritm\'e9ticos de atribui\'e7\'e3o: +=, -=, \lquote =, 1= e %= \par
168 C++ COMO PROGRAMAR \par
operadores l\'f3gicos \line OUl\'f3gico(I 1) \line palavra-chave \line programa\'e7\'e3o estruturada \line pseudoc\'f3digo \line refinamento top-down, passo a passo \line repeti\'e7\'e3o \line repeti\'e7\'e3o controlada por contador \line repeti\'e7\'e3o definida \line repeti\'e7\'e3o indefinida \line repetindo \line Terminologia de \ldblquote Pensando em objetos\rdblquote  \par
r\'f3tulo de case rvalue (\ldblquote right value\rdblquote ) sele\'e7\'e3o \line short staticcast<type> transfer\'eancia de controle true \line valor \ldblquote lixo\rdblquote  valor indefinido valor sentinela \par
an\'e1lise e projeto orientados a objetos (OOAD) an\'e1lise orientada a objetos (DOA) \line associa\'e7\'e3o \line ator \line caixa do sistema \line caso de uso \line composi\'e7\'e3o \line diagrama de caso de uso \line diagrama de classes \line diagrama de objetos \line estrutura est\'e1tica de um sistema \line identificar as classes em um sistema \line linha cheia nos diagramas de classes e de objetos da UML link \line losango cheio nos diagramas de classes e de objetos da UML multiplicidade \line nome de associa\'e7\'e3o \par
Object Constraint Language (DCL) \ldblquote o que\rdblquote  versus \ldblquote como\rdblquote  papel \line por\'e7\'e3o controladora de uma simula\'e7\'e3o por\'e7\'e3o mundo de uma simula\'e7\'e3o projeto orientado a objetos (OOD) Rational Unified Process relacionamento dois para um relacionamento um para dois relacionamento um para um requisitos do sistema restri\'e7\'e3o \line ret\'e2ngulo em diagrama de classes da UML simulador em software \line xor \par
Erros comuns de programa\'e7\'e3o \line 2.1 Ouso de uma palavra-chave como um identificador \'e9 erro de sintaxe. \line 2.2 Esquecer uma ou as duas chaves que delimitam um comando composto poder levar a erros de sintaxe ou erros de l\'f3gica em um programa. \line 2.3 Colocar um ponto-e-v\'edrgula depois da condi\'e7\'e3o em uma estrutura if leva a um erro de l\'f3gica em estruturas if de sele\'e7\'e3o \'fanica e a um erro de sintaxe em estruturas if de sele\'e7\'e3o dupla (se a parte if contiver um comando em seu corpo). \line 2.4 N\'e3o fornecer, no corpo de uma estrutura while. uma a\'e7\'e3o que fa\'e7a com que a condi\'e7\'e3o na estrutura while se torne false em algum momento normalmente resulta em um erro chamado \ldblquote la\'e7o infinito\rdblquote , no qual a estrutura de repeti\'e7\'e3o nunca termina de ser executada. \line 2.5 Escrever a palavra-chave while com um w mai\'fasculo, como em While. \'e9 um erro de sintaxe (lembre-se de que C++ \'e9 uma linguagem sens\'edvel a mai\'fasculas e min\'fasculas). Todas as palavras-chave reservadas de C++, tais como while. if e else, cont\'eam somente letras min\'fasculas. \line 2.6 Se um contador ou total n\'e3o \'e9 inicializado, os resultados do seu programa provavelmente ser\'e3o incorretos. Este \'e9 um exemplo de erro de l\'f3gica. \line 2.7 Em um la\'e7o controlado por um contador, como o contador do la\'e7o (que est\'e1 sendo incrementado por um a cada repeti\'e7\'e3o do la\'e7o) ao final das repeti\'e7\'f5es fica com um valor que \'e9 um a mais que seu \'faltimo valor leg\'edtimo (i.e., li no caso de \ldblquote contar de 1 at\'e9 10\rdblquote ). usar o valor do contador em um c\'e1lculo depois do la\'e7o freq\'fcentemente \'e9 um erro do tipo \ldblquote um a mais que o esperado\rdblquote . \line 2.8 Escolher um valor de sentinela que \'e9 tamb\'e9m um valor de dados v\'e1lido \'e9 um erro de l\'f3gica. \line 2.9 Uma tentativa de dividir por zero causa um erro fatal. \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 169 \line 2.10 Usar n\'fameros de ponto flutuante de uma maneira que assume que eles s\'e3o representados precisamente pode levar a resultados incorretos. Os n\'fameros de ponto flutuante s\'e3o representados somente aproximadamente pela maioria dos \line computadores. \line 2.11 Tentar usar o operador de incremento ou decremento em uma express\'e3o que n\'e3o seja um simples nome de vari\'e1vel, por exemplo, escrever ++ (x + i>, \'e9 um erro de sintaxe. \line 2.12 Como os valores em ponto flutuante podem ser aproximados, controlar la\'e7os com vari\'e1veis de ponto flutuante pode resultarem valores imprecisos do contador e testes de t\'e9rmino inexatos. \line 2.13 Usar um operador relacional incorreto ou usar um valor final incorreto de um contador de la\'e7o na condi\'e7\'e3o de um while ou estrutura for pode causar erro do tipo \ldblquote sair uma itera\'e7\'e3o antes\rdblquote . \line 2.14 Quando a vari\'e1vel de controle de uma estrutura for \'e9 definida na se\'e7\'e3o de inicializa\'e7\'e3o do cabe\'e7alho da estrutura for. usar a vari\'e1vel de controle ap\'f3s o corpo da estrutura \'e9 um erro de sintaxe. \line 2.15 Usar v\'edrgulas em vez dos dois ponto-e-v\'edrgulas exigidos no cabe\'e7alho de um for \'e9 um erro de sintaxe. \line 2.16 Colocar um ponto-e-v\'edrgula imediatamente \'e0 direita do par\'eantese \'e0 direita do cabe\'e7alho de um for toma o corpo daquela estrutura for um comando vazio. Isto, normalmente, \'e9 um erro de l\'f3gica. \line 2.17 N\'e3o usar o operador relaciona! apropriado na condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o, em um la\'e7o que conta para tr\'e1s (tal como usar incorretamente i <= 1 em um la\'e7o que conta at\'e9 1) \'e9 normalmente um erro de l\'f3gica que produzir\'e1 resultados \line incorretos quando o programa for executado. \line 2.1X Esquecer de incluir o arquivo <cmath> em um programa que usa fun\'e7\'f5es da biblioteca de matem\'e1tica \'e9 um erro de sintaxe. \line 2.19 Esquecer um comando break, quando \'e9 necess\'e1rio um em uma estrutura switch, \'e9 um erro de l\'f3gica. \line 2.20 Omitir o espa\'e7o entre a palavra case e o valor inteiro que est\'e1 sendo testado, em uma estrutura switch. pode causar um erro de l\'f3gica. Por exemplo, escrever case3: em vez de escrever case 3: simplesmente cria um r\'f3tulo n\'e3o-usado (falaremos mais sobre isto no Cap\'edtulo 18). O problema \'e9 que a estrutura switch n\'e3o executar\'e1 as a\'e7\'f5es apropriadas quando a express\'e3o de controle do switch tiver o valor 3. \line 2.21 N\'e3o processar caracteres de nova linha e outros caracteres de espa\'e7o na entrada, quando estivermos lendo caracteres um de cada vez, pode causar erros de l\'f3gica. \line 2.22 Fomecer r\'f3tulos de case id\'eanticos, em uma estrutura switch, \'e9 erro de sintaxe. \line 2.23 La\'e7os infinitos s\'e3o causados quando a condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o, em estruturas while, for ou do/while, nunca se toma falsa. Para prevenir este erro, tenha certeza de que o valor da condi\'e7\'e3o muda em algum lugar no cabe\'e7alho \line ou no corpo do la\'e7o, de maneira que a condi\'e7\'e3o possa, em algum momento, se tomar falsa. \line 2.24 Embora 3 < x < 7 seja uma condi\'e7\'e3o matematicamente correta, ela n\'e3o \'e9 avaliada corretamente em C++. Use ( 3 < x && x < 7 ) para obter a avalia\'e7\'e3o apropriada em C++. \line 2.25 Em express\'f5es que usam o operador &&. \'e9 poss\'edvel que uma condi\'e7\'e3o - chamaremos esta condi\'e7\'e3o de condi\'e7\'e3o dependente - possa exigir que uma outra condi\'e7\'e3o seja true para que fa\'e7a sentido avaliar a condi\'e7\'e3o dependente. Neste caso, \line a condi\'e7\'e3o dependente deve ser colocada depois da outra condi\'e7\'e3o ou ent\'e3o pode ocorrer um erro. \line 2.26 Usar o operador == para atribui\'e7\'e3o, ou usar o operador = para igualdade, constitui erros de l\'f3gica. \line Boas pr\'e1ticas de programa\'e7\'e3o \line 2.1 Aplicar consistentemente conven\'e7\'f5es razo\'e1veis de indenta\'e7\'e3o em todos os seus programas melhora muito a legibilidade do programa. Sugerimos uma marca de tabula\'e7\'e3o com um tamanho fixo de cerca de 1/4 polegada, ou tr\'eas espa\'e7os por \line n\'edvel de indenta\'e7\'e3o. \line 2.2 O pseudoc\'f3digo \'e9 freq\'fcentemente usado para \ldblquote bolar\rdblquote  um programa durante o processo de projeto do mesmo. Ap\'f3s isso, o programa \'e9 convertido de pseudoc\'f3digo para C++. \line 2.3 Indentar ambos os comandos do corpo de uma estrutura if/else. \line 2.4 Se existem v\'e1rios n\'edveis de indenta\'e7\'e3o, cada n\'edvel deve ser indentado pelo mesmo espa\'e7o adicional. \line 2.5 Colocar sempre as chaves em uma estrutura if/else (ou qualquer estrutura de controle) ajuda a prevenir sua omiss\'e3o acidental, especialmente quando adicionarmos comandos \'e0 uma cl\'e1usula if ou else mais tarde. \line 2.6 Alguns programadores preferem digitar as chaves de in\'edcio e fim de comandos compostos antes de digitar os comandos individuais dentro das chaves. Isto ajuda evitar a omiss\'e3o de uma ou ambas as chaves. \line 2.7 Inicialize contadores e totais. \line 2.8 Declare cada vari\'e1vel em uma linha separada. \line 2.9 Quando executar uma divis\'e3o por uma express\'e3o cujo valor pode ser zero, teste explicitamente esta possibilidade e tratea apropriadamente em seu programa (tal como ao imprimir uma mensagem de erro), em vez de permitir que aconte\'e7a o \line erro fatal. \line 2.10 Solicite explicitamente ao usu\'e1rio cada entrada pelo teclado. O lembrete deve indicar a forma da entrada e quaisquer valores de entrada especiais que devam ser fomecidos (tal como o valor de sentinela que o usu\'e1rio deve digitar para \line terminar um la\'e7o). \par
170 C++ COMO PROGRAMAR \line 2.11 Em um la\'e7o controlado por sentinela, os lembretes solicitando entrada de dados deveriam lembrar explicitamente ao usu\'e1rio qual \'e9 o valor de sentinela. \line 2.12 N\'e3o compare valores de ponto flutuante quanto \'e0 igualdade ou desigualdade. Basta testar se o valor absoluto da diferen\'e7a \'e9 menor que um valor pequeno especificado. \line 2.13 Inicializar as vari\'e1veis quando elas s\'e3o declaradas ajuda o programador a evitar os problemas de dados n\'e3o-inicializados. \line 2.14 Operadores un\'e1rios deveriam ser colocados pr\'f3ximos a seus operandos, sem espa\'e7os intermedi\'e1rios. \line 2.15 Controle la\'e7os controlados por contadores com valores inteiros. \line 2.16 Indente os comandos no corpo de cada estrutura de controle. \line 2.17 Coloque uma linha em branco antes e depois de cada estrutura de controle, para destac\'e1-la no programa. \line 2.18 Muitos n\'edveis de aninhamento podem tomar um programa dif\'edcil de se entender. Como regra geral, tente evitar usar mais de tr\'eas n\'edveis de indenta\'e7\'e3o. \line 2.19 O espa\'e7amento vertical acima e abaixo das estruturas de controle e a indenta\'e7\'e3o dos corpos das estruturas de controle dentro dos cabe\'e7alhos dessas estruturas d\'e3o aos programas uma apar\'eancia bidimensional que melhora muito sua legibilidade. \line 2.20 Usar o valor final na condi\'e7\'e3o de um while ou estrutura for e usar o operador relacional < ajuda a evitar erros \ldblquote sair uma itera\'e7\'e3o antes\rdblquote . Para um la\'e7o usado para imprimir os valores 1 a 10, por exemplo, a condi\'e7\'e3o de continua\'e7\'e3o de la\'e7o deveria ser counter <= 10. em vez de counter < 10 (o que \'e9 um erro \ldblquote sair uma itera\'e7\'e3o antes\rdblquote ) ou counter < 11 (que \'e9, no entanto, correto). Muitos programadores, entretanto, preferem a chamada contagem baseada em zero - na qual, para contar 10 vezes o la\'e7o, counter seria inicializado com zero e o teste de continua\'e7\'e3o do la\'e7o seria counter <lo. \line 2.21 Coloque somente express\'f5es envolvendo as vari\'e1veis de controle nas se\'e7\'f5es de inicializa\'e7\'e3o e incremento de uma estrutura for. As manipula\'e7\'f5es de outras vari\'e1veis devem aparecer ou em qualquer lugar antes do la\'e7o (se elas s\'e3o executadas s\'f3 uma vez, como em comandos de inicializa\'e7\'e3o) ou no corpo do la\'e7o (se elas s\'e3o executadas uma vez por itera\'e7\'e3o, como comandos de incremento ou decremento). \line 2.22 Embora o valor da vari\'e1vel de controle possa ser mudado no corpo de um la\'e7o for, evite fazer isso, pois esta pr\'e1tica pode levar a erros de l\'f3gica sutis. \line 2.23 Embora os comandos que antecedem um for e os comandos no corpo do for possam ser freq\'fcentemente fundidos no cabe\'e7alho do for, evite fazer isso, porque pode tomar o programa mais dif\'edcil de ser lido. \line 2.24 Limite o tamanho de cabe\'e7alhos de estruturas de controle a uma \'fanica linha, se poss\'edvel. \line 2.25 N\'e3o use vari\'e1veis do tipo float ou double para fazer c\'e1lculos monet\'e1rios. A imprecis\'e3o dos n\'fameros de ponto flutuante pode causar erros que resultar\'e3o em valores monet\'e1rios incorretos. Nos exerc\'edcios, exploramos o USO de inteiros para executar c\'e1lculos monet\'e1rios. Nota: bibliotecas de classes de C++ de fornecedores independentes est\'e3o dispon\'edveis para executar corretamente c\'e1lculos monet\'e1rios. \line 2.26 Forne\'e7a um caso default em comandos switch. Os casos n\'e3o-testados explicitamente em um comando switch sem um caso default s\'e3o ignorados. Incluir um caso default chama a aten\'e7\'e3o do programador sobre a necessidade de processar condi\'e7\'f5es excepcionais. Existem situa\'e7\'f5es em que nenhum processamento default \'e9 necess\'e1rios Embora as cl\'e1usulas case e a cl\'e1usula do caso default em uma estrutura switch possam ocorrerem qualquer ordem, \'e9 considerado uma boa pr\'e1tica de programa\'e7\'e3o colocar a cl\'e1usula default por \'faltimo. \line 2.27 Em uma estrutura switch. quando a cl\'e1usula default \'e9 listada por \'faltimo, o comando break n\'e3o \'e9 necess\'e1rio. Alguns programadores incluem este break por clareza e simetria com outros casos. \line 2.28 Alguns programadores sempre incluem chaves em uma estrutura do/while. mesmo que as chaves n\'e3o sejam necess\'e1rias. Isto ajuda a eliminar a ambig\'fcidade entre a estrutura while e a estrutura do/while contendo um \'fanico comando. \line 2.29 Alguns programadores consideram que break e contine violam a programa\'e7\'e3o estruturada. Como os efeitos destes comandos podem ser obtidos por t\'e9cnicas de programa\'e7\'e3o estruturada que logo aprenderemos, estes programadores n\'e3o \line usam break e continue. \line Dicas de desempenho \line 2.1 Uma estrutura if/else aninhada pode ser muito mais r\'e1pida que uma s\'e9rie de estruturas de sele\'e7\'e3o \'fanica if. por causa da possibilidade de sa\'edda logo na primeira condi\'e7\'e3o satisfeita. \line 2.2 Em uma estrutura if/else aninhada, teste as condi\'e7\'f5es que s\'e3o mais prov\'e1veis de serem true no in\'edcio da estrutura if/else aninhada. Isso permitir\'e1 que a estrutura if/else aninhada seja executada mais rapidamente, bem como \line permitir\'e1 uma sa\'edda mais r\'e1pida do que testar primeiro casos pouco freq\'fcentes. \line 2.3 Os programadores podem escrever programas um pouco mais r\'e1pidos e os compiladores podem compilar programas um pouco mais rapidamente quando forem usados os operadores de atribui\'e7\'e3o \ldblquote abreviados\rdblquote . Alguns compiladores geram \line c\'f3digo que \'e9 executado mais r\'e1pido quando s\'e3o usados operadores de atribui\'e7\'e3o \ldblquote abreviados\rdblquote . \line 2.4 Muitas das dicas de desempenho que mencionamos neste texto resultam em melhorias pequenas; assim o leitor pode ficar tentado a ignor\'e1-las. Freq\'fcentemente, \'e9 obtida uma melhoria de desempenho significativa quando uma melhoria, supostamente pequena, \'e9 introduzida em um la\'e7o que \'e9 repetido muitas vezes. \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 171 \line 2.5 Evite colocar express\'f5es cujos valores n\'e3o mudam dentro de la\'e7os- mas, ainda que voc\'ea assim o fa\'e7o muitos dos sofisticados compiladores otimizadores atuais automaticamente colocar\'e3o tais express\'f5es fora dos la\'e7os no c\'f3digo gerado em \line linguagem de m\'e1quina. \line 2.6 Muitos compiladores cont\'eam recursos de otimiza\'e7\'e3o que melhoram o c\'f3digo que voc\'ea escreve; por\'e9m, ainda \'e9 melhor escrever um bom c\'f3digo desde o in\'edcio. \line 2.7 Em situa\'e7\'f5es voltadas para o desempenho, em que a mem\'f3ria \'e9 muito escassa ou a velocidade de execu\'e7\'e3o \'e9 crucial, pode ser desej\'e1vel usar tamanhos menores de inteiro. \line 2.8 Usar tamanhos de inteiro menores pode resultar em um programa mais lento se as instru\'e7\'f5es da m\'e1quina para manipul\'e1los n\'e3o forem t\'e3o eficientes quanto aquelas para os inteiros de tamanho natural (por exemplo, pode ser preciso fazer \line extens\'e3o do bit de sinal neles). \line 2.9 Os comandos break e continue, quando usados corretamente, s\'e3o executados mais rapidamente que as t\'e9cnicas estruturadas correspondentes que logo aprenderemos. \line 2.10 Em express\'f5es que usam o operador &&, se as condi\'e7\'f5es separadas s\'e3o independentes uma da outra, coloque \'e0 esquerda a condi\'e7\'e3o com maior probabilidade de ser false. Em express\'f5es que usam o operador 1 1, coloque mais \'e0 esquerda a \line condi\'e7\'e3o que tem maior probabilidade de ser true. Isto pode reduzir o tempo de execu\'e7\'e3o de um programa. \line Dicas de portabilidade \line 2.1 No padr\'e3o C++, o escopo da vari\'e1vel de controle declarada na se\'e7\'e3o de inicializa\'e7\'e3o de uma estrutura for \'e9 diferente do escopo em compiladores de C++ mais antigos. O c\'f3digo C++ criado com compiladores C++ antigos pode n\'e3o funcionar quando compilado com compiladores compat\'edveis com o padr\'e3o C++. Duas estrat\'e9gias de programa\'e7\'e3o defensiva que podem ser usadas para prevenir este problema s\'e3o: defina vari\'e1veis de controle com nomes diferentes em cada estrutura for, ou, se voc\'ea preferir usar o mesmo nome para a vari\'e1vel de controle em v\'e1rias estruturas for, defina a vari\'e1vel de controle fora e antes do primeiro la\'e7o for. \line 2.2 As combina\'e7\'f5es de teclas para digitar fim de arquivo s\'e3o dependentes do sistema. \line 2.3 Teste a constante simb\'f3lica EOF em lugar de -1 torna os programas mais port\'e1veis. O padr\'e3o ANSI estabelece que EOF \'e9 um valor inteiro negativo (mas n\'e3o necessariamente -1). Desta forma, EOF pode ter valores diferentes em sistemas \line diferentes. \line 2.4 Como ints variam de tamanho entre sistemas, use inteiros long se voc\'ea espera processar inteiros fora do intervalo \line -32.768 a 32,767 e quer ser capaz de executar seu programa em v\'e1rios sistemas de computador diferentes. \line 2.5 Por compatibilidade com vers\'f5es antigas do padr\'e3o C++, o valor true do tipo bool pode tamb\'e9m ser representado por qualquer valor diferente de zero e o valor false do tipo bool tamb\'e9m pode ser representado como o valor O. \line Observa\'e7\'f5es de engenharia de software \line 2.1 Qualquer programa em C++ que venhamos a construir pode ser constru\'eddo usando-se somente sete tipos diferentes de estruturas de controle (seq\'fc\'eancia, if, if/else, switch. while, do/while e for), combinadas somente de dois \line modos (empilhamento de estruturas de controle e aninhamento de estruturas de controle). \line 2.2 Um comando composto pode ser colocado em qualquer lugar de um programa em que um comando \'fanico pode ser colocado. \line 2.3 Da mesma maneira que um comando composto pode ser colocado em qualquer lugar que possa ser colocado um comando \'fanico, tamb\'e9m \'e9 poss\'edvel n\'e3o se ter comando algum, ou seja, um comando vazio. O comando vazio \'e9 representado \line colocando-se um ponto-e-v\'edrgula (;) onde seria normalmente colocado um comando. \line 2.4 Cada refinamento, bem como o pr\'f3prio topo, \'e9 uma especifica\'e7\'e3o completa do algoritmo; s\'f3 varia o n\'edvel de detalhe. \line 2.5 Muitos programas podem ser logicamente divididos em tr\'eas fases: uma fase de inicializa\'e7\'e3o, que inicializa as vari\'e1veis do programa; uma fase de processamento, que recebe como entrada valores de dados e ajusta as vari\'e1veis do programa de \line acordo; e uma fase de finaliza\'e7\'e3o, que calcula e imprime os resultados finais. \line 2.6 O programador termina o processo de refinamento top-down passo a passo quando o algoritmo em pseudoc\'f3digo est\'e1 especificado em detalhes suficientes para o programador ser capaz de converter o pseudoc\'f3digo para C++. Implementar \line o programa em C++ \'e9 ent\'e3o, normalmente, um processo direto. \line 2.7 A experi\'eancia mostra que a parte mais dif\'edcil da solu\'e7\'e3o de um problema em um computador est\'e1 no desenvolvimento do algoritmo para a solu\'e7\'e3o. Uma vez que um algoritmo correto tenha sido especificado, o processo de produzir um programa em C++ que funciona, a partir do algoritmo, \'e9 normalmente direto. \line 2.8 Muitos programadores experientes escrevem programas sem usar ferramentas de desenvolvimento de programas como pseudoc\'f3digo. Estes programadores pensam que sua meta essencial \'e9 resolver o problema em um computador e que escrever pseudoc\'f3digo somente atrasa a produ\'e7\'e3o de resultado final. Embora isto possa funcionar para problemas simples e familiares, pode levar a s\'e9rios erros e atrasos em projetos grandes e complexos. \par
172 C++ COMO PROGRAMAR \line 2.9 Colocar um ponto-e-v\'edrgula logo depois do cabe\'e7alho de um for \'e9 \'e0s vezes usado para criar um la\'e7o chamado de la\'e7o de retardo. Tal la\'e7o for, com uni corpo vazio, executa o n\'famero de vezes indicado, nada mais fazendo sen\'e3o contar. Voc\'ea pode usar um la\'e7o de retardo, por exemplo, para diminuir a velocidade de um programa que est\'e1 produzindo exibi\'e7\'f5es na tela muito rapidamente, para que voc\'ea possa l\'ea-las. \line 2.1 O Existe um certo conflito, ou incompatibilidade entre realizar uma engenharia de software de qualidade e obter o software de melhor desempenho. Freq\'fcentemente, uma destas metas \'e9 alcan\'e7ada \'e0s custas da outra. \line Dicas de teste e depura \'e7\'e3o \line 2.1 Os programadores escrevem normalmente condi\'e7\'f5es tais como x == 7 com o nome da vari\'e1vel \'e0 esquerda e o da constante \'e0 direita. Invertendo estes nomes, de forma que a constante fique \'e0 esquerda e o nome da vari\'e1vel \'e0 direita, como era 7 == x. o programador que substituir acidentalmente o operador == pelo = estar\'e1 protegido pelo compilador. \line O compilador tratar\'e1 esta troca como um erro de sintaxe porque s\'f3 um nome de vari\'e1vel pode ser colocado \'e0 esquerda de um comando de atribui\'e7\'e3o. Pelo menos, este evitar\'e1 a devasta\'e7\'e3o potencial de um erro de l\'f3gica durante a execu\'e7\'e3o. \line 2.2 Use seu editor de texto para procurar por todas as ocorr\'eancias de = em seu programa e conferir se voc\'ea tem o operador correto em cada lugar. \line Exerc\'edcios de auto-revis\'e3o \line Os Exerc\'edcios 2.1 a 2. 10 correspondem \'e0s Se\'e7\'f5es 2.1 a 2.12. \line Os Exerc\'edcios 2.11 a 2.13 correspondem \'e0s Se\'e7\'f5es 2.13 a 2.21. \line 2.1 Responda cada uma das seguintes perguntas. \line a) Todos os programas podem ser escritos em termos de tr\'eas tipos de estruturas de controle: \line _______ e _________ \line b) A estrutura de sele\'e7\'e3o ________________ \'e9 usada para executar uma a\'e7\'e3o quando uma condi\'e7\'e3o \'e9 true e outra a\'e7\'e3o quando a condi\'e7\'e3o \'e9 false. \line c) A repeti\'e7\'e3o de um conjunto de instru\'e7\'f5es um n\'famero de vezes espec\'edfico \'e9 chamada de repeti\'e7\'e3o \line d) Quando n\'e3o \'e9 conhecido com anteced\'eancia quantas vezes um conjunto de comandos ser\'e1 repetido, um valor pode ser usado para terminar a repeti\'e7\'e3o. \line 2.2 Escreva quatro comandos de C++ diferentes, cada um somando i \'e0 vari\'e1vel inteira x. \line 2.3 Escreva comandos de C++ para implementar cada uma das seguintes frases: \line a) Atribua a soma de x e y a z e incremente o valor de x por 1 depois do c\'e1lculo. \line b) Teste se o valor da vari\'e1vel counter \'e9 maior que 10. Se for, imprima \ldblquote Counter \'e9 maior que 10.\rdblquote  \line c) Decremente a vari\'e1vel x por 1 e ent\'e3o subtrai-a da vari\'e1vel total. \line d) Calcule o resto ap\'f3s q ser dividido por divisor e atribua o resultado a q. Escreva estes comandos de dois modos diferentes. \line 2.4 Escreva um comando de C++ para executar cada uma das seguintes tarefas. \line a) Declare as vari\'e1veis sum e x como do tipo int. \line b) Inicialize a vari\'e1vel x com 1 \line c) Inicialize a vari\'e1vel sum com 0. \line d) Some a vari\'e1vel x \'e0 vari\'e1vel sum e atribua o resultado \'e0 vari\'e1vel sum. \line e) Imprima \ldblquote A soma \'e9 : \ldblquote , seguido pelo valor da vari\'e1vel sum. \line 2.5 Combine os comandos que voc\'ea escreveu para o Exerc\'edcio 2.4 em um programa que calcula e imprime a soma dos inteiros de 1 at\'e9 10. Use a estrutura while para iterar atrav\'e9s do c\'e1lculo e comandos de incremento. O la\'e7o deve terminar quando o valor de x se tornar 11. \line 2.6 Determine os valores de cada vari\'e1vel depois de o c\'e1lculo ser executado. Assuma que, quando cada comando come\'e7a a ser executado, todas as vari\'e1veis t\'eam o valor inteiro 5. \line a) product * x++; \line b) quotient 1= ++x; \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 173 \line 2.7 Escreva comandos simples de C++ que fa\'e7am o seguinte: \line a) Receba como entrada a vari\'e1vel inteira x com cm e\'bb. \line b) Receba como entrada a vari\'e1vel inteira y com cm e\'bb. \line c) Inicialize a vari\'e1vel inteira i com 1 \line d) lnicialize a vari\'e1vel inteira power com 1 \line e) Multiplique a vari\'e1vel power por x e atribua o resultado a power. \line 1) Incremente a vari\'e1vel y por 1. \line g) Teste y para ver se ela \'e9 menor que ou igual a x. \line h) Exiba o valor da vari\'e1vel inteira power com cout e \'ab. \line 2.8 Escreva um programa em C++ que usa os comandos do Exerc\'edcio 2.7 para calcular x elevado \'e0 pot\'eancia y. O programa deve ter uma repeti\'e7\'e3o controlada por uma estrutura while. \line 2.9 Identifique e corrija os erros em cada um dos seguintes comandos: \line a) while ( c <= 5 ) \{ \line product = c; \line ++c; \line b) cm \'ab value; \line c) if ( gender == 1 \line cout\'ab \ldblquote Mulher\rquote  \'ab endl; \line else; \line cout\'ab \ldblquote Homem\rdblquote  \'ab endi; \line 2.14) O que est\'e1 errado com a seguinte estrutura de repeti\'e7\'e3o while: \line while ( z > O) \line sum + z; \line 2.11 Determine se as seguintes frases s\'e3o verdadeiras ou falsas. Se a resposta for falsa, explique por qu\'ea. \line a) O caso default \'e9 obrigat\'f3rio na estrutura de sele\'e7\'e3o switch. \line h) O comando break \'e9 exigido no caso default de uma estrutura de sele\'e7\'e3o switch para sair da estrutura corretamente. \line c) Aexpress\'e3o (x>y && a<b) \'e9 true seaexpress\'e3ox>y\'e9 true ouaexpress\'e3oa<b\'e9 true. \line d) Uma express\'e3o contendo o operador 1 1 \'e9 true se pelo menos um, ou ambos, os seus operandos s\'e3o true. \line 2.12 Escreva um comando de C++, ou um conjunto de comandos de C++, para executar cada um dos seguintes comandos: \line a) Some os inteiros \'edmpares entre 1 e 99 usando uma estrutura for. Suponha que as vari\'e1veis sum e count tenham sido declaradas como inteiras. \line b) Imprima o valor 333.546372 em um campo de comprimento de 15 caracteres com precis\'f5es de 1, 2, e 3. Imprima cada n\'famero na mesma linha. Alinhe cada n\'famero \'e0 esquerda em seu campo. Quais os tr\'eas valores impressos? \line c) Calcule o valor de 2 . 5 elevado \'e0 pot\'eancia 3 usando a fun\'e7\'e3o pow. Imprima o resultado com uma precis\'e3o de 2 em um campo de 10 posi\'e7\'f5es de comprimento. O que \'e9 impresso? \line d) Imprima os inteiros de 1 at\'e9 20 usando um la\'e7o while e a vari\'e1vel contadora x. Assuma que a vari\'e1vel x foi declarada, mas n\'e3o inicializada. Imprima somente 5 inteiros por linha. Sugest\'e3o: use o c\'e1lculo x % 5. Quando o \line valor deste \'e9 0, imprima um caractere nova linha; caso contr\'e1rio imprima um caractere de tabula\'e7\'e3o horizontal. \line c) Repita o Exerc\'edcio 2.12 (d) usando uma estrutura for. \line 2.13 Ache o(s) erro(s) em cada um dos segmentos de c\'f3digo seguintes e explique como corrigi-lo(s). \line a) x 1; \line while ( x <= 10 ); \line x++; \line b) for (y =.1; y 1.0; y+= .1 \line cout \'ab y \'ab endl; \line c) switch ( n ) \{ \line case 1: \line cout \'ab \ldblquote O n\'famero \'e9 1\rdblquote  \'ab endi; \line case 2: \line cout \'ab \ldblquote O n\'famero \'e9 2\rdblquote  \'ab endl; \par
174 C++ CoMo PROGRAMAR \line break; \line default: \line cout \'ab \ldblquote O n\'famero n\'e3o \'e9 1 ou 2\rdblquote  \'ab endi; \line break: \line d) O c\'f3digo seguinte deve imprimir os valores de 1 a 10. \line n = 1; \line while ( n < 10 \line cout \'ab n++ \'ab endi; \line Respostas aos exerc\'edcios de auto-revis\'e3o \line 2.1 a) Seqti\'eancia, sele\'e7\'e3o e repeti\'e7\'e3o. b) if/else. c) Controlada por contador ou definida. d) Sentinela, sinal, flag ou dummy. \line 2.2 xx+1; \line x += 1; \line 2.3 a) z = x++ + y; \line b) if (count > 10 \line cout \'ab \ldblquote Conta \'e9 maior que 10\rdblquote  \'ab endi; \line c) total -= ---x; \line d) q %= divisor; \line q = q % divisor; \line 2.4 a) int sum, x; \line b) x = 1; \line c) sum = 0; \line d) sum += x; ou sum sum + x; \line c) cout \'ab \ldblquote A soma \'e9: \ldblquote  \'ab sum \'ab endi; \line 2.5 Ver abaixo. \line 1 II Calcular a soma dos inteiros de 1 at\'e9 10 \line 2 #include <iostream> \line 3 \line 4 using std::cout; \line 5 using std::endl; \line 6 \line 7 intma\'edn () \line 8 \{ \line 9 int sum, x; \line 10 x=l; \line 11 sum=O; \line 12 while ( x<= 10) \line 13 sun+=x; \line 14 ++x; \line 15 1 \line 16 cout \'ab \ldblquote A soma \'e9: \ldblquote  \'ab sum \'ab endl; \line 17 return 0; \line 18 \} \line 2.6 a) product = 25, x = 6; \line b) quotient = 0, x = 6; \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 175 \line 2.7 a) cm \'bb x; \line b) cm \'bb y; \line c) i = 1; \line d) power = 1; \line e) power *z x;oupower = power * x; \line f) i++; \line g) if ( i < y \line h) cout \'ab power \'ab endi; \line 2.8 Ver abaixo. \line 1 II eleva x \'e0 pot\'eancia y \line 2 #include <iostream> \line 3 \line 4 using std: :cout; \line 5 using std::cin; \line 6 using std: :endl; \line 7 \line 8 intmain () \line 9 \{ \line 10 int x, y, i, power; \line li \line 12 i1; \line 13 power = 1; \line 14 \line 15 cout \'ab \ldblquote Digite o valor (inteiro) da base: \ldblquote ; \line 16 cm \'bb x; \line 17 \line 18 cout \'ab \ldblquote Digite o valor (inteiro) do expoente: \line 19 cm \'bb y; \line 20 \line 21 while(i<y) \{ \line 22 power = x; \line 23 ++i; \line 24 \line 25 \line 26 cout \'ab power \'ab endl; \line 27 return 0; \line 28 \line 2.9 a) Erro: falta a chave \'e0 direita do corpo do while. \line Corre\'e7\'e3o: adicione a chave \'e0 direita, de fechamento do comando de ++c; \line b) Erro: usada inser\'e7\'e3o em stream em vez de extra\'e7\'e3o de stream. Corre\'e7\'e3o: mude \'ab para \'bb. \line c) Erro: o ponto-e-v\'edrgula depois de else resulta em um erro de l\'f3gica. O segundo comando de sa\'eddasempre ser\'e1 executado. \line Corre\'e7\'e3o: remova o ponto-e-v\'edrgula depois do else. \line 2.10 O valor da vari\'e1vel z nunca \'e9 mudado na estrutura while. Ent\'e3o, se a condi\'e7\'e3o de continua\'e7\'e3o do la\'e7o (z > 0) for true. \'e9 criado um la\'e7o infinito. Para prevenir o la\'e7o infinito, z deve ser decrementada de forma que seu valor, em algum momento, se torne menor que O. \line 2.11 a) Falsa. Ocaso default \'e9 opcional. Se nenhuma a\'e7\'e3o default \'e9 necess\'e1ria, ent\'e3o n\'e3o h\'e1 necessidade de um caso \line default. \line b) Falsa. O comando break \'e9 usado para sair da estrutura switch. O comando break n\'e3o \'e9 necess\'e1rio quando o caso default \'e9 o \'faltimo caso. \line c) Falsa. Ambas as express\'f5es relacionais devem ser true para que a express\'e3o inteira possa ser true quando se usa o operador &&. \line d) Verdadeira. \par
176 C++ COMO PROGRAMAR \line 2.12 a) sum = 0; \line for ( count = 1; count <= 99; count += 2 \line sum += count; \line b) cout \'ab setiosflags (ios::fixed 1 ios::showpoint 1 ios::left) \line\'ab setprecision( 1 ) \'ab setw( 15 ) \'ab 333.546372 \line\'ab setprecision( 2 ) \'ab setw( 15 ) \'ab 333.546372 \line\'ab setprecision( 3 ) \'ab setw( 15 ) \'ab 333.546372 \line\'ab endi; \line A sa\'edda \'e9: \line 333.5 333.55 333.546 \line c) cout \'ab setiosflags( ios::fixed 1 ios::showpoint \line\'ab setprecision( 2 ) \'ab setw( 10 ) \'ab pow( 2.5, 3 \line\'ab endi; \line A sa\'edda \'e9: \line 15.63 \line d) x = 1; \line while ( x < 20 ) \{ \line cout \'ab x; \line if ( x % 5 == O \line cout \'ab endi; \line ei se \line cout \'ab \\t\rquote ; \line e)for (x= 1; x<=20; x++ ) \{ \line cout \'ab x; \line if ( x % 5 == O \line cout \'ab endi; \line eise \line cout \'ab \lquote\\t\rquote ; \line ou \line for ( x = 1; x <= 20; x++) \line if ( x % 5 == O \line cout \'ab x \'ab endi; \line eise \line cout \'ab x \'ab \lquote\\t\rquote ; \line 2.13 a) Erro: o ponto-e-v\'edrgula depois do cabe\'e7alho while causa um la\'e7o infinito. Corre\'e7\'e3o: substitua o ponto-e-v\'edrgula por \line uma \{ ou remova tanto os ; como a \}. \line b) Erro: usar um n\'famero de ponto flutuante para controlar uma estrutura de repeti\'e7\'e3o for. Corre\'e7\'e3o: use um inteiro e \line execute o c\'e1lculo apropriado, a fim de obter os valores que voc\'ea deseja. \line for ( y = i; y 10; y++ \line cout \'ab ( staticcast< doubie > ( y ) / 10 ) \'ab endi; \line e) Erro: comando break faltando nos comandos para o primeiro case. \line Corre\'e7\'e3o: acrescente um comando break no fim dos comandos pertencentes ao primeiro case. Note que isto n\'e3o \'e9 necessariamente um erro se o programador quiser que os comandos do case 2: sejam executados toda vez que os comandos do case 1: sejam executados. \line d) Erro: operador relacional impr\'f3prio usado na condi\'e7\'e3o de continua\'e7\'e3o de repeti\'e7\'e3o do whiie. Corre\'e7\'e3o: use < em lugar de <ou mude 10 para 11. \line Exerc\'edcios \line Os Exerc\'edcios 2.14 a 2.38 correspondem \'e0s Se\'e7\'f5es 2.1 a 2.12. \line Os Exerc\'edcios 2.39 a 2.63 correspondem \'e0s Se\'e7\'f5es 2.13 a 2.21. \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 177 \line 2.14 Identifique e corrija o(s) erro(s) em cada um dos seguintes comandos: \line a) if (age >= 65); \line cout \'ab \ldblquote Idade \'e9 maior que ou igual a 65\rdblquote  \'ab endl; \line else \line cout \'ab \ldblquote Idade \'e9 menor que 65 \'ab endi\rdblquote ; \line b) if ( age >= 65 \line cout \'ab \ldblquote Idade \'e9 maior que ou igual a 65\rdblquote  \'ab endi; \line else; \line cout \'ab \ldblquote Idade \'e9 menor que 65 \'ab endl\rdblquote ; \line c) int x = 1, total; \line while ( x < 10 ) \{ \line total + x; \line d) While ( x <= 100) \line total += x; \line e) while ( y > O ) \{ \line cout \'ab y \'ab endi; \line ++y; \line 2.15 O que \'e9 impresso pelo seguinte programa? \line 1 #include <iostreain> \line 2 \line 3 using std::cout; \line 4 using std::endl; \line 5 \line 6 intmain () \line 7 \{ \line 8 int y, x = 1, total = 0; \line 9 \line 10 while (x<10) \{ \line li yx*x; \line 12 cout \'ab y \'ab endl; \line 13 total += y; \line 14 \line 15 \} \line 16 \line 17 cout \'ab \ldblquote O total \'e9 \ldblquote  \'ab total \'ab endi; \line 18 return 0; \line 19 \} \line Para os Exerc\'edcios 2.16 a 2.19 execute cada um destes passos: \line a) Leia a defini\'e7\'e3o do problema. \line b) Formule o algoritmo usando pseudoc\'f3digo e o refinamento top-down, passo a passo. \line c) Escreva um programa em C++. \line d) Teste, depure e execute o programa em C++. \line 2.16 Os motoristas est\'e3o preocupados com a quilometragem obtida por seus autom\'f3veis. Um motorista fez um controle de v\'e1rios tanques de gasolina gastos, anotando os quil\'f4metros de rodagem obtidos por tanque. Desenvolva um programa em \line que recebe como entrada os quil\'f4metros rodados e os litros gastos para cada tanque. O programa deve calcular e exibir os quil\'f4metros por litro obtidos para cada tanque. Depois de processar todas as informa\'e7\'f5es fornecidas, o programa deve calcular e imprimir os quil\'f4metros por litro obtidos por todos os tanques combinados (m\'e9dia). \par
178 C++ COMO PROGRAMAR \par
Digite os litros usados (-1 para fim): 12.8 \line Digite os quil\'f4metros dirigidos: 287 \line Os quil\'f4metros/litro para este tanque foram 22.421875 \line Digite os litros usados (-1 para fim) : 10.3 \line Digite os quil\'f4metros dirigidos: 200 \line Os quil\'f4metros/litro para este tanque foram 19.417475 \line Digite os litros usados (-1 para fim): 5 \line Digite os quil\'f4metros dirigidos: 120 \line Os quil\'f4metros/litro para este tanque foram 24.000000 \line Digite os litros usados (-1 para fim) : -1 \line A m\'e9dia geral de quil\'f4metros/litro foi 21.601423 \line 2.17 Desenvolva um programa em C++ que determinar\'e1 se um cliente de uma loja de departamentos excedeu o limite de cr\'e9dito em conta corrente. Para cada cliente, os seguintes fatos est\'e3o dispon\'edveis: \line a) N\'famero da conta (um inteiro) \line b) Saldo no princ\'edpio do m\'eas \line c) Total de todos os itens comprados a cr\'e9dito por este cliente neste m\'eas \line d) Total de todos os cr\'e9ditos do cliente nesta conta neste m\'eas \line e) Limite de cr\'e9dito permitido \line O programa deve receber como entrada cada um destes fatos, calcular o novo saldo (= saldo inicial + d\'e9bitos - cr\'e9ditos) e \line determinar se o novo saldo excede o limite de cr\'e9dito do cliente. Para aqueles clientes cujo limite de cr\'e9dito for excedido, o \line programa deve exibir o n\'famero da conta do cliente, o limite de cr\'e9dito, o novo saldo e a mensagem \ldblquote Limite de cr\'e9dito excedido.\rdblquote  \line Digite n\'famero da conta (-1 para encerrar): 100 \line Digite saldo inicial: 5394.78 \line Digite d\'e9bitos totais: 1000.00 \line Digite cr\'e9ditos totais: 500.00 \line Digite limite de cr\'e9dito: 5500.00 \line Conta: 100 \line Limite de cr\'e9dito: 5500.00 \line Saldo: 5894.78 \line Limite de cr\'e9dito excedido. \line Digite n\'famero da conta (-1 para encerrar): 200 \line Digite saldo inicial: 1000.00 \line Digite d\'e9bitos totais: 123.45 \line Digite cr\'e9ditos totais: 321.00 \line Digite limite de cr\'e9dito: 1500.00 \line Digite n\'famero da conta (-1 para encerrar): 300 \line Digite saldo inicial: 500.00 \line Digite d\'e9bitos totais: 274.73 \line Digite cr\'e9ditos totais: 100.00 \line Digite limite de cr\'e9dito: 800.00 \line Digite n\'famero da conta (-1 para encerrar): -1 \line 2.18 Uma grande empresa qu\'edmica paga a seu pessoal de vendas com base em comiss\'e3o. O pessoal de vendas recebe $200 por semana mais 9% de suas vendas brutas daquela semana. Por exemplo, um vendedor que vende $5000 em subst\'e2ncias qu\'edmicas em uma semana recebe $200 mais 9% de $5000, ou um total de $650. Desenvolva um programa em C++ que recebe como entrada as vendas brutas de cada vendedor na semana anterior e que calcula e exibe o sal\'e1rio daquele vendedor. Processe os n\'fameros de cada vendedor um de cada vez. \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 179 \line Digite vendas em d\'f3lares (-1 para encerrar ): 5000.00 \line Sal\'e1rio \'e9: $650.00 \line Digite vendas em d\'f3lares (-1 para encerrar ): 6000.00 \line Sal\'e1rio \'e9: $740.00 \line Digite vendas em d\'f3lares (-1 para encerrar ): 7000.00 \line Sal\'e1rio \'e9: $830.00 \line Digite vendas em d\'f3lares (-1 para encerrar ): -l \line 2.19 Desenvova um programa em C++ que determinara o pagamento bruto para cada um de vazios empregados. A empresa paga o sal\'e1rio-hora \ldblquote normal\rdblquote  para as primeiros 40 horas trabalhadas por cada empregado e paga \ldblquote uma vez e meia\rdblquote  o sal\'e1rio-hora normal para todas as horas excedentes a 40 horas. Voc\'ea recebe uma lista dos empregados da empresa, o n\'famero de horas que cada empregado trabalhou na semana anterior e o sal\'e1rio-hora de cada empregado. Seu programa deve receber estas informa\'e7\'f5es como entrada para cada empregado e deve determinar e exibir o valor bruto a ser pago para o empregado. \line Digite horas trabalhadas (-1 para encerrar ): 39 \line Digite sal\'e1rio-hora do trabalhador ($00.00): 10.00 \line O sal\'e1rio \'e9 $390.00 \line Digite horas trabalhadas (-1 para encerrar ): 40 \line Digite sal\'e1rio-hora do trabalhador ($00.00): 10.00 \line O sal\'e1rio \'e9 $400.00 \line Digite horas trabalhadas (-1 para encerrar ): 41 \line Digite sal\'e1rio-hora do trabalhador ($00.00): 10.00 \line O sal\'e1rio \'e9 $415.00 \line Digite horas trabalhadas (-1 para encerrar ): -1 \line 2.20 O processo de achar o maior n\'famero (i.e., o m\'e1ximo de um grupo de n\'fameros) \'e9 usado freq\'fcentemente em aplica\'e7\'f5es de computador. Por exemplo, um programa que determina o vencedor de uma competi\'e7\'e3o de vendas receberia como entrada o n\'famero de unidades vendidas por cada vendedor. O vendedor que vende mais unidades ganha a competi\'e7\'e3o. Escreva um programa em pseudoc\'f3digo e, ent\'e3o, um programa em C++, que recebe como entrada uma s\'e9rie de tO n\'fameros e que determina e imprime o maior dos n\'fameros. Sugest\'e3o: seu programa deve usar tr\'eas vari\'e1veis como segue: \line counter: Um contador para contar at\'e9 10 (i.e., para manter o controle de quantos n\'fameros foram fornecidos como entrada e para determinar quando todos os tO n\'fameros foram processados). \line number: O n\'famero corrente efetivo fornecido como entrada para o programa. \line largest: O maior n\'famero encontrado at\'e9 agora \line 2.21 Escreva um programa em C++ que utiliza la\'e7os e a seq\'fc\'eancia de escape para marcas de tabula\'e7\'e3o, \\t, para imprimir a seguinte tabela de valores: \line N 10*N 100*N 1000*N \line 1 10 100 1000 \line 2 20 200 2000 \line 3 30 300 3000 \line 4 40 400 4000 \line 5 50 500 5000 \line 2.22 Usando uma abordagem semelhante \'e0 do Exerc\'edcio 2.20, ache os dois maiores valores dos 10 n\'fameros. Nota: voc\'ea deve fornecer cada n\'famero como entrada somente uma vez. \line 2.23 Modifique o programa na Fig. 2.11 para validar as entradas do mesmo. Em qualquer entrada, se o valor entrado for diferente de 1 ou 2, execute um ciclo de espera at\'e9 que o usu\'e1rio entre um valor correto. \par
180 C++ COMO PROGRAMAR \line 2.24 O que imprime o seguinte programa? \line 1 #include <iostream> \line 2 \line 3 using std::cout; \line 4 using std;:encil; \line 5 \line 6 int main( \line 7 \{ \line 8 int count = 1; \line 9 \line 10 while ( count < 10 \line 11 cout\'ab ( count % 2 ? ****\ldblquote  : \line 12 \'abendi; \line 13 ++count; \line 14 ) \line 15 \line 16 return O; \line 17 \line 2.25 O que imprime o seguinte programa? \line 1 #include <iostream> \line 2 \line 3 using std::cout; \line 4 using std::endl; \line 5 \line 6 intmain () \line 7 \{ \line 8 int row = 10, column; \line 9 \line 10 while ( row > 1 \line 11 column = 1; \line 12 \line 13 while ( co1urin < 10 \line 14 cout \'ab ( row % 2 ? \ldblquote <\ldblquote  \line 15 ++co1imn; \line 16 \} \line 17 \line 18 --row; \line 19 cout \'ab endi; \line 20 \} \line 21 \line 22 return 0; \line 23 \line 2.26 (Outro problema de \ldblquote else sem correspondente\rdblquote ) Determine a sa\'edda para cada um dos seguintes itens quando x \line\'e9 9 e y \'e9 11 e quando x \'e9 11 e y \'e9 9. Note que o compilador ignora a indenta\'e7\'e3o em um programa em C++. Al\'e9m disso, \line o compilador de C++ sempre associa um else com o if anterior a menos que seja instru\'eddo para fazer o contr\'e1rio pela \line coloca\'e7\'e3o de chaves \{ \}. Como, \'e0 primeira vista, o programador pode n\'e3o estar certo sobre a qual if um else \line corresponde, isto \'e9 conhecido como o problema de \ldblquote else sem correspondente\rdblquote . Eliminamos a indenta\'e7\'e3o do c\'f3digo a \line seguir para tornar o problema mais interessante. (Sugest\'e3o: aplique as conven\'e7\'f5es de indenta\'e7\'e3o que voc\'ea aprendeu.) \line a) if (x < 10 ) \line if (y > 10 ) \line cout \'ab\ldblquote *****\ldblquote  \'abendi; \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 181 \line else \line cout \'ab\ldblquote #####\ldblquote  \'abendi; \line cout \'ab\ldblquote $$$$$\ldblquote  \'abendi; \line b) if ( x < 10 \line if ( y > 10 \line cout \'ab\ldblquote *****\ldblquote  \'abendi; \line else \{ \line cout \'ab\ldblquote #####\ldblquote\'abendl; \line cout \'ab\ldblquote $$$$$\ldblquote  \'abendi; \line 2.27 (Outro problema de \ldblquote else sem correspondente\rdblquote ) Modifique o c\'f3digo seguinte para produzir a saiaa mostraaa. Use t\'e9cnicas apropriadas de indenta\'e7\'e3o. Voc\'ea n\'e3o pode fazer qualquer mudan\'e7a, exceto inserir chaves. O compilador ignora a indenta\'e7\'e3o em um programa em C++. Eliminamos a indenta\'e7\'e3o do c\'f3digo seguinte para tomar o problema mais interessante. Nota: \'e9 poss\'edvel que nenhuma modifica\'e7\'e3o seja necess\'e1ria. \line if (y == 8 ) \line if (x == 5 \line cout \'ab \ldblquote @@@@@\ldblquote  \'abendl; \line else \line cout \'ab \ldblquote #####\ldblquote  \'ab endi; \line cout \'ab \ldblquote $$$$$\ldblquote  \'ab endi; \line cout \'ab \ldblquote &&&&&\ldblquote  \'ab endi; \line a) Assumindo-se que x = 5 e y = 8, \'e9 produzida a seguinte sa\'edda. \par
2.28 Escreva um programa que l\'ea o tamanho do lado de um quadrado e ent\'e3o imprime um quadrado daquele tamanho com asteriscos e espa\'e7os em branco. Seu programa deve funcionar para quadrados com lados de todos os tamanhos entre 1 e 20. Por exemplo, se seu programa l\'ea um tamanho de 5, deve imprimir \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1275\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx8946\pard\intbl b) \cell Assumindo-se que x = 5 e y = 8, \'e9 produzida a seguinte sa\'edda. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx128\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1275\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx8946\pard\intbl\cell @@@@@ \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1275\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx8946\pard\intbl e) \cell Assumindo-se que x = 5 e y = 8, \'e9 produzida a seguinte sa\'edda. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1275\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx8946\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 @@@@@ \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1275\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx8946\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 &&&&& \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1275\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx8946\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 d) \cell Assumindo-se que x = 5 e y = , \'e9 produzida a seguinte sa\'edda. Nota: os \'faltimos tr\'eas comandos de sa\'edda ap\'f3s o else s\'e3o todos partes de um comando composto. \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1275\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx8946\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 ##### $$$$$ \cell\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1275\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx8946\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 &&&&& \cell\cell\row\pard\par
\pard\sb100\sa240 i-+ COMO PROGRAMAR \line -.- \line * * \line 2.29 Um pal\'edndromo \'e9 um n\'famero ou uma frase de um texto que, lido ao contr\'e1rio, \'e9 o mesmo que lido normalmente. Por exemplo, cada um dos seguintes inteiros de cinco d\'edgitos s\'e3o pal\'edndromos: 12321, 55555, 45554 e 11611. Escreva um programa que l\'ea um inteiro de cinco d\'edgitos e determina se ele \'e9 um pal\'edndromo. (Sugest\'e3o: use os operadores divis\'e3o e m\'f3dulo para separar os d\'edgitos de um n\'famero). \line 2.30 Forne\'e7a um inteiro contendo somente Os e is (i.e., um inteiro \ldblquote bin\'e1rio\rdblquote ) e imprima seu equivalente decimal. (Sugest\'e3o: \line use os operadores m\'f3dulo e divis\'e3o para \ldblquote pegar\rdblquote  os d\'edgitos do n\'famero bin\'e1rio, um de cada vez, da direita para a esquerda. Da mesma maneira que no sistema de numera\'e7\'e3o decimal, no qual o d\'edgito mais \'e0 direita tem um valor posicional de 1 e o pr\'f3ximo d\'edgito \'e0 esquerda tem um valor posicional de 10, depois 100, depois 1000, etc., no sistema numera\'e7\'e3o bin\'e1rio o d\'edgito mais \'e0 direita tem um valor posicional de l,o pr\'f3ximo d\'edgito \'e0 esquerda tem um valor posicional de 2, depois 4, depois 8, etc. Assim, o n\'famero decimal 234 pode ser interpretado como 4 * 1 + 3 * 10 + 2 * 100. O equivalente decimal do n\'famero bin\'e1rio 1101 \'e9: 1 * 1+0*2+1 *4+i*8ou 1+O+4+8ou13). \line 2.31 Escreva um programa que exibe o seguinte padr\'e3o de tabuleiro de damas \par
Seu programa deve usar somente tr\'eas comandos de sa\'edda, um de cada uma das formas seguintes: \line cout \'ab \ldblquote * \line cout\'ab \line cout \'ab endi; \line 2.32 Escreva um programa que fica imprimindo os m\'faltiplos do inteiro 2, ou seja, 2, 4, 8, 16, 32, 64, etc. Seu la\'e7o n\'e3o deve terminar (i.e., voc\'ea deve criar um la\'e7o infinito). O que acontece quando voc\'ea executa este programa? \line 2.33 Escreva um programa que l\'ea o raio de um c\'edrculo (como valor double) e calcula e imprime o di\'e2metro, a circunfer\'eancia e a \'e1rea. Use o valor 3,14159 para it. \line 2.34 O que est\'e1 errado com o comando seguinte? Forne\'e7a o comando correto para fazer o que o programador provavelmente estava tentando fazer. \line cout \'ab ++( x + y ); \line 2.35 Escreva um programa que l\'ea tr\'eas valores double diferentes de zero e que determina e imprime se eles podem representar os lados de um tri\'e2ngulo. \line 2.36 Escreva um programa que leia tr\'eas inteiros diferentes de zero e que determina e imprime se eles poderiam ser os lados de um tri\'e2ngulo ret\'e2ngulo. \line 2.37 Uma empresa quer transmitir dados pelo telefone, mas est\'e1 preocupada que seus telefones possam ser grampeados. Todos os seus dados s\'e3o transmitidos como inteiros de quatro d\'edgitos. Eles lhe pediram para escrever um programa que codifica \par
\pard\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx608\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx874\pard\intbl * * * * * * * \cell * \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx608\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx874\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 * ** *** * \cell * \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx608\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx874\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 ***** ** \cell * \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx608\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx874\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 * * * * * * * \cell * \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx608\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx874\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 ******* \cell * \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx608\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx874\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 ******* \cell * \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx608\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx874\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 * * * * * * * \cell * \cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx608\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx874\pard\intbl\brdrl\brdrs\brdrw10 \brdrt\brdrs\brdrw10 \brdrr\brdrs\brdrw10 \brdrb\brdrs\brdrw10 * ** ** * * \cell * \cell\row\pard\par
\pard\sb100\sa240 CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 183 \line seus dados de forma que possam ser transmitidos com mais seguran\'e7a. Seu programa deve ler um inteiro de quatro d\'edgitos e codific\'e1-lo como segue: substitua cada d\'edgito por (d\'edgito mais 7) m\'f3dulo 10. Ent\'e3o, troque de posi\'e7\'e3o o primeiro d\'edgito com o terceiro e o segundo d\'edgito com o quarto e imprima o inteiro codificado. Escreva um programa separado, que recebe como entrada um inteiro de quatro d\'edgitos codificado e o decodifica para obter o n\'famero original. \line 2.38 O fatorial de um inteiro n, n\'e3o-negativo, \'e9 representado por n! (pronunciado \ldblquote fatorial de n\rdblquote ) e \'e9 definido como segue: \line n! = n (n- 1). (n- 2) . . . . (n-1) (para valores de n maiores que ou iguais a 1) \line e \line n! = 1 (para n 0). \line Por exemplo, 5! = 5.4.3. 2 1, que \'e9 120. \line a) Escreva um programa que l\'ea um inteiro n\'e3o-negativo e que calcula e imprime seu fatorial. \line b) Escreva um programa que estima o valor da constante matem\'e1tica e usando a f\'f3rmula: \line e= 1 \line e) Escreva um programa que calcula o valor de e usando a f\'f3rmula \line e= 1 \line 2.39 Ache o(s) erro(s) em cada um dos seguintes itens: \line a) for ( x = 100, x >= 1, x++ \line cout \'ab x \'ab endl; \line b) O c\'f3digo seguinte deve imprimir se o value inteiro \'e9 par ou \'edmpar: \line switch( value % 2 ) \{ \line case 0: \line cout \'ab \ldblquote Inteiro par\rdblquote  \'ab endi; \line case 1: \line cout \'ab \ldblquote Inteiro \'edmpar\rdblquote  \'ab endi; \line e) O c\'f3digo seguinte deve exibir os inteiros \'edmpares de 19 at\'e9 1: \line for (x19;x>1; x+2) \line cout \'ab x \'ab endi; \line d) O c\'f3digo seguinte deve exibir os inteiros pares de 2 at\'e9 100: \line counter = 2; \line do \{ \line cout \'ab counter \'ab endi; \line counter += 2; \line\} While ( counter < 100 ); \line 2.40 Escreva um programa que soma uma seq\'fc\'eancia de inteiros. Assuma que o primeiro inteiro lido especifica o n\'famero de valores restantes a ser fornecidos. Seu programa deve ler s\'f3 um valor por comando de entrada. Um seq\'fc\'eancia t\'edpica de entrada poderia ser \line 5 100 200 300 400 500 \line onde o n\'famero 5 indica que os 5 valores subseq\'fcentes devem ser somados. \line 2.41 Escreva um programa que calcula e imprime a m\'e9dia de v\'e1rios inteiros. Assuma que o \'faltimo valor digitado \'e9 a sentinela \line 9999. Uma seq\'fc\'eancia t\'edpica de entrada poderia ser \line 10 8 11 7 9 9999 \line indicando que a m\'e9dia de todos os valores precedentes a 9999 deve ser calculada. \par
184 C++ COMO PROGRAMAR \line 2.42 O que faz o seguinte programa? \line 1 #include <iostream> \line 2 \line 3 using std::cout; \line 4 using std::cin; \line 5 using std::endl; \line 6 \line 7 intmain () \line 8 \{ \line 9 int x, y; \line 10 \line 11 cout \'ab \ldblquote Digite dois inteiros no intervalo 1-20: \ldblquote ; \line 12 cin\'bbx\'bby; \line 13 \line 14 for ( int i = 1; i < y; i++ \line 15 \line 16 for ( int j = 1; j <= x; j++ \line 17 cout \'ab \lquote @\lquote ; \line 18 \line 19 cout \'ab endi; \line 20 \line 21 \line 22 return 0; \line 23 \} \line 2.43 Escreva um programa que acha o menor de v\'e1rios inteiros. Suponha que o primeiro valor lido especifica o n\'famero de valores restantes e que o primeiro n\'famero n\'e3o \'e9 um dos inteiros a comparar. \line 2.44 Escreva um programa que calcula e imprime o produto dos inteiros \'edmpares de 1 at\'e9 15. \line 2.45 A fun\'e7\'e3o fatorial \'e9 freq\'fcentemente usada em problemas de probabilidade. O fatorial de um inteiro positivo n (escrito n! \line e pronunciado \ldblquote fatorial de n\rdblquote ) \'e9 igual ao produto dos inteiros positivos de 1 at\'e9 n. Escreva um programa que calcula os fatoriais \line dos inteiros de 1 at\'e9 5. Imprima o resultado em formato de tabela. Que dificuldade pode lhe impedir de calcular o fatorial de 20? \line 2.46 Modifique o programa de juros compostos da Se\'e7\'e3o 2.15 para repetir seus passos para taxas de juros de 5 por cento, 6 por cento, 7 por cento, 8 por cento, 9 por cento e 10 por cento. Use um la\'e7o for para fazer variar a taxa de juros. \line 2.47 Escreva um programa que imprime os padr\'f5es seguintes, separadamente, um abaixo do outro. Use la\'e7os for para gerar os padr\'f5es. Todos os asteriscos (*) devem ser impressos por um \'fanico comando, da forma cout \'ab * ; (isto faz com que os asteriscos sejam impressos lado alado). Sugest\'e3o: os \'faltimos dois padr\'f5es exigem que cada linha comece com um n\'famero apropriado de espa\'e7os em branco. Cr\'e9dito extra: combine seu c\'f3digo dos quatro problemas separados em um \'fanico programa que imprime todos os quatro padr\'f5es lado a lado, fazendo um uso inteligente de la\'e7os for aninhados. \line (A) (B) (C) (D) \line * ********** ********** * \line ** ********* ********* ** \line *** *** \line **** ******* ******* **** \line ***** ****** ****** ***** \line ****** ***** ***** ****** \line ******* **** \line ******** *** *** ******** \line ********* ** ** ********* \line * ********** \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 185 \line 2.4$ Uma aplica\'e7\'e3o interessante de computadores \'e9 desenhar gr\'e1ficos e gr\'e1ficos de barras (\'e0s vezes chamados de \ldblquote histogramas\rdblquote ). Escreva um programa que l\'ea cinco n\'fameros (cada um entre 1 e 30). Para cada n\'famero lido, seu programa deve imprimir uma linha contendo aquela quantidade de asteriscos adjacentes. Por exemplo, se seu programa l\'ea o n\'famero sete, deve imprimir \line *******. \line 2.49 Uma loja de vendas pelo correio vende cinco produtos diferentes, cujos pre\'e7os de varejo s\'e3o: produto 1 - $2.Q8, produto \line 2- $4.50, produto 3 -$9.98, produto 4- $4.49 e produto 5- $6.87. Escreva um programa que l\'ea uma s\'e9rie de pares de n\'fameros, \line como segue: \line a) N\'famero do produto \line b) Quantidade vendida em um dia \line Seu programa deve usar um comando switch para ajudar a determinar o pre\'e7o de varejo para cada produto. Seu programa deve calcular e exibir o valor de varejo total de todos os produtos vendidos na \'faltima semana. \line 2.50 Modifique o programa da Fig. 2.22, de forma que calcule a nota m\'e9dia da turma. Uma nota \lquote A\rquote  vale 4 pontos, \lquote B \lquote vale 3 pontos, etc. \line 2.51 Modifique o programa na Fig. 2.21, de maneira que s\'f3 use inteiros para calcular os juros compostos. (Sugest\'e3o: trate \line todas as quantidades monet\'e1rias como n\'fameros inteiros de centavos. Ent\'e3o, \ldblquote quebre\rdblquote  o resultado em sua parte em d\'f3lares e \line sua parte em centavos, usando as opera\'e7\'f5es divis\'e3o e m\'f3dulo. Insira um ponto entre ambas.) \line 2.52 Assuma que i = 1, j = 2, k = 3 e m = 2. O que imprime cada um dos seguintes comandos? Os par\'eanteses s\'e3o necess\'e1rios em cada caso? \line a) cout\'ab ( i == 1 ) \'ab eridi; \line b) cout\'ab ( j == 3 ) \'ab endi; \line e) cout\'ab ( i >= 1 && j < 4 ) \'ab endi; \line d) cout\'ab ( m <= 99 && k < m ) \'ab endl; \line e) cout\'ab ( j >= i II k==m ) \'ab endl; \line cout\'ab ( k + m < j 3 - j >= k ) \'ab endi; \line g) cout\'ab ( ! ) \'ab endi; \line h) cout\'ab ( ( j - m ) ) \'abendi; \line i) cout\'ab ( ! ( k > m ) ) \'ab eridi; \line 2.53 Escreva um programa que imprime uma tabela dos equivalentes bin\'e1rios, octais e hexadecimais dos n\'fameros decimais, no intervalo 1 a 256. Se n\'e3o estiver familiarizado com estes sistemas de numera\'e7\'e3o, leia primeiro o Ap\'eandice C. \line 2.54 Calcule o valor de t com a s\'e9rie infinita \line 44444 \line = 4--+---\'f7---+. \line 3 5 7 9 11 \line Imprima uma tabela que mostra o valor de it aproximado por 1 termo desta s\'e9rie, por dois termos, por tr\'eas termos, etc. Quantos termos desta s\'e9rie voc\'ea tem que usar antes de obter pela primeira vez 3,14 ? 3,141 ? 3,1415 ? 3,14159 ? \line 2.55 (Triplas pita g\'f3ricas) Um tri\'e2ngulo ret\'e2ngulo pode ter lados que s\'e3o todos inteiros. O conjunto de tr\'eas inteiros que representam os lados de tri\'e2ngulo ret\'e2ngulo \'e9 chamado de tripla pitag\'f3rica. Estes tr\'eas lados devem satisfazer a rela\'e7\'e3o de que a soma dos quadrados de dois dos lados \'e9 igual ao quadrado da hipotenusa. Ache todas as triplas pitag\'f3ricas para ladol, lado2 e hipotenusa, todos menores que 500. Use um la\'e7o for triplamente aninhado que testa todas as possibilidades. Este \'e9 um exemplo de calcular pela \ldblquote for\'e7a bruta\rdblquote . Voc\'ea aprender\'e1, em cursos de Ci\'eancia da Computa\'e7\'e3o mais avan\'e7ados, que existem muitos problemas interessantes para os quais n\'e3o existe nenhuma abordagem algor\'edtmica conhecida al\'e9m de usar a pura for\'e7a bruta. \line 2.56 Uma empresa paga a seus empregados como gerentes (que recebem um sal\'e1rio semanal fixo), trabalhadores horistas (que recebem um valor fixo por hora para as primeiras 40 horas que trabalham e \ldblquote metade a mais\rdblquote , ou veja, 1,5 vezes sua remunera\'e7\'e3o hor\'e1ria normal, por hora extra trabalhada), trabalhadores por comiss\'e3o (que recebem $250 mais 5,7% de sua venda semanal bruta) ou \ldblquote tarefeiros\rdblquote  (que recebem uma quantia fixa de dinheiro por iteni, para cada uma dos itens que produzem - cada tarefeiro nesta empresa trabalha s\'f3 com um tipo de item). Escreva um programa para calcular o pagamento semanal para cada empregado. Voc\'ea n\'e3o sabe o n\'famero de empregados com anteced\'eancia. Cada tipo de empregado tem seu pr\'f3prio c\'f3digo de pagamento: os gerentes t\'eam c\'f3digo de pagamento 1, os horistas t\'eam c\'f3digo 2, os comissionados tem c\'f3digo 3 e os tarefeiros t\'eam c\'f3digo 4. Use um switch para calcular o pagamento de cada empregado baseado no c\'f3digo de paga- \par
\pard\par
\pard\sb100\sa240 186 C++ COMO PROGRAMAR \line mento do empregado. Dentro do switch, solicite ao usu\'e1rio (i.e., o funcion\'e1rio que cuida da folha de pagamento) que digite os dados adequados de que seu programa necessita para calcular o pagamento de cada empregado com base no seu c\'f3digo de pagamento. \line 2.57 (Leis de De Morgan) Neste cap\'edtulo, discutimos os operadores l\'f3gicos && e . As Leis de De Morgan podem \'e0s vezes tornar mais conveniente para n\'f3s a forma de formular uma express\'e3o l\'f3gica. Estas leis afirmam que a express\'e3o (condi\'e7\'e3o] && condi\'e7\'e3o2) \'e9 logicamente equivalente \'e0 express\'e3o (!condi\'e7\'e3ol 1 1 \lquote condi\'e7\'e3o2). Da mesma forma, a express\'e3o ! (condi\'e7\'e3o] 1 condi\'e7\'e3o2) \'e9 logicamente equivalente \'e0 express\'e3o (\lquote condi\'e7\'e3ol && ! condi\'e7\'e3o2). Use as Leis de De Morgan para escrever express\'f5es equivalentes a cada uma das express\'f5es seguintes e, ent\'e3o, escreva um programa para mostrar que a express\'e3o original e a nova express\'e3o, em cada caso, s\'e3o equivalentes: \line a) !(x<5) && !(y>=7) \line b) \lquote (a==b) II \lquote ( g !=5) \line c) !( (x<=8) && (y>4 ) ) \line d)!((i>4)II(j<=6)) \line 2.58 Escreva um programa que imprime a forma losango abaixo. Voc\'ea pode usar comandos de sa\'edda que imprimem um \'fanico asterisco (*) ou um \'fanico espa\'e7o em branco. Maximize seu uso de repeti\'e7\'f5es (com estruturas for aninhadas) e minimize o n\'famero de comandos de sa\'edda. \par
***** \par
* \par
2.59 Modifique o programa que voc\'ea escreveu para o Exerc\'edcio 2.58 para ler um n\'famero \'edmpar, no intervalo de 1 a 19, que especifica o n\'famero de linhas do losango. Seu programa deve, ent\'e3o, exibir um losango do tamanho apropriado. \line 2.60 Uma cr\'edtica ao comando break e ao comando continue \'e9 que n\'e3o s\'e3o estruturados. Realmente, os comandos break e continue podem sempre ser substituidos por comandos estruturados, embora fazer isto seja \'e0s vezes algo complicado. Descreva, em linhas gerais, como voc\'ea eliminaria todos os comandos break de um la\'e7o em um programa e substituiria esse comando por algum equivalente estruturado. (Sugest\'e3o: o comando break sai de um la\'e7o dentro do corpo do la\'e7o. O outro caminho para sair do la\'e7o \'e9 n\'e3o satisfazer o teste de continua\'e7\'e3o do la\'e7o. Considere usar no teste de continua\'e7\'e3o do la\'e7o um segundo teste que indica \ldblquote sa\'edda prematura por causa de uma condi\'e7\'e3o de \lquote quebra\rdblquote ). Use a t\'e9cnica que voc\'ea desenvolveu aqui para remover o comando break do programa da Fig. 2.26. \line 2.61 O que faz o segmento do seguinte programa? \line 1 for ( i = 1; i <= 5; i++ ) \{ \line 2 for(j=1;j<=3;j++)\{ \line 3 for (k = 1; k <= 4; k++) \line 4 cout \'ab\lquote *\lquote ; \line 5 cout \'ab endi; \line 6 \} \line 7 cout \'ab endi; \line 8 \} \line 2.62 Descreva, em linhas gerais, como voc\'ea removeria qualquer comando continue de um la\'e7o em um programa e substituria esse comando por algum equivalente estruturado. Use a t\'e9cnica que voc\'ea desenvolveu aqui para remover o comando continue do programa da Fig. 2.27. \line 2.63 (Can\'e7\'e3o \ldblquote The Twelve Days of Christmas\rdblquote ) Escreva um programa que usa estruturas de repeti\'e7\'e3o e estruturas switch para imprimir a can\'e7\'e3o \ldblquote The Twelve Days of Christmas\rdblquote . Uma estrutura switch deve ser usada para imprimir o dia (i.e., \ldblquote Primeiro,\rdblquote  \ldblquote Segundo,\rdblquote  etc.). Uma estrutura switch separada deve ser usada para imprimir o restante de cada verso. \par
* \par
******* \par
** *** * * * \par
CAP\'cdTULO 2 - ESTRUTURAS DE CONTROLE 187 \line On the first day of Christmas, my true love gave to me a partridge in a pear tree. \line On Lhe second day of Christmas, my true love gave Lo me two turtie doves, \line and a partridge in a pear tree. \line On the third day of Christmas, my true love gave to me three french hens. \line two turtie doves, \line and a partridge in a pear tree. \line On the fourth day of Christmas, my troe love gave Lo me tour calling birds. \line three french bens, \line two turtie doves, \line and a partridge in a pear tree. \line On Lhe tifth day of Christmas, my true love gaveto me five gold rings, \line four calling birds, \line three french hens, \line two turtie doves, \line and a partridge in a pear tree. \line Ou Lhe sixth day of Christmas, my true love gave Lo me six geese aIaying, \line tive gold rings, \line four ca]ling birds, \line three french hens, \line two turtie doves, \line and a partridge in a pear tree. \line On the seventh day of Christmas, my true love gave to me seven swans a-swimming, \line six geese a-laying, \line tive gold rings, \line four calling birds, \line three french bens, \line two turtie doves, \line and a partridge in a pear tree. \line On the eighth day of Christmas, my true love gave Lo me eight maids a-milking. \line seven swans a-swimming, \line six geese a-Iaying. \line five gold rings, \line four calling birds, \line three french bens, \line two turtie doves, \line and a partridge in a pear tree. \line On the ninth day of Christmas, my true love gave to me n\'edne ladies waiting, \line eight maids a-milking, \line seven swans a-swimming, \line six geese a-Iaying, \line five gold rings, \line four calling rings, \line three french bens, \line two turtie doves, \line and a partridge in a pear tree. \line On the tenth day of Christmas, my true love gave to me ten Jords a-leaping, \line nine ladies waiting, \line eight maids a-milking, \line seven swans a-swimming, \line six geese a-laying, \line five gold rings, \line four calling birds, \line three french bens, \line two turtie doves, \line and a partridge in a pear tree, \line On the eeventh day of Christmas, my true love gave Lo me eleven pipers piping. \line teu lords a-leaping, \line nine ladies waiting, \line eight maids a-milking, \par
188 C++ COMO PROGRAMAR \line seven swans a-swimming, \line six geese a4aying, \line five gold rings, \line four caHing birds, \line three french bens, \line two turtie doves, \line and a partridge in a pear tree. \line On the twelfth day of Christmas, my true love gave to me twelve drummers drumming, \line eleven pipers piping, \line ten lords a-leaping, \line nine ladies waiting, \line eight maids a-milking, \line seven swans a-swimming, \line six geese a-laying. \line five gold rings, \line four calling birds, \line three french bens, \line two turtie doves, \line and a partridge in a pear tree. \line O Exerc\'edcio 2.64 corresponde \'e0 Se\'e7\'e3o 2.22, \ldblquote Pensando em objetos\rdblquote . \line 2.64 Descreva em 200 palavras, ou menos, o que \'e9 um autom\'f3vel e o que faz, Liste os substantivos e verbos separadamente. No texto, declaramos que cada substantivo pode corresponder a um objeto que necessita ser constru\'eddo para implementar um sistema, neste caso um carro. Escolha cinco dos objetos que voc\'ea listou e, para cada um, liste v\'e1rios atributos e v\'e1rios comportanientos. Descreva brevemente como estes objetos interagem uns com os outros e outros objetos em sua descri\'e7\'e3o. Voc\'ea acabou de executar v\'e1rios dos passos-chave em um projeto orientado a objetos t\'edpico. \line 2.65 (O Problema de Peter Minuit) Uma lenda conta que, em 1\'f326, Peter Minuit comprou Manhattan por $24,00, dando \line outros bens em troca. Ele fez um bom investimento? Para responder esta pergunta, modifique o programa de juros compostos da \line Fig. 2.21 para come\'e7ar com um principal de $24,00 e para calcular a quantia paga em juros sobre o dep\'f3sito se esse dinheiro \line continuasse aplicado, em dep\'f3sito, at\'e9 este ano (374 anos, at\'e9 2000). Rode o programa com taxas de juro de de 5%, 6%, 7%, 8%, \line 9% e 10%, para observar as maravilhas dos juros compostos. \par
\pard\lang1033\par
}
 